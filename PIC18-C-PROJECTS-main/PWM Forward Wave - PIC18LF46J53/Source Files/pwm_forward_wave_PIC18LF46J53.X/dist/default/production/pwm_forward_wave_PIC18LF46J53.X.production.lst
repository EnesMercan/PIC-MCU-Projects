

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Oct 03 09:31:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18LF46J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.31
    17                           ; Generated 13/10/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18LF46J53 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _CCP4CON	set	3858
    52  0000                     _CCP4CONbits	set	3858
    53  0000                     _CCPR4L	set	3859
    54  0000                     _TRISB	set	3987
    55  0000                     _T2CONbits	set	4042
    56  0000                     _PR2	set	4043
    57  0000                     _LATB	set	3978
    58                           
    59                           ; #config settings
    60                           
    61                           	psect	cinit
    62  0000F2                     __pcinit:
    63                           	callstack 0
    64  0000F2                     start_initialization:
    65                           	callstack 0
    66  0000F2                     __initialization:
    67                           	callstack 0
    68                           
    69                           ; Clear objects allocated to COMRAM (2 bytes)
    70  0000F2  6A06               	clrf	(__pbssCOMRAM+1)& (0+255),c
    71  0000F4  6A05               	clrf	__pbssCOMRAM& (0+255),c
    72  0000F6                     end_of_initialization:
    73                           	callstack 0
    74  0000F6                     __end_of__initialization:
    75                           	callstack 0
    76  0000F6  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    77  0000F8  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    78  0000FA  0100               	movlb	0
    79  0000FC  EF09  F000         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	bssCOMRAM
    82  000005                     __pbssCOMRAM:
    83                           	callstack 0
    84  000005                     _pwmDutyCycle:
    85                           	callstack 0
    86  000005                     	ds	2
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	callstack 0
    91  000001                     ??_main:
    92  000001                     
    93                           ; 1 bytes @ 0x0
    94  000001                     	ds	4
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 60 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   119 ;;Total ram usage:        4 bytes
   120 ;; Hardware stack levels required when called:    2
   121 ;; This function calls:
   122 ;;		_setPWM
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  000012                     __ptext0:
   130                           	callstack 0
   131  000012                     _main:
   132                           	callstack 29
   133  000012                     
   134                           ;main.c: 62:     LATB = 0;
   135  000012  0E00               	movlw	0
   136  000014  6E8A               	movwf	138,c	;volatile
   137  000016                     
   138                           ;main.c: 63:     setPWM();
   139  000016  EC6E  F000         	call	_setPWM	;wreg free
   140  00001A                     l729:
   141                           
   142                           ;main.c: 67:     {;main.c: 69:         CCPR4L = (uint8_t) pwmDutyCycle;
   143  00001A  C005  FF13         	movff	_pwmDutyCycle,3859	;volatile
   144  00001E                     
   145                           ;main.c: 71:         pwmDutyCycle++;
   146  00001E  4A05               	infsnz	_pwmDutyCycle^0,f,c
   147  000020  2A06               	incf	(_pwmDutyCycle+1)^0,f,c
   148  000022                     
   149                           ;main.c: 73:         if ( (pwmDutyCycle & 0x0200) == 1)
   150  000022  0E00               	movlw	0
   151  000024  6E01               	movwf	??_main^0,c
   152  000026  0E02               	movlw	2
   153  000028  6E02               	movwf	(??_main+1)^0,c
   154  00002A  C005  F003         	movff	_pwmDutyCycle,??_main+2
   155  00002E  C006  F004         	movff	_pwmDutyCycle+1,??_main+3
   156  000032  5001               	movf	??_main^0,w,c
   157  000034  1603               	andwf	(??_main+2)^0,f,c
   158  000036  5002               	movf	(??_main+1)^0,w,c
   159  000038  1604               	andwf	(??_main+3)^0,f,c
   160  00003A  0403               	decf	(??_main+2)^0,w,c
   161  00003C  1004               	iorwf	(??_main+3)^0,w,c
   162  00003E  A4D8               	btfss	status,2,c
   163  000040  EF24  F000         	goto	u11
   164  000044  EF26  F000         	goto	u10
   165  000048                     u11:
   166  000048  EF2A  F000         	goto	l26
   167  00004C                     u10:
   168  00004C                     
   169                           ;main.c: 74:             CCP4CONbits.DC4B1 = 1;
   170  00004C  010F               	movlb	15	; () banked
   171  00004E  8B12               	bsf	18,5,b	;volatile
   172  000050  EF2C  F000         	goto	l737
   173  000054                     l26:
   174                           
   175                           ;main.c: 76:             CCP4CONbits.DC4B1 = 0;
   176  000054  010F               	movlb	15	; () banked
   177  000056  9B12               	bcf	18,5,b	;volatile
   178  000058                     l737:
   179                           
   180                           ; BSR set to: 15
   181                           ;main.c: 78:         if ( (pwmDutyCycle & 0x0100) == 1)
   182  000058  0E00               	movlw	0
   183  00005A  6E01               	movwf	??_main^0,c
   184  00005C  0E01               	movlw	1
   185  00005E  6E02               	movwf	(??_main+1)^0,c
   186  000060  C005  F003         	movff	_pwmDutyCycle,??_main+2
   187  000064  C006  F004         	movff	_pwmDutyCycle+1,??_main+3
   188  000068  5001               	movf	??_main^0,w,c
   189  00006A  1603               	andwf	(??_main+2)^0,f,c
   190  00006C  5002               	movf	(??_main+1)^0,w,c
   191  00006E  1604               	andwf	(??_main+3)^0,f,c
   192  000070  0403               	decf	(??_main+2)^0,w,c
   193  000072  1004               	iorwf	(??_main+3)^0,w,c
   194  000074  A4D8               	btfss	status,2,c
   195  000076  EF3F  F000         	goto	u21
   196  00007A  EF41  F000         	goto	u20
   197  00007E                     u21:
   198  00007E  EF44  F000         	goto	l28
   199  000082                     u20:
   200  000082                     
   201                           ; BSR set to: 15
   202                           ;main.c: 79:             CCP4CONbits.DC4B0 = 1;
   203  000082  8912               	bsf	18,4,b	;volatile
   204  000084  EF45  F000         	goto	l741
   205  000088                     l28:
   206                           
   207                           ; BSR set to: 15
   208                           ;main.c: 81:             CCP4CONbits.DC4B0 = 0;
   209  000088  9912               	bcf	18,4,b	;volatile
   210  00008A                     l741:
   211                           
   212                           ; BSR set to: 15
   213                           ;main.c: 83:         if ( (pwmDutyCycle & 0x0400) == 1)
   214  00008A  0E00               	movlw	0
   215  00008C  6E01               	movwf	??_main^0,c
   216  00008E  0E04               	movlw	4
   217  000090  6E02               	movwf	(??_main+1)^0,c
   218  000092  C005  F003         	movff	_pwmDutyCycle,??_main+2
   219  000096  C006  F004         	movff	_pwmDutyCycle+1,??_main+3
   220  00009A  5001               	movf	??_main^0,w,c
   221  00009C  1603               	andwf	(??_main+2)^0,f,c
   222  00009E  5002               	movf	(??_main+1)^0,w,c
   223  0000A0  1604               	andwf	(??_main+3)^0,f,c
   224  0000A2  0403               	decf	(??_main+2)^0,w,c
   225  0000A4  1004               	iorwf	(??_main+3)^0,w,c
   226  0000A6  A4D8               	btfss	status,2,c
   227  0000A8  EF58  F000         	goto	u31
   228  0000AC  EF5A  F000         	goto	u30
   229  0000B0                     u31:
   230  0000B0  EF5E  F000         	goto	l745
   231  0000B4                     u30:
   232  0000B4                     
   233                           ; BSR set to: 15
   234                           ;main.c: 84:             pwmDutyCycle = 1;
   235  0000B4  0E00               	movlw	0
   236  0000B6  6E06               	movwf	(_pwmDutyCycle+1)^0,c
   237  0000B8  0E01               	movlw	1
   238  0000BA  6E05               	movwf	_pwmDutyCycle^0,c
   239  0000BC                     l745:
   240                           
   241                           ; BSR set to: 15
   242                           ;main.c: 86:         _delay((unsigned long)((50)*(16000000/4000.0)));
   243  0000BC  0E02               	movlw	2
   244  0000BE  6E02               	movwf	(??_main+1)^0,c
   245  0000C0  0E04               	movlw	4
   246  0000C2  6E01               	movwf	??_main^0,c
   247  0000C4  0EBA               	movlw	186
   248  0000C6                     u47:
   249  0000C6  2EE8               	decfsz	wreg,f,c
   250  0000C8  D7FE               	bra	u47
   251  0000CA  2E01               	decfsz	??_main^0,f,c
   252  0000CC  D7FC               	bra	u47
   253  0000CE  2E02               	decfsz	(??_main+1)^0,f,c
   254  0000D0  D7FA               	bra	u47
   255  0000D2  D000               	nop2	
   256  0000D4  EF0D  F000         	goto	l729
   257  0000D8  EF07  F000         	goto	start
   258  0000DC                     __end_of_main:
   259                           	callstack 0
   260                           
   261 ;; *************** function _setPWM *****************
   262 ;; Defined at:
   263 ;;		line 95 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;		None
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg, status,2, status,0
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   281 ;;Total ram usage:        0 bytes
   282 ;; Hardware stack levels used:    1
   283 ;; Hardware stack levels required when called:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text1
   292  0000DC                     __ptext1:
   293                           	callstack 0
   294  0000DC                     _setPWM:
   295                           	callstack 29
   296  0000DC                     
   297                           ;main.c: 97:     PR2 = 255;
   298  0000DC  68CB               	setf	203,c	;volatile
   299                           
   300                           ;main.c: 98:     CCPR4L = (uint8_t) pwmDutyCycle;
   301  0000DE  C005  FF13         	movff	_pwmDutyCycle,3859	;volatile
   302                           
   303                           ;main.c: 99:     T2CONbits.T2CKPS0 = 0;
   304  0000E2  90CA               	bcf	202,0,c	;volatile
   305                           
   306                           ;main.c: 100:     T2CONbits.T2CKPS1 = 1;
   307  0000E4  82CA               	bsf	202,1,c	;volatile
   308  0000E6                     
   309                           ;main.c: 101:     TRISB &= ~(0x10);
   310  0000E6  9893               	bcf	147,4,c	;volatile
   311  0000E8                     
   312                           ;main.c: 102:     T2CONbits.TMR2ON = 1;
   313  0000E8  84CA               	bsf	202,2,c	;volatile
   314  0000EA                     
   315                           ;main.c: 103:     CCP4CON |= 0x0F;
   316  0000EA  0E0F               	movlw	15
   317  0000EC  010F               	movlb	15	; () banked
   318  0000EE  1312               	iorwf	18,f,b	;volatile
   319  0000F0                     
   320                           ; BSR set to: 15
   321  0000F0  0012               	return		;funcret
   322  0000F2                     __end_of_setPWM:
   323                           	callstack 0
   324                           
   325 ;; *************** function _myInterruptHandler *****************
   326 ;; Defined at:
   327 ;;		line 108 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		None
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		Interrupt level 2
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	intcode
   355  000008                     __pintcode:
   356                           	callstack 0
   357  000008                     _myInterruptHandler:
   358                           	callstack 29
   359                           
   360                           ; BSR set to: 15
   361                           ;incstack = 0
   362  000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   363  00000A  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   364  00000C  0011               	retfie		f
   365  00000E                     __end_of_myInterruptHandler:
   366                           	callstack 0
   367  0000                     
   368                           	psect	rparam
   369  0000                     
   370                           	psect	temp
   371  000007                     btemp:
   372                           	callstack 0
   373  000007                     	ds	1
   374  0000                     int$flags	set	btemp
   375  0000                     wtemp8	set	btemp+1
   376  0000                     ttemp5	set	btemp+1
   377  0000                     ttemp6	set	btemp+4
   378  0000                     ttemp7	set	btemp+8
   379                           
   380                           	psect	config
   381                           
   382                           ;Config register CONFIG1L @ 0xFFF8
   383                           ;	Watchdog Timer
   384                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
   385                           ;	PLL Prescaler Selection
   386                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   387                           ;	PLL Enable Configuration Bit
   388                           ;	CFGPLLEN = OFF, PLL Disabled
   389                           ;	Stack Overflow/Underflow Reset
   390                           ;	STVREN = ON, Enabled
   391                           ;	Extended Instruction Set
   392                           ;	XINST = OFF, Disabled
   393  FFF8                     	org	65528
   394  FFF8  BE                 	db	190
   395                           
   396                           ;Config register CONFIG1H @ 0xFFF9
   397                           ;	CPU System Clock Postscaler
   398                           ;	CPUDIV = OSC1, No CPU system clock divide
   399                           ;	Code Protect
   400                           ;	CP0 = OFF, Program memory is not code-protected
   401  FFF9                     	org	65529
   402  FFF9  F7                 	db	247
   403                           
   404                           ;Config register CONFIG2L @ 0xFFFA
   405                           ;	Oscillator
   406                           ;	OSC = HS, HS, USB-HS
   407                           ;	T1OSC/SOSC Power Selection Bits
   408                           ;	SOSCSEL = HIGH, High Power T1OSC/SOSC circuit selected
   409                           ;	EC Clock Out Enable Bit
   410                           ;	CLKOEC = ON, CLKO output enabled on the RA6 pin
   411                           ;	Fail-Safe Clock Monitor
   412                           ;	FCMEN = ON, Enabled
   413                           ;	Internal External Oscillator Switch Over Mode
   414                           ;	IESO = ON, Enabled
   415  FFFA                     	org	65530
   416  FFFA  FC                 	db	252
   417                           
   418                           ;Config register CONFIG2H @ 0xFFFB
   419                           ;	Watchdog Postscaler
   420                           ;	WDTPS = 32768, 1:32768
   421  FFFB                     	org	65531
   422  FFFB  FF                 	db	255
   423                           
   424                           ;Config register CONFIG3L @ 0xFFFC
   425                           ;	DSWDT Clock Select
   426                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
   427                           ;	RTCC Clock Select
   428                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
   429                           ;	Deep Sleep BOR
   430                           ;	DSBOREN = OFF, Disabled
   431                           ;	Deep Sleep Watchdog Timer
   432                           ;	DSWDTEN = OFF, Disabled
   433                           ;	Deep Sleep Watchdog Postscaler
   434                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
   435  FFFC                     	org	65532
   436  FFFC  F3                 	db	243
   437                           
   438                           ;Config register CONFIG3H @ 0xFFFD
   439                           ;	IOLOCK One-Way Set Enable bit
   440                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
   441                           ;	ADC 10 or 12 Bit Select
   442                           ;	ADCSEL = BIT10, 10 - Bit ADC Enabled
   443                           ;	MSSP address masking
   444                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
   445  FFFD                     	org	65533
   446  FFFD  FB                 	db	251
   447                           
   448                           ;Config register CONFIG4L @ 0xFFFE
   449                           ;	Write/Erase Protect Page Start/End Location
   450                           ;	WPFP = PAGE_63, Write Protect Program Flash Page 63
   451                           ;	Write/Erase Protect Configuration Region
   452                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
   453  FFFE                     	org	65534
   454  FFFE  BF                 	db	191
   455                           
   456                           ;Config register CONFIG4H @ 0xFFFF
   457                           ;	Write Protect Disable bit
   458                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
   459                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
   460                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
   461                           ;	Low Speed USB mode with 48 MHz system clock bit
   462                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz USB CLKEN divide-by is set to 8
   463  FFFF                     	org	65535
   464  FFFF  FB                 	db	251
   465                           tosu	equ	0xFFF
   466                           tosh	equ	0xFFE
   467                           tosl	equ	0xFFD
   468                           stkptr	equ	0xFFC
   469                           pclatu	equ	0xFFB
   470                           pclath	equ	0xFFA
   471                           pcl	equ	0xFF9
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           prodh	equ	0xFF4
   477                           prodl	equ	0xFF3
   478                           indf0	equ	0xFEF
   479                           postinc0	equ	0xFEE
   480                           postdec0	equ	0xFED
   481                           preinc0	equ	0xFEC
   482                           plusw0	equ	0xFEB
   483                           fsr0h	equ	0xFEA
   484                           fsr0l	equ	0xFE9
   485                           wreg	equ	0xFE8
   486                           indf1	equ	0xFE7
   487                           postinc1	equ	0xFE6
   488                           postdec1	equ	0xFE5
   489                           preinc1	equ	0xFE4
   490                           plusw1	equ	0xFE3
   491                           fsr1h	equ	0xFE2
   492                           fsr1l	equ	0xFE1
   493                           bsr	equ	0xFE0
   494                           indf2	equ	0xFDF
   495                           postinc2	equ	0xFDE
   496                           postdec2	equ	0xFDD
   497                           preinc2	equ	0xFDC
   498                           plusw2	equ	0xFDB
   499                           fsr2h	equ	0xFDA
   500                           fsr2l	equ	0xFD9
   501                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myInterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myInterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myInterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myInterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myInterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myInterruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myInterruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myInterruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myInterruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myInterruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myInterruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myInterruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myInterruptHandler in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
                                              0 COMRAM     4     4      0
                             _setPWM
 ---------------------------------------------------------------------------------
 (1) _setPWM                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myInterruptHandler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setPWM

 _myInterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       6       1        6.4%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       6        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Oct 03 09:31:57 2021

                         l26 0054                           l36 00F0                           l28 0088  
                         u10 004C                           u11 0048                           u20 0082  
                         u21 007E                           u30 00B4                           u31 00B0  
                         u47 00C6                          l721 00E8                          l723 00EA  
                        l731 001E                          l717 00DC                          l741 008A  
                        l733 0022                          l725 0012                          l719 00E6  
                        l743 00B4                          l735 004C                          l727 0016  
                        l745 00BC                          l737 0058                          l729 001A  
                        l739 0082                          _PR2 000FCB                          wreg 000FE8  
                       _LATB 000F8A                         i2l41 000A                         _main 0012  
                       btemp 0007                         start 000E                 ___param_bank 000000  
                      ?_main 0001                        _TRISB 000F93                        ttemp5 0008  
                      ttemp6 000B                        ttemp7 000F                        status 000FD8  
                      wtemp8 0008              __initialization 00F2                 __end_of_main 00DC  
                     ??_main 0001                __activetblptr 000000                       _CCPR4L 000F13  
 __end_of_myInterruptHandler 000E                       _setPWM 00DC                   __accesstop 0060  
    __end_of__initialization 00F6                ___rparam_used 000001               __pcstackCOMRAM 0001  
                    _CCP4CON 000F12                      ?_setPWM 0001                      __Hparam 0000  
                    __Lparam 0000                      __pcinit 00F2                      __ramtop 0F00  
            __size_of_setPWM 0016                      __ptext0 0012                      __ptext1 00DC  
                  _T2CONbits 000FCA         end_of_initialization 00F6           _myInterruptHandler 0008  
        ?_myInterruptHandler 0001                  _CCP4CONbits 000F12         ??_myInterruptHandler 0001  
             __end_of_setPWM 00F2          start_initialization 00F2                     ??_setPWM 0001  
                __pbssCOMRAM 0005                    __pintcode 0008                     __Hrparam 0000  
                   __Lrparam 0000                __size_of_main 00CA                     int$flags 0007  
__size_of_myInterruptHandler 0006                     intlevel2 0000                 _pwmDutyCycle 0005  
