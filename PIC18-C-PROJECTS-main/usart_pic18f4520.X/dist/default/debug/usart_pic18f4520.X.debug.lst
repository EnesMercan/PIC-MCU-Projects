

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 09 13:15:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4520 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  0002AA                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _data
    63  0002AA  45                 	db	69
    64  0002AB  4E                 	db	78
    65  0002AC  45                 	db	69
    66  0002AD  53                 	db	83
    67  0002AE  20                 	db	32
    68  0002AF  4D                 	db	77
    69  0002B0  45                 	db	69
    70  0002B1  52                 	db	82
    71  0002B2  43                 	db	67
    72  0002B3  41                 	db	65
    73  0002B4  4E                 	db	78
    74  0002B5  20                 	db	32
    75  0002B6  20                 	db	32
    76  0002B7  20                 	db	32
    77  0002B8  20                 	db	32
    78  0002B9  20                 	db	32
    79  0002BA  00                 	db	0
    80  0000                     _LATBbits	set	3978
    81  0000                     _PIR1bits	set	3998
    82  0000                     _INTCONbits	set	4082
    83  0000                     _TXREG	set	4013
    84  0000                     _TRISBbits	set	3987
    85  0000                     _TRISCbits	set	3988
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _SPBRGH	set	4016
    88  0000                     _SPBRG	set	4015
    89  0000                     _BAUDCONbits	set	4024
    90  0000                     _TXSTAbits	set	4012
    91  0000                     _TRMT	set	32097
    92                           
    93                           ; #config settings
    94                           
    95                           	psect	cinit
    96  00026A                     __pcinit:
    97                           	callstack 0
    98  00026A                     start_initialization:
    99                           	callstack 0
   100  00026A                     __initialization:
   101                           	callstack 0
   102                           
   103                           ; Initialize objects allocated to COMRAM (17 bytes)
   104                           ; load TBLPTR registers with __pidataCOMRAM
   105  00026A  0EAA               	movlw	low __pidataCOMRAM
   106  00026C  6EF6               	movwf	tblptrl,c
   107  00026E  0E02               	movlw	high __pidataCOMRAM
   108  000270  6EF7               	movwf	tblptrh,c
   109  000272  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   110  000274  6EF8               	movwf	tblptru,c
   111  000276  EE00  F023         	lfsr	0,__pdataCOMRAM
   112  00027A  EE10 F011          	lfsr	1,17
   113  00027E                     copy_data0:
   114  00027E  0009               	tblrd		*+
   115  000280  CFF5 FFEE          	movff	tablat,postinc0
   116  000284  50E5               	movf	postdec1,w,c
   117  000286  50E1               	movf	fsr1l,w,c
   118  000288  E1FA               	bnz	copy_data0
   119  00028A                     end_of_initialization:
   120                           	callstack 0
   121  00028A                     __end_of__initialization:
   122                           	callstack 0
   123  00028A  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   124  00028C  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   125  00028E  0100               	movlb	0
   126  000290  EFD6  F000         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	dataCOMRAM
   129  000023                     __pdataCOMRAM:
   130                           	callstack 0
   131  000023                     _data:
   132                           	callstack 0
   133  000023                     	ds	17
   134                           
   135                           	psect	cstackCOMRAM
   136  000001                     __pcstackCOMRAM:
   137                           	callstack 0
   138  000001                     ??_high_isr:
   139  000001                     
   140                           ; 1 bytes @ 0x0
   141  000001                     	ds	1
   142  000002                     ??_low_isr:
   143                           
   144                           ; 1 bytes @ 0x1
   145  000002                     	ds	4
   146  000006                     ?___lldiv:
   147                           	callstack 0
   148  000006                     UART_Write@data:
   149                           	callstack 0
   150  000006                     ___lldiv@dividend:
   151                           	callstack 0
   152                           
   153                           ; 4 bytes @ 0x5
   154  000006                     	ds	1
   155  000007                     UART_Write_Text@text:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x6
   159  000007                     	ds	2
   160  000009                     UART_Write_Text@i:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0x8
   164  000009                     	ds	1
   165  00000A                     ___lldiv@divisor:
   166                           	callstack 0
   167                           
   168                           ; 4 bytes @ 0x9
   169  00000A                     	ds	4
   170  00000E                     ___lldiv@quotient:
   171                           	callstack 0
   172                           
   173                           ; 4 bytes @ 0xD
   174  00000E                     	ds	4
   175  000012                     ___lldiv@counter:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x11
   179  000012                     	ds	1
   180  000013                     UART_Init@baudrate:
   181                           	callstack 0
   182                           
   183                           ; 4 bytes @ 0x12
   184  000013                     	ds	4
   185  000017                     ??_UART_Init:
   186                           
   187                           ; 1 bytes @ 0x16
   188  000017                     	ds	8
   189  00001F                     UART_Init@baudrate_calculated:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0x1E
   193  00001F                     	ds	2
   194  000021                     ??_main:
   195                           
   196                           ; 1 bytes @ 0x20
   197  000021                     	ds	2
   198                           
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 48 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   218 ;;      Params:         0       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0
   220 ;;      Temps:          2       0       0       0       0       0       0
   221 ;;      Totals:         2       0       0       0       0       0       0
   222 ;;Total ram usage:        2 bytes
   223 ;; Hardware stack levels required when called: 4
   224 ;; This function calls:
   225 ;;		_UART_Init
   226 ;;		_UART_Write_Text
   227 ;; This function is called by:
   228 ;;		Startup code after reset
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text0
   233  0001AC                     __ptext0:
   234                           	callstack 0
   235  0001AC                     _main:
   236                           	callstack 27
   237  0001AC                     
   238                           ;main.c: 51:     TRISBbits.RB7 = 0;
   239  0001AC  9E93               	bcf	147,7,c	;volatile
   240                           
   241                           ;main.c: 52:     TRISBbits.RB6 = 0;
   242  0001AE  9C93               	bcf	147,6,c	;volatile
   243  0001B0                     
   244                           ;main.c: 54:     UART_Init((uint32_t)9600);
   245  0001B0  0E80               	movlw	128
   246  0001B2  6E13               	movwf	UART_Init@baudrate^0,c
   247  0001B4  0E25               	movlw	37
   248  0001B6  6E14               	movwf	(UART_Init@baudrate+1)^0,c
   249  0001B8  0E00               	movlw	0
   250  0001BA  6E15               	movwf	(UART_Init@baudrate+2)^0,c
   251  0001BC  0E00               	movlw	0
   252  0001BE  6E16               	movwf	(UART_Init@baudrate+3)^0,c
   253  0001C0  EC8C  F000         	call	_UART_Init	;wreg free
   254  0001C4                     l881:
   255                           
   256                           ;main.c: 63:     {;main.c: 64:         _delay((unsigned long)((200)*(10000000/4000.0)));
   257  0001C4  0E03               	movlw	3
   258  0001C6  6E22               	movwf	(??_main+1)^0,c
   259  0001C8  0E8A               	movlw	138
   260  0001CA  6E21               	movwf	??_main^0,c
   261  0001CC  0E56               	movlw	86
   262  0001CE                     u187:
   263  0001CE  2EE8               	decfsz	wreg,f,c
   264  0001D0  D7FE               	bra	u187
   265  0001D2  2E21               	decfsz	??_main^0,f,c
   266  0001D4  D7FC               	bra	u187
   267  0001D6  2E22               	decfsz	(??_main+1)^0,f,c
   268  0001D8  D7FA               	bra	u187
   269  0001DA                     
   270                           ;main.c: 65:         UART_Write_Text(data);
   271  0001DA  0E23               	movlw	low _data
   272  0001DC  6E07               	movwf	UART_Write_Text@text^0,c
   273  0001DE  0E00               	movlw	high _data
   274  0001E0  6E08               	movwf	(UART_Write_Text@text+1)^0,c
   275  0001E2  ECF7  F000         	call	_UART_Write_Text	;wreg free
   276  0001E6  EFE2  F000         	goto	l881
   277  0001EA  EF38  F000         	goto	start
   278  0001EE                     __end_of_main:
   279                           	callstack 0
   280                           
   281 ;; *************** function _UART_Write_Text *****************
   282 ;; Defined at:
   283 ;;		line 73 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;  text            2    6[COMRAM] PTR unsigned char 
   286 ;;		 -> data(17), 
   287 ;; Auto vars:     Size  Location     Type
   288 ;;  i               2    8[COMRAM] int 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   298 ;;      Params:         2       0       0       0       0       0       0
   299 ;;      Locals:         2       0       0       0       0       0       0
   300 ;;      Temps:          0       0       0       0       0       0       0
   301 ;;      Totals:         4       0       0       0       0       0       0
   302 ;;Total ram usage:        4 bytes
   303 ;; Hardware stack levels used: 1
   304 ;; Hardware stack levels required when called: 3
   305 ;; This function calls:
   306 ;;		_UART_Write
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text1
   313  0001EE                     __ptext1:
   314                           	callstack 0
   315  0001EE                     _UART_Write_Text:
   316                           	callstack 27
   317  0001EE                     
   318                           ;main.c: 73: void UART_Write_Text(char *text);main.c: 74: {;main.c: 75:   int i;;main.c:
      +                           76:   for(i=0;text[i]!='\0';i++)
   319  0001EE  0E00               	movlw	0
   320  0001F0  6E0A               	movwf	(UART_Write_Text@i+1)^0,c
   321  0001F2  0E00               	movlw	0
   322  0001F4  6E09               	movwf	UART_Write_Text@i^0,c
   323  0001F6  EF08  F001         	goto	l875
   324  0001FA                     l871:
   325                           
   326                           ;main.c: 77:    UART_Write(text[i]);
   327  0001FA  5009               	movf	UART_Write_Text@i^0,w,c
   328  0001FC  2407               	addwf	UART_Write_Text@text^0,w,c
   329  0001FE  6ED9               	movwf	fsr2l,c
   330  000200  500A               	movf	(UART_Write_Text@i+1)^0,w,c
   331  000202  2008               	addwfc	(UART_Write_Text@text+1)^0,w,c
   332  000204  6EDA               	movwf	fsr2h,c
   333  000206  50DF               	movf	indf2,w,c
   334  000208  EC4A  F001         	call	_UART_Write
   335  00020C  4A09               	infsnz	UART_Write_Text@i^0,f,c
   336  00020E  2A0A               	incf	(UART_Write_Text@i+1)^0,f,c
   337  000210                     l875:
   338  000210  5009               	movf	UART_Write_Text@i^0,w,c
   339  000212  2407               	addwf	UART_Write_Text@text^0,w,c
   340  000214  6ED9               	movwf	fsr2l,c
   341  000216  500A               	movf	(UART_Write_Text@i+1)^0,w,c
   342  000218  2008               	addwfc	(UART_Write_Text@text+1)^0,w,c
   343  00021A  6EDA               	movwf	fsr2h,c
   344  00021C  50DF               	movf	indf2,w,c
   345  00021E  A4D8               	btfss	status,2,c
   346  000220  EF14  F001         	goto	u171
   347  000224  EF16  F001         	goto	u170
   348  000228                     u171:
   349  000228  EFFD  F000         	goto	l871
   350  00022C                     u170:
   351  00022C  0012               	return		;funcret
   352  00022E                     __end_of_UART_Write_Text:
   353                           	callstack 0
   354                           
   355 ;; *************** function _UART_Write *****************
   356 ;; Defined at:
   357 ;;		line 80 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;  data            1    wreg     unsigned char 
   360 ;; Auto vars:     Size  Location     Type
   361 ;;  data            1    5[COMRAM] unsigned char 
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   371 ;;      Params:         0       0       0       0       0       0       0
   372 ;;      Locals:         1       0       0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0       0       0
   374 ;;      Totals:         1       0       0       0       0       0       0
   375 ;;Total ram usage:        1 bytes
   376 ;; Hardware stack levels used: 1
   377 ;; Hardware stack levels required when called: 2
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_UART_Write_Text
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text2
   386  000294                     __ptext2:
   387                           	callstack 0
   388  000294                     _UART_Write:
   389                           	callstack 27
   390                           
   391                           ;incstack = 0
   392                           ;UART_Write@data stored from wreg
   393  000294  6E06               	movwf	UART_Write@data^0,c
   394  000296                     l52:
   395  000296  A2AC               	btfss	4012,1,c	;volatile
   396  000298  EF50  F001         	goto	u11
   397  00029C  EF52  F001         	goto	u10
   398  0002A0                     u11:
   399  0002A0  EF4B  F001         	goto	l52
   400  0002A4                     u10:
   401  0002A4                     
   402                           ;main.c: 83:   TXREG = data;
   403  0002A4  C006  FFAD         	movff	UART_Write@data,4013	;volatile
   404  0002A8  0012               	return		;funcret
   405  0002AA                     __end_of_UART_Write:
   406                           	callstack 0
   407                           
   408 ;; *************** function _UART_Init *****************
   409 ;; Defined at:
   410 ;;		line 26 in file "main.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  baudrate        4   18[COMRAM] const unsigned long 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  baudrate_cal    2   30[COMRAM] unsigned short 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   424 ;;      Params:         4       0       0       0       0       0       0
   425 ;;      Locals:         2       0       0       0       0       0       0
   426 ;;      Temps:          8       0       0       0       0       0       0
   427 ;;      Totals:        14       0       0       0       0       0       0
   428 ;;Total ram usage:       14 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 3
   431 ;; This function calls:
   432 ;;		___lldiv
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text3
   439  000118                     __ptext3:
   440                           	callstack 0
   441  000118                     _UART_Init:
   442                           	callstack 27
   443  000118                     
   444                           ;main.c: 26: void UART_Init(const uint32_t baudrate);main.c: 27: {;main.c: 29:  uint16_t
      +                           baudrate_calculated = (10000000 - baudrate*64)/(baudrate*64);
   445  000118  C013  F017         	movff	UART_Init@baudrate,??_UART_Init
   446  00011C  C014  F018         	movff	UART_Init@baudrate+1,??_UART_Init+1
   447  000120  C015  F019         	movff	UART_Init@baudrate+2,??_UART_Init+2
   448  000124  C016  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+3
   449  000128  0E06               	movlw	6
   450  00012A                     u155:
   451  00012A  90D8               	bcf	status,0,c
   452  00012C  3617               	rlcf	??_UART_Init^0,f,c
   453  00012E  3618               	rlcf	(??_UART_Init+1)^0,f,c
   454  000130  3619               	rlcf	(??_UART_Init+2)^0,f,c
   455  000132  361A               	rlcf	(??_UART_Init+3)^0,f,c
   456  000134  2EE8               	decfsz	wreg,f,c
   457  000136  EF95  F000         	goto	u155
   458  00013A  5017               	movf	??_UART_Init^0,w,c
   459  00013C  0880               	sublw	128
   460  00013E  6E06               	movwf	___lldiv@dividend^0,c
   461  000140  0E96               	movlw	150
   462  000142  5418               	subfwb	(??_UART_Init+1)^0,w,c
   463  000144  6E07               	movwf	(___lldiv@dividend+1)^0,c
   464  000146  0E98               	movlw	152
   465  000148  5419               	subfwb	(??_UART_Init+2)^0,w,c
   466  00014A  6E08               	movwf	(___lldiv@dividend+2)^0,c
   467  00014C  0E00               	movlw	0
   468  00014E  541A               	subfwb	(??_UART_Init+3)^0,w,c
   469  000150  6E09               	movwf	(___lldiv@dividend+3)^0,c
   470  000152  C013  F01B         	movff	UART_Init@baudrate,??_UART_Init+4
   471  000156  C014  F01C         	movff	UART_Init@baudrate+1,??_UART_Init+5
   472  00015A  C015  F01D         	movff	UART_Init@baudrate+2,??_UART_Init+6
   473  00015E  C016  F01E         	movff	UART_Init@baudrate+3,??_UART_Init+7
   474  000162  0E06               	movlw	6
   475  000164                     u165:
   476  000164  90D8               	bcf	status,0,c
   477  000166  361B               	rlcf	(??_UART_Init+4)^0,f,c
   478  000168  361C               	rlcf	(??_UART_Init+5)^0,f,c
   479  00016A  361D               	rlcf	(??_UART_Init+6)^0,f,c
   480  00016C  361E               	rlcf	(??_UART_Init+7)^0,f,c
   481  00016E  2EE8               	decfsz	wreg,f,c
   482  000170  EFB2  F000         	goto	u165
   483  000174  C01B  F00A         	movff	??_UART_Init+4,___lldiv@divisor
   484  000178  C01C  F00B         	movff	??_UART_Init+5,___lldiv@divisor+1
   485  00017C  C01D  F00C         	movff	??_UART_Init+6,___lldiv@divisor+2
   486  000180  C01E  F00D         	movff	??_UART_Init+7,___lldiv@divisor+3
   487  000184  EC3A  F000         	call	___lldiv	;wreg free
   488  000188  C006  F01F         	movff	?___lldiv,UART_Init@baudrate_calculated
   489  00018C  C007  F020         	movff	?___lldiv+1,UART_Init@baudrate_calculated+1
   490  000190                     
   491                           ;main.c: 31:     TXSTAbits.BRGH = 1;
   492  000190  84AC               	bsf	172,2,c	;volatile
   493  000192                     
   494                           ;main.c: 32:     BAUDCONbits.BRG16 = 1;
   495  000192  86B8               	bsf	184,3,c	;volatile
   496  000194                     
   497                           ;main.c: 34:     SPBRG = (baudrate_calculated & 0x00FF);
   498  000194  C01F  FFAF         	movff	UART_Init@baudrate_calculated,4015	;volatile
   499  000198                     
   500                           ;main.c: 35:     SPBRGH = (baudrate_calculated & 0xFF00) >> 8;
   501  000198  5020               	movf	(UART_Init@baudrate_calculated+1)^0,w,c
   502  00019A  6EB0               	movwf	176,c	;volatile
   503  00019C                     
   504                           ;main.c: 38:     TXSTAbits.SYNC = 0;
   505  00019C  98AC               	bcf	172,4,c	;volatile
   506  00019E                     
   507                           ;main.c: 39:     TXSTAbits.TX9 = 0;
   508  00019E  9CAC               	bcf	172,6,c	;volatile
   509  0001A0                     
   510                           ;main.c: 40:     RCSTAbits.SPEN = 1;
   511  0001A0  8EAB               	bsf	171,7,c	;volatile
   512  0001A2                     
   513                           ;main.c: 41:     TRISCbits.RC6 = 1;
   514  0001A2  8C94               	bsf	148,6,c	;volatile
   515  0001A4                     
   516                           ;main.c: 42:     TRISCbits.RC7 = 1;
   517  0001A4  8E94               	bsf	148,7,c	;volatile
   518  0001A6                     
   519                           ;main.c: 43:     RCSTAbits.CREN = 1;
   520  0001A6  88AB               	bsf	171,4,c	;volatile
   521  0001A8                     
   522                           ;main.c: 44:     TXSTAbits.TXEN = 1;
   523  0001A8  8AAC               	bsf	172,5,c	;volatile
   524  0001AA  0012               	return		;funcret
   525  0001AC                     __end_of_UART_Init:
   526                           	callstack 0
   527                           
   528 ;; *************** function ___lldiv *****************
   529 ;; Defined at:
   530 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  dividend        4    5[COMRAM] unsigned long 
   533 ;;  divisor         4    9[COMRAM] unsigned long 
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  quotient        4   13[COMRAM] unsigned long 
   536 ;;  counter         1   17[COMRAM] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  4    5[COMRAM] unsigned long 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   546 ;;      Params:         8       0       0       0       0       0       0
   547 ;;      Locals:         5       0       0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0
   549 ;;      Totals:        13       0       0       0       0       0       0
   550 ;;Total ram usage:       13 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 2
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_UART_Init
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text4
   561  000074                     __ptext4:
   562                           	callstack 0
   563  000074                     ___lldiv:
   564                           	callstack 27
   565  000074  0E00               	movlw	0
   566  000076  6E0E               	movwf	___lldiv@quotient^0,c
   567  000078  0E00               	movlw	0
   568  00007A  6E0F               	movwf	(___lldiv@quotient+1)^0,c
   569  00007C  0E00               	movlw	0
   570  00007E  6E10               	movwf	(___lldiv@quotient+2)^0,c
   571  000080  0E00               	movlw	0
   572  000082  6E11               	movwf	(___lldiv@quotient+3)^0,c
   573  000084  500A               	movf	___lldiv@divisor^0,w,c
   574  000086  100B               	iorwf	(___lldiv@divisor+1)^0,w,c
   575  000088  100C               	iorwf	(___lldiv@divisor+2)^0,w,c
   576  00008A  100D               	iorwf	(___lldiv@divisor+3)^0,w,c
   577  00008C  B4D8               	btfsc	status,2,c
   578  00008E  EF4B  F000         	goto	u121
   579  000092  EF4D  F000         	goto	u120
   580  000096                     u121:
   581  000096  EF83  F000         	goto	l97
   582  00009A                     u120:
   583  00009A  0E01               	movlw	1
   584  00009C  6E12               	movwf	___lldiv@counter^0,c
   585  00009E  EF57  F000         	goto	l831
   586  0000A2                     l829:
   587  0000A2  90D8               	bcf	status,0,c
   588  0000A4  360A               	rlcf	___lldiv@divisor^0,f,c
   589  0000A6  360B               	rlcf	(___lldiv@divisor+1)^0,f,c
   590  0000A8  360C               	rlcf	(___lldiv@divisor+2)^0,f,c
   591  0000AA  360D               	rlcf	(___lldiv@divisor+3)^0,f,c
   592  0000AC  2A12               	incf	___lldiv@counter^0,f,c
   593  0000AE                     l831:
   594  0000AE  AE0D               	btfss	(___lldiv@divisor+3)^0,7,c
   595  0000B0  EF5C  F000         	goto	u131
   596  0000B4  EF5E  F000         	goto	u130
   597  0000B8                     u131:
   598  0000B8  EF51  F000         	goto	l829
   599  0000BC                     u130:
   600  0000BC                     l833:
   601  0000BC  90D8               	bcf	status,0,c
   602  0000BE  360E               	rlcf	___lldiv@quotient^0,f,c
   603  0000C0  360F               	rlcf	(___lldiv@quotient+1)^0,f,c
   604  0000C2  3610               	rlcf	(___lldiv@quotient+2)^0,f,c
   605  0000C4  3611               	rlcf	(___lldiv@quotient+3)^0,f,c
   606  0000C6  500A               	movf	___lldiv@divisor^0,w,c
   607  0000C8  5C06               	subwf	___lldiv@dividend^0,w,c
   608  0000CA  500B               	movf	(___lldiv@divisor+1)^0,w,c
   609  0000CC  5807               	subwfb	(___lldiv@dividend+1)^0,w,c
   610  0000CE  500C               	movf	(___lldiv@divisor+2)^0,w,c
   611  0000D0  5808               	subwfb	(___lldiv@dividend+2)^0,w,c
   612  0000D2  500D               	movf	(___lldiv@divisor+3)^0,w,c
   613  0000D4  5809               	subwfb	(___lldiv@dividend+3)^0,w,c
   614  0000D6  A0D8               	btfss	status,0,c
   615  0000D8  EF70  F000         	goto	u141
   616  0000DC  EF72  F000         	goto	u140
   617  0000E0                     u141:
   618  0000E0  EF7B  F000         	goto	l841
   619  0000E4                     u140:
   620  0000E4  500A               	movf	___lldiv@divisor^0,w,c
   621  0000E6  5E06               	subwf	___lldiv@dividend^0,f,c
   622  0000E8  500B               	movf	(___lldiv@divisor+1)^0,w,c
   623  0000EA  5A07               	subwfb	(___lldiv@dividend+1)^0,f,c
   624  0000EC  500C               	movf	(___lldiv@divisor+2)^0,w,c
   625  0000EE  5A08               	subwfb	(___lldiv@dividend+2)^0,f,c
   626  0000F0  500D               	movf	(___lldiv@divisor+3)^0,w,c
   627  0000F2  5A09               	subwfb	(___lldiv@dividend+3)^0,f,c
   628  0000F4  800E               	bsf	___lldiv@quotient^0,0,c
   629  0000F6                     l841:
   630  0000F6  90D8               	bcf	status,0,c
   631  0000F8  320D               	rrcf	(___lldiv@divisor+3)^0,f,c
   632  0000FA  320C               	rrcf	(___lldiv@divisor+2)^0,f,c
   633  0000FC  320B               	rrcf	(___lldiv@divisor+1)^0,f,c
   634  0000FE  320A               	rrcf	___lldiv@divisor^0,f,c
   635  000100  2E12               	decfsz	___lldiv@counter^0,f,c
   636  000102  EF5E  F000         	goto	l833
   637  000106                     l97:
   638  000106  C00E  F006         	movff	___lldiv@quotient,?___lldiv
   639  00010A  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
   640  00010E  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
   641  000112  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
   642  000116  0012               	return		;funcret
   643  000118                     __end_of___lldiv:
   644                           	callstack 0
   645                           
   646 ;; *************** function _low_isr *****************
   647 ;; Defined at:
   648 ;;		line 100 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   662 ;;      Params:         0       0       0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0       0       0
   664 ;;      Temps:          4       0       0       0       0       0       0
   665 ;;      Totals:         4       0       0       0       0       0       0
   666 ;;Total ram usage:        4 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; Hardware stack levels required when called: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		Interrupt level 1
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	intcodelo
   677  000018                     __pintcodelo:
   678                           	callstack 0
   679  000018                     _low_isr:
   680                           	callstack 27
   681                           
   682                           ;incstack = 0
   683  000018  8034               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   684  00001A  CFD8 F003          	movff	status,??_low_isr+1
   685  00001E  CFE8 F004          	movff	wreg,??_low_isr+2
   686  000022  CFE0 F005          	movff	bsr,??_low_isr+3
   687  000026                     
   688                           ;main.c: 102:     INTCONbits.GIEL = 0;
   689  000026  9CF2               	bcf	242,6,c	;volatile
   690                           
   691                           ;main.c: 104:     if (PIR1bits.RCIF == 1)
   692  000028  AA9E               	btfss	158,5,c	;volatile
   693  00002A  EF19  F000         	goto	i1u10_21
   694  00002E  EF1B  F000         	goto	i1u10_20
   695  000032                     i1u10_21:
   696  000032  EF2F  F000         	goto	i1l821
   697  000036                     i1u10_20:
   698  000036                     
   699                           ;main.c: 105:     {;main.c: 106:         LATBbits.LATB6 = ~LATBbits.LATB6;
   700  000036  BC8A               	btfsc	138,6,c	;volatile
   701  000038  EF20  F000         	goto	i1u11_21
   702  00003C  EF23  F000         	goto	i1u11_20
   703  000040                     i1u11_21:
   704  000040  0E01               	movlw	1
   705  000042  EF24  F000         	goto	i1u11_26
   706  000046                     i1u11_20:
   707  000046  0E00               	movlw	0
   708  000048                     i1u11_26:
   709  000048  0AFF               	xorlw	255
   710  00004A  6E02               	movwf	??_low_isr^0,c
   711  00004C  3A02               	swapf	??_low_isr^0,f,c
   712  00004E  4602               	rlncf	??_low_isr^0,f,c
   713  000050  4602               	rlncf	??_low_isr^0,f,c
   714  000052  508A               	movf	138,w,c	;volatile
   715  000054  1802               	xorwf	??_low_isr^0,w,c
   716  000056  0BBF               	andlw	-65
   717  000058  1802               	xorwf	??_low_isr^0,w,c
   718  00005A  6E8A               	movwf	138,c	;volatile
   719  00005C                     
   720                           ;main.c: 108:         PIR1bits.RCIF = 0;
   721  00005C  9A9E               	bcf	158,5,c	;volatile
   722  00005E                     i1l821:
   723                           
   724                           ;main.c: 111:     INTCONbits.GIEL = 1;
   725  00005E  8CF2               	bsf	242,6,c	;volatile
   726  000060  C005  FFE0         	movff	??_low_isr+3,bsr
   727  000064  C004  FFE8         	movff	??_low_isr+2,wreg
   728  000068  C003  FFD8         	movff	??_low_isr+1,status
   729  00006C  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   730  00006E  0010               	retfie	
   731  000070                     __end_of_low_isr:
   732                           	callstack 0
   733                           
   734 ;; *************** function _high_isr *****************
   735 ;; Defined at:
   736 ;;		line 86 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   750 ;;      Params:         0       0       0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0
   752 ;;      Temps:          1       0       0       0       0       0       0
   753 ;;      Totals:         1       0       0       0       0       0       0
   754 ;;Total ram usage:        1 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		Interrupt level 2
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	intcode
   764  000008                     __pintcode:
   765                           	callstack 0
   766  000008                     _high_isr:
   767                           	callstack 27
   768                           
   769                           ;incstack = 0
   770  000008  8234               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   771  00000A  ED17  F001         	call	int_func,f	;refresh shadow registers
   772                           
   773                           	psect	intcode_body
   774  00022E                     __pintcode_body:
   775                           	callstack 27
   776  00022E                     int_func:
   777                           	callstack 27
   778  00022E  0006               	pop		; remove dummy address from shadow register refresh
   779  000230                     
   780                           ;main.c: 88:     INTCONbits.GIEH = 0;
   781  000230  9EF2               	bcf	242,7,c	;volatile
   782                           
   783                           ;main.c: 90:     if (PIR1bits.TXIF == 1)
   784  000232  A89E               	btfss	158,4,c	;volatile
   785  000234  EF1E  F001         	goto	i2u8_41
   786  000238  EF20  F001         	goto	i2u8_40
   787  00023C                     i2u8_41:
   788  00023C  EF32  F001         	goto	i2l813
   789  000240                     i2u8_40:
   790  000240                     
   791                           ;main.c: 91:     {;main.c: 93:        LATBbits.LATB7 = ~LATBbits.LATB7;
   792  000240  BE8A               	btfsc	138,7,c	;volatile
   793  000242  EF25  F001         	goto	i2u9_41
   794  000246  EF28  F001         	goto	i2u9_40
   795  00024A                     i2u9_41:
   796  00024A  0E01               	movlw	1
   797  00024C  EF29  F001         	goto	i2u9_46
   798  000250                     i2u9_40:
   799  000250  0E00               	movlw	0
   800  000252                     i2u9_46:
   801  000252  0AFF               	xorlw	255
   802  000254  6E01               	movwf	??_high_isr^0,c
   803  000256  3201               	rrcf	??_high_isr^0,f,c
   804  000258  3201               	rrcf	??_high_isr^0,f,c
   805  00025A  508A               	movf	138,w,c	;volatile
   806  00025C  1801               	xorwf	??_high_isr^0,w,c
   807  00025E  0B7F               	andlw	-129
   808  000260  1801               	xorwf	??_high_isr^0,w,c
   809  000262  6E8A               	movwf	138,c	;volatile
   810  000264                     i2l813:
   811                           
   812                           ;main.c: 96:     INTCONbits.GIEH = 1;
   813  000264  8EF2               	bsf	242,7,c	;volatile
   814  000266  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   815  000268  0011               	retfie		f
   816  00026A                     __end_of_high_isr:
   817                           	callstack 0
   818  0000                     
   819                           	psect	rparam
   820  0000                     
   821                           	psect	temp
   822  000034                     btemp:
   823                           	callstack 0
   824  000034                     	ds	1
   825  0000                     int$flags	set	btemp
   826  0000                     wtemp8	set	btemp+1
   827  0000                     ttemp5	set	btemp+1
   828  0000                     ttemp6	set	btemp+4
   829  0000                     ttemp7	set	btemp+8
   830                           
   831                           	psect	idloc
   832                           
   833                           ;Config register IDLOC0 @ 0x200000
   834                           ;	unspecified, using default values
   835  200000                     	org	2097152
   836  200000  FF                 	db	255
   837                           
   838                           ;Config register IDLOC1 @ 0x200001
   839                           ;	unspecified, using default values
   840  200001                     	org	2097153
   841  200001  FF                 	db	255
   842                           
   843                           ;Config register IDLOC2 @ 0x200002
   844                           ;	unspecified, using default values
   845  200002                     	org	2097154
   846  200002  FF                 	db	255
   847                           
   848                           ;Config register IDLOC3 @ 0x200003
   849                           ;	unspecified, using default values
   850  200003                     	org	2097155
   851  200003  FF                 	db	255
   852                           
   853                           ;Config register IDLOC4 @ 0x200004
   854                           ;	unspecified, using default values
   855  200004                     	org	2097156
   856  200004  FF                 	db	255
   857                           
   858                           ;Config register IDLOC5 @ 0x200005
   859                           ;	unspecified, using default values
   860  200005                     	org	2097157
   861  200005  FF                 	db	255
   862                           
   863                           ;Config register IDLOC6 @ 0x200006
   864                           ;	unspecified, using default values
   865  200006                     	org	2097158
   866  200006  FF                 	db	255
   867                           
   868                           ;Config register IDLOC7 @ 0x200007
   869                           ;	unspecified, using default values
   870  200007                     	org	2097159
   871  200007  FF                 	db	255
   872                           
   873                           	psect	config
   874                           
   875                           ; Padding undefined space
   876  300000                     	org	3145728
   877  300000  FF                 	db	255
   878                           
   879                           ;Config register CONFIG1H @ 0x300001
   880                           ;	Oscillator Selection bits
   881                           ;	OSC = HS, HS oscillator
   882                           ;	Fail-Safe Clock Monitor Enable bit
   883                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   884                           ;	Internal/External Oscillator Switchover bit
   885                           ;	IESO = OFF, Oscillator Switchover mode disabled
   886  300001                     	org	3145729
   887  300001  02                 	db	2
   888                           
   889                           ;Config register CONFIG2L @ 0x300002
   890                           ;	Power-up Timer Enable bit
   891                           ;	PWRT = OFF, PWRT disabled
   892                           ;	Brown-out Reset Enable bits
   893                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   894                           ;	Brown Out Reset Voltage bits
   895                           ;	BORV = 3, Minimum setting
   896  300002                     	org	3145730
   897  300002  19                 	db	25
   898                           
   899                           ;Config register CONFIG2H @ 0x300003
   900                           ;	Watchdog Timer Enable bit
   901                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   902                           ;	Watchdog Timer Postscale Select bits
   903                           ;	WDTPS = 32768, 1:32768
   904  300003                     	org	3145731
   905  300003  1E                 	db	30
   906                           
   907                           ; Padding undefined space
   908  300004                     	org	3145732
   909  300004  FF                 	db	255
   910                           
   911                           ;Config register CONFIG3H @ 0x300005
   912                           ;	CCP2 MUX bit
   913                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   914                           ;	PORTB A/D Enable bit
   915                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   916                           ;	Low-Power Timer1 Oscillator Enable bit
   917                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   918                           ;	MCLR Pin Enable bit
   919                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   920  300005                     	org	3145733
   921  300005  01                 	db	1
   922                           
   923                           ;Config register CONFIG4L @ 0x300006
   924                           ;	Stack Full/Underflow Reset Enable bit
   925                           ;	STVREN = ON, Stack full/underflow will cause Reset
   926                           ;	Single-Supply ICSP Enable bit
   927                           ;	LVP = OFF, Single-Supply ICSP disabled
   928                           ;	Extended Instruction Set Enable bit
   929                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   930                           ;	Background Debugger Enable bit
   931                           ;	DEBUG = 0x1, unprogrammed default
   932  300006                     	org	3145734
   933  300006  81                 	db	129
   934                           
   935                           ; Padding undefined space
   936  300007                     	org	3145735
   937  300007  FF                 	db	255
   938                           
   939                           ;Config register CONFIG5L @ 0x300008
   940                           ;	Code Protection bit
   941                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   942                           ;	Code Protection bit
   943                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   944                           ;	Code Protection bit
   945                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   946                           ;	Code Protection bit
   947                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   948  300008                     	org	3145736
   949  300008  0F                 	db	15
   950                           
   951                           ;Config register CONFIG5H @ 0x300009
   952                           ;	Boot Block Code Protection bit
   953                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   954                           ;	Data EEPROM Code Protection bit
   955                           ;	CPD = OFF, Data EEPROM not code-protected
   956  300009                     	org	3145737
   957  300009  C0                 	db	192
   958                           
   959                           ;Config register CONFIG6L @ 0x30000A
   960                           ;	Write Protection bit
   961                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   962                           ;	Write Protection bit
   963                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   964                           ;	Write Protection bit
   965                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   966                           ;	Write Protection bit
   967                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   968  30000A                     	org	3145738
   969  30000A  0F                 	db	15
   970                           
   971                           ;Config register CONFIG6H @ 0x30000B
   972                           ;	Configuration Register Write Protection bit
   973                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   974                           ;	Boot Block Write Protection bit
   975                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   976                           ;	Data EEPROM Write Protection bit
   977                           ;	WRTD = OFF, Data EEPROM not write-protected
   978  30000B                     	org	3145739
   979  30000B  E0                 	db	224
   980                           
   981                           ;Config register CONFIG7L @ 0x30000C
   982                           ;	Table Read Protection bit
   983                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   984                           ;	Table Read Protection bit
   985                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   986                           ;	Table Read Protection bit
   987                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   988                           ;	Table Read Protection bit
   989                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   990  30000C                     	org	3145740
   991  30000C  0F                 	db	15
   992                           
   993                           ;Config register CONFIG7H @ 0x30000D
   994                           ;	Boot Block Table Read Protection bit
   995                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   996  30000D                     	org	3145741
   997  30000D  40                 	db	64
   998                           tosu	equ	0xFFF
   999                           tosh	equ	0xFFE
  1000                           tosl	equ	0xFFD
  1001                           stkptr	equ	0xFFC
  1002                           pclatu	equ	0xFFB
  1003                           pclath	equ	0xFFA
  1004                           pcl	equ	0xFF9
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           prodh	equ	0xFF4
  1010                           prodl	equ	0xFF3
  1011                           indf0	equ	0xFEF
  1012                           postinc0	equ	0xFEE
  1013                           postdec0	equ	0xFED
  1014                           preinc0	equ	0xFEC
  1015                           plusw0	equ	0xFEB
  1016                           fsr0h	equ	0xFEA
  1017                           fsr0l	equ	0xFE9
  1018                           wreg	equ	0xFE8
  1019                           indf1	equ	0xFE7
  1020                           postinc1	equ	0xFE6
  1021                           postdec1	equ	0xFE5
  1022                           preinc1	equ	0xFE4
  1023                           plusw1	equ	0xFE3
  1024                           fsr1h	equ	0xFE2
  1025                           fsr1l	equ	0xFE1
  1026                           bsr	equ	0xFE0
  1027                           indf2	equ	0xFDF
  1028                           postinc2	equ	0xFDE
  1029                           postdec2	equ	0xFDD
  1030                           preinc2	equ	0xFDC
  1031                           plusw2	equ	0xFDB
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     34      51
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 17
		 -> data(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Write_Text->_UART_Write
    _UART_Init->___lldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     660
                                             32 COMRAM     2     2      0
                          _UART_Init
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      4     2      2     181
                                              6 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     479
                                             18 COMRAM    14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                              4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     22      33       1       40.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      15        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 09 13:15:07 2021

                          l35 01AA                            l52 0296                            l55 02A8  
                          l49 022C                            l97 0106                            u10 02A4  
                          u11 02A0                            bsr 000FE0                           l104 0116  
                         l831 00AE                           l823 0074                           l743 0296  
                         l841 00F6                           l833 00BC                           l825 0084  
                         l745 02A4                           l843 0100                           l835 00C6  
                         l827 009A                           l851 0194                           l837 00E4  
                         l829 00A2                           l861 01A2                           l853 0198  
                         l845 0118                           l839 00F4                           l863 01A4  
                         l855 019C                           l847 0190                           l871 01FA  
                         l865 01A6                           l857 019E                           l849 0192  
                         l873 020C                           l881 01C4                           l867 01A8  
                         l859 01A0                           l875 0210                           l883 01DA  
                         l869 01EE                           l877 01AC                           l879 01B0  
                         u120 009A                           u121 0096                           u130 00BC  
                         u131 00B8                           u140 00E4                           u141 00E0  
                         u170 022C                           u155 012A                           u171 0228  
                         u165 0164                           u187 01CE                           wreg 000FE8  
                        i1l67 0060                          i2l61 0266                          _TRMT 007D61  
                        _data 0023                          _main 01AC                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0034  
                        start 0070                  ___param_bank 000000       __end_of_UART_Write_Text 022E  
                       ?_main 0001               __end_of___lldiv 0118                         i1l821 005E  
                       i1l815 0026                         i1l817 0036                         i1l819 005C  
                       i2l811 0240                         i2l813 0264                         i2l809 0230  
                       _SPBRG 000FAF                         _TXREG 000FAD                   ?_UART_Write 0001  
          __size_of_UART_Init 0094               __end_of_low_isr 0070                         tablat 000FF5  
                       ttemp5 0035                         ttemp6 0038                         ttemp7 003C  
                       status 000FD8                         wtemp8 0035               __initialization 026A  
                __end_of_main 01EE                        ??_main 0021                 __activetblptr 000000  
                      _SPBRGH 000FB0                        i2u8_40 0240                        i2u8_41 023C  
                      i2u9_40 0250                        i2u9_41 024A                        i2u9_46 0252  
           __end_of_UART_Init 01AC              __end_of_high_isr 026A           __size_of_UART_Write 0016  
            ?_UART_Write_Text 0007                     ??___lldiv 000E                        isa$std 000001  
                __pdataCOMRAM 0023                     ??_low_isr 0002                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0080  
     __end_of__initialization 028A                 ___rparam_used 000001                __pcstackCOMRAM 0001  
UART_Init@baudrate_calculated 001F                       i1u10_20 0036                       i1u10_21 0032  
                     i1u11_20 0046                       i1u11_21 0040                       i1u11_26 0048  
                ??_UART_Write 0006                     ?_high_isr 0001                       __Hparam 0000  
                     __Lparam 0000                       ___lldiv 0074            __end_of_UART_Write 02AA  
                     __pcinit 026A                       __ramtop 0600                       __ptext0 01AC  
                     __ptext1 01EE                       __ptext2 0294                       __ptext3 0118  
                     __ptext4 0074                       _low_isr 0018                    ??_high_isr 0001  
              __pintcode_body 022E          end_of_initialization 028A                       int_func 022E  
             ___lldiv@divisor 000A               ___lldiv@counter 0012                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postinc0 000FEE                     _UART_Init 0118  
              UART_Write@data 0006                     _TRISBbits 000F93                     _TRISCbits 000F94  
                   _TXSTAbits 000FAC                   _BAUDCONbits 000FB8                    ?_UART_Init 0013  
               __pidataCOMRAM 02AA      __size_of_UART_Write_Text 0040           start_initialization 026A  
           __size_of_high_isr 0262                     __pintcode 0008                      ?___lldiv 0006  
                 __pintcodelo 0018                   ??_UART_Init 0017                      ?_low_isr 0001  
           ??_UART_Write_Text 0009                      _LATBbits 000F8A                      _PIR1bits 000F9E  
           UART_Init@baudrate 0013                     copy_data0 027E                      __Hrparam 0000  
                    __Lrparam 0000              __size_of___lldiv 00A4              __size_of_low_isr 0058  
                    _high_isr 0008           UART_Write_Text@text 0007                 __size_of_main 0042  
                    isa$xinst 000000                      int$flags 0034                    _INTCONbits 000FF2  
                    intlevel1 0000                      intlevel2 0000              ___lldiv@dividend 0006  
             _UART_Write_Text 01EE              ___lldiv@quotient 000E                    _UART_Write 0294  
            UART_Write_Text@i 0009  
