

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 09 16:42:05 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _PIE1bits	set	3997
    56  0000                     _IPR1bits	set	3999
    57  0000                     _PIR1bits	set	3998
    58  0000                     _INTCONbits	set	4082
    59  0000                     _TXREG	set	4013
    60  0000                     _LATBbits	set	3978
    61  0000                     _PORTB	set	3969
    62  0000                     _TRISBbits	set	3987
    63  0000                     _LATB	set	3978
    64  0000                     _TRISCbits	set	3988
    65  0000                     _RCSTAbits	set	4011
    66  0000                     _SPBRGH	set	4016
    67  0000                     _SPBRG	set	4015
    68  0000                     _BAUDCONbits	set	4024
    69  0000                     _TXSTAbits	set	4012
    70  0000                     _TRMT	set	32097
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  0002FE                     __pcinit:
    76                           	callstack 0
    77  0002FE                     start_initialization:
    78                           	callstack 0
    79  0002FE                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (1 bytes)
    83  0002FE  6A23               	clrf	__pbssCOMRAM& (0+255),c
    84  000300                     end_of_initialization:
    85                           	callstack 0
    86  000300                     __end_of__initialization:
    87                           	callstack 0
    88  000300  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89  000302  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90  000304  0100               	movlb	0
    91  000306  EF3A  F000         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMRAM
    94  000023                     __pbssCOMRAM:
    95                           	callstack 0
    96  000023                     _counter:
    97                           	callstack 0
    98  000023                     	ds	1
    99                           
   100                           	psect	cstackCOMRAM
   101  000001                     __pcstackCOMRAM:
   102                           	callstack 0
   103  000001                     ??_high_isr:
   104  000001                     
   105                           ; 1 bytes @ 0x0
   106  000001                     	ds	1
   107  000002                     ??_low_isr:
   108                           
   109                           ; 1 bytes @ 0x1
   110  000002                     	ds	4
   111  000006                     ??_UART_Send:
   112  000006                     ?___lldiv:
   113                           	callstack 0
   114  000006                     ___lldiv@dividend:
   115                           	callstack 0
   116                           
   117                           ; 4 bytes @ 0x5
   118  000006                     	ds	1
   119  000007                     UART_Send@data:
   120                           	callstack 0
   121                           
   122                           ; 1 bytes @ 0x6
   123  000007                     	ds	3
   124  00000A                     ___lldiv@divisor:
   125                           	callstack 0
   126                           
   127                           ; 4 bytes @ 0x9
   128  00000A                     	ds	4
   129  00000E                     ___lldiv@quotient:
   130                           	callstack 0
   131                           
   132                           ; 4 bytes @ 0xD
   133  00000E                     	ds	4
   134  000012                     ___lldiv@counter:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x11
   138  000012                     	ds	1
   139  000013                     UART_Init@baudrate:
   140                           	callstack 0
   141                           
   142                           ; 4 bytes @ 0x12
   143  000013                     	ds	4
   144  000017                     ??_UART_Init:
   145                           
   146                           ; 1 bytes @ 0x16
   147  000017                     	ds	8
   148  00001F                     UART_Init@baudrate_calculated:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x1E
   152  00001F                     	ds	2
   153  000021                     ??_main:
   154                           
   155                           ; 1 bytes @ 0x20
   156  000021                     	ds	2
   157                           
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 52 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   177 ;;      Params:         0       0       0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0
   179 ;;      Temps:          2       0       0       0       0       0       0
   180 ;;      Totals:         2       0       0       0       0       0       0
   181 ;;Total ram usage:        2 bytes
   182 ;; Hardware stack levels required when called: 4
   183 ;; This function calls:
   184 ;;		_UART_Init
   185 ;;		_UART_Send
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  000074                     __ptext0:
   193                           	callstack 0
   194  000074                     _main:
   195                           	callstack 27
   196  000074                     
   197                           ;main.c: 55:     LATB = 0;
   198  000074  0E00               	movlw	0
   199  000076  6E8A               	movwf	138,c	;volatile
   200  000078                     
   201                           ;main.c: 56:     TRISBbits.RB7 = 0;
   202  000078  9E93               	bcf	147,7,c	;volatile
   203  00007A                     
   204                           ;main.c: 57:     TRISBbits.RB6 = 0;
   205  00007A  9C93               	bcf	147,6,c	;volatile
   206  00007C                     
   207                           ;main.c: 59:     TRISBbits.RB0 = 1;
   208  00007C  8093               	bsf	147,0,c	;volatile
   209  00007E                     
   210                           ;main.c: 60:     TRISBbits.RB1 = 1;
   211  00007E  8293               	bsf	147,1,c	;volatile
   212  000080                     
   213                           ;main.c: 62:     UART_Init((uint32_t)9600);
   214  000080  0E80               	movlw	128
   215  000082  6E13               	movwf	UART_Init@baudrate^0,c
   216  000084  0E25               	movlw	37
   217  000086  6E14               	movwf	(UART_Init@baudrate+1)^0,c
   218  000088  0E00               	movlw	0
   219  00008A  6E15               	movwf	(UART_Init@baudrate+2)^0,c
   220  00008C  0E00               	movlw	0
   221  00008E  6E16               	movwf	(UART_Init@baudrate+3)^0,c
   222  000090  ECFA  F000         	call	_UART_Init	;wreg free
   223  000094                     l919:
   224                           
   225                           ;main.c: 72:     {;main.c: 74:         if ( (PORTB & 0x01) == 1)
   226  000094  A081               	btfss	129,0,c	;volatile
   227  000096  EF4F  F000         	goto	u231
   228  00009A  EF51  F000         	goto	u230
   229  00009E                     u231:
   230  00009E  EF6F  F000         	goto	l925
   231  0000A2                     u230:
   232  0000A2                     
   233                           ;main.c: 75:         {;main.c: 76:             _delay((unsigned long)((50)*(10000000/400
      +                          0.0)));
   234  0000A2  0EA3               	movlw	163
   235  0000A4  6E21               	movwf	??_main^0,c
   236  0000A6  0E55               	movlw	85
   237  0000A8                     u277:
   238  0000A8  2EE8               	decfsz	wreg,f,c
   239  0000AA  D7FE               	bra	u277
   240  0000AC  2E21               	decfsz	??_main^0,f,c
   241  0000AE  D7FC               	bra	u277
   242  0000B0  F000               	nop	
   243  0000B2                     
   244                           ;main.c: 77:             counter += 1;
   245  0000B2  2A23               	incf	_counter^0,f,c
   246                           
   247                           ;main.c: 78:             LATBbits.LATB6 = ~LATBbits.LATB6;
   248  0000B4  BC8A               	btfsc	138,6,c	;volatile
   249  0000B6  EF5F  F000         	goto	u241
   250  0000BA  EF62  F000         	goto	u240
   251  0000BE                     u241:
   252  0000BE  0E01               	movlw	1
   253  0000C0  EF63  F000         	goto	u246
   254  0000C4                     u240:
   255  0000C4  0E00               	movlw	0
   256  0000C6                     u246:
   257  0000C6  0AFF               	xorlw	255
   258  0000C8  6E21               	movwf	??_main^0,c
   259  0000CA  3A21               	swapf	??_main^0,f,c
   260  0000CC  4621               	rlncf	??_main^0,f,c
   261  0000CE  4621               	rlncf	??_main^0,f,c
   262  0000D0  508A               	movf	138,w,c	;volatile
   263  0000D2  1821               	xorwf	??_main^0,w,c
   264  0000D4  0BBF               	andlw	-65
   265  0000D6  1821               	xorwf	??_main^0,w,c
   266  0000D8  6E8A               	movwf	138,c	;volatile
   267                           
   268                           ;main.c: 79:         }
   269  0000DA  EF96  F000         	goto	l931
   270  0000DE                     l925:
   271  0000DE  CF81 F021          	movff	3969,??_main	;volatile
   272  0000E2  90D8               	bcf	status,0,c
   273  0000E4  3221               	rrcf	??_main^0,f,c
   274  0000E6  A021               	btfss	??_main^0,0,c
   275  0000E8  EF78  F000         	goto	u251
   276  0000EC  EF7A  F000         	goto	u250
   277  0000F0                     u251:
   278  0000F0  EF96  F000         	goto	l931
   279  0000F4                     u250:
   280  0000F4                     
   281                           ;main.c: 82:         {;main.c: 83:             _delay((unsigned long)((50)*(10000000/400
      +                          0.0)));
   282  0000F4  0EA3               	movlw	163
   283  0000F6  6E21               	movwf	??_main^0,c
   284  0000F8  0E55               	movlw	85
   285  0000FA                     u287:
   286  0000FA  2EE8               	decfsz	wreg,f,c
   287  0000FC  D7FE               	bra	u287
   288  0000FE  2E21               	decfsz	??_main^0,f,c
   289  000100  D7FC               	bra	u287
   290  000102  F000               	nop	
   291  000104                     
   292                           ;main.c: 84:             counter -= 1;
   293  000104  0623               	decf	_counter^0,f,c
   294                           
   295                           ;main.c: 85:             LATBbits.LATB6 = ~LATBbits.LATB6;
   296  000106  BC8A               	btfsc	138,6,c	;volatile
   297  000108  EF88  F000         	goto	u261
   298  00010C  EF8B  F000         	goto	u260
   299  000110                     u261:
   300  000110  0E01               	movlw	1
   301  000112  EF8C  F000         	goto	u266
   302  000116                     u260:
   303  000116  0E00               	movlw	0
   304  000118                     u266:
   305  000118  0AFF               	xorlw	255
   306  00011A  6E21               	movwf	??_main^0,c
   307  00011C  3A21               	swapf	??_main^0,f,c
   308  00011E  4621               	rlncf	??_main^0,f,c
   309  000120  4621               	rlncf	??_main^0,f,c
   310  000122  508A               	movf	138,w,c	;volatile
   311  000124  1821               	xorwf	??_main^0,w,c
   312  000126  0BBF               	andlw	-65
   313  000128  1821               	xorwf	??_main^0,w,c
   314  00012A  6E8A               	movwf	138,c	;volatile
   315  00012C                     l931:
   316                           
   317                           ;main.c: 88:         UART_Send(counter);
   318  00012C  5023               	movf	_counter^0,w,c
   319  00012E  EC62  F001         	call	_UART_Send
   320  000132                     
   321                           ;main.c: 89:         _delay((unsigned long)((200)*(10000000/4000.0)));
   322  000132  0E03               	movlw	3
   323  000134  6E22               	movwf	(??_main+1)^0,c
   324  000136  0E8A               	movlw	138
   325  000138  6E21               	movwf	??_main^0,c
   326  00013A  0E56               	movlw	86
   327  00013C                     u297:
   328  00013C  2EE8               	decfsz	wreg,f,c
   329  00013E  D7FE               	bra	u297
   330  000140  2E21               	decfsz	??_main^0,f,c
   331  000142  D7FC               	bra	u297
   332  000144  2E22               	decfsz	(??_main+1)^0,f,c
   333  000146  D7FA               	bra	u297
   334  000148  EF4A  F000         	goto	l919
   335  00014C  EF38  F000         	goto	start
   336  000150                     __end_of_main:
   337                           	callstack 0
   338                           
   339 ;; *************** function _UART_Send *****************
   340 ;; Defined at:
   341 ;;		line 102 in file "main.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;  data            1    wreg     unsigned char 
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  data            1    6[COMRAM] unsigned char 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, status,2, status,0
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   355 ;;      Params:         0       0       0       0       0       0       0
   356 ;;      Locals:         1       0       0       0       0       0       0
   357 ;;      Temps:          1       0       0       0       0       0       0
   358 ;;      Totals:         2       0       0       0       0       0       0
   359 ;;Total ram usage:        2 bytes
   360 ;; Hardware stack levels used: 1
   361 ;; Hardware stack levels required when called: 2
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;;		_UART_Send_Text
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text1
   371  0002C4                     __ptext1:
   372                           	callstack 0
   373  0002C4                     _UART_Send:
   374                           	callstack 28
   375                           
   376                           ;incstack = 0
   377                           ;UART_Send@data stored from wreg
   378  0002C4  6E07               	movwf	UART_Send@data^0,c
   379  0002C6                     l61:
   380  0002C6  A2AC               	btfss	4012,1,c	;volatile
   381  0002C8  EF68  F001         	goto	u61
   382  0002CC  EF6A  F001         	goto	u60
   383  0002D0                     u61:
   384  0002D0  EF63  F001         	goto	l61
   385  0002D4                     u60:
   386  0002D4                     
   387                           ;main.c: 105:   TXREG = data;
   388  0002D4  C007  FFAD         	movff	UART_Send@data,4013	;volatile
   389  0002D8                     
   390                           ;main.c: 106:   LATBbits.LATB7 = ~LATBbits.LATB7;
   391  0002D8  BE8A               	btfsc	138,7,c	;volatile
   392  0002DA  EF71  F001         	goto	u71
   393  0002DE  EF74  F001         	goto	u70
   394  0002E2                     u71:
   395  0002E2  0E01               	movlw	1
   396  0002E4  EF75  F001         	goto	u76
   397  0002E8                     u70:
   398  0002E8  0E00               	movlw	0
   399  0002EA                     u76:
   400  0002EA  0AFF               	xorlw	255
   401  0002EC  6E06               	movwf	??_UART_Send^0,c
   402  0002EE  3206               	rrcf	??_UART_Send^0,f,c
   403  0002F0  3206               	rrcf	??_UART_Send^0,f,c
   404  0002F2  508A               	movf	138,w,c	;volatile
   405  0002F4  1806               	xorwf	??_UART_Send^0,w,c
   406  0002F6  0B7F               	andlw	-129
   407  0002F8  1806               	xorwf	??_UART_Send^0,w,c
   408  0002FA  6E8A               	movwf	138,c	;volatile
   409  0002FC  0012               	return		;funcret
   410  0002FE                     __end_of_UART_Send:
   411                           	callstack 0
   412                           
   413 ;; *************** function _UART_Init *****************
   414 ;; Defined at:
   415 ;;		line 30 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  baudrate        4   18[COMRAM] const unsigned long 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  baudrate_cal    2   30[COMRAM] unsigned short 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   429 ;;      Params:         4       0       0       0       0       0       0
   430 ;;      Locals:         2       0       0       0       0       0       0
   431 ;;      Temps:          8       0       0       0       0       0       0
   432 ;;      Totals:        14       0       0       0       0       0       0
   433 ;;Total ram usage:       14 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 3
   436 ;; This function calls:
   437 ;;		___lldiv
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text2
   444  0001F4                     __ptext2:
   445                           	callstack 0
   446  0001F4                     _UART_Init:
   447                           	callstack 27
   448  0001F4                     
   449                           ;main.c: 30: void UART_Init(const uint32_t baudrate);main.c: 31: {;main.c: 33:  uint16_t
      +                           baudrate_calculated = (10000000 - baudrate * 4) /(baudrate * 4);
   450  0001F4  C013  F017         	movff	UART_Init@baudrate,??_UART_Init
   451  0001F8  C014  F018         	movff	UART_Init@baudrate+1,??_UART_Init+1
   452  0001FC  C015  F019         	movff	UART_Init@baudrate+2,??_UART_Init+2
   453  000200  C016  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+3
   454  000204  0E02               	movlw	2
   455  000206                     u215:
   456  000206  90D8               	bcf	status,0,c
   457  000208  3617               	rlcf	??_UART_Init^0,f,c
   458  00020A  3618               	rlcf	(??_UART_Init+1)^0,f,c
   459  00020C  3619               	rlcf	(??_UART_Init+2)^0,f,c
   460  00020E  361A               	rlcf	(??_UART_Init+3)^0,f,c
   461  000210  2EE8               	decfsz	wreg,f,c
   462  000212  EF03  F001         	goto	u215
   463  000216  5017               	movf	??_UART_Init^0,w,c
   464  000218  0880               	sublw	128
   465  00021A  6E06               	movwf	___lldiv@dividend^0,c
   466  00021C  0E96               	movlw	150
   467  00021E  5418               	subfwb	(??_UART_Init+1)^0,w,c
   468  000220  6E07               	movwf	(___lldiv@dividend+1)^0,c
   469  000222  0E98               	movlw	152
   470  000224  5419               	subfwb	(??_UART_Init+2)^0,w,c
   471  000226  6E08               	movwf	(___lldiv@dividend+2)^0,c
   472  000228  0E00               	movlw	0
   473  00022A  541A               	subfwb	(??_UART_Init+3)^0,w,c
   474  00022C  6E09               	movwf	(___lldiv@dividend+3)^0,c
   475  00022E  C013  F01B         	movff	UART_Init@baudrate,??_UART_Init+4
   476  000232  C014  F01C         	movff	UART_Init@baudrate+1,??_UART_Init+5
   477  000236  C015  F01D         	movff	UART_Init@baudrate+2,??_UART_Init+6
   478  00023A  C016  F01E         	movff	UART_Init@baudrate+3,??_UART_Init+7
   479  00023E  0E02               	movlw	2
   480  000240                     u225:
   481  000240  90D8               	bcf	status,0,c
   482  000242  361B               	rlcf	(??_UART_Init+4)^0,f,c
   483  000244  361C               	rlcf	(??_UART_Init+5)^0,f,c
   484  000246  361D               	rlcf	(??_UART_Init+6)^0,f,c
   485  000248  361E               	rlcf	(??_UART_Init+7)^0,f,c
   486  00024A  2EE8               	decfsz	wreg,f,c
   487  00024C  EF20  F001         	goto	u225
   488  000250  C01B  F00A         	movff	??_UART_Init+4,___lldiv@divisor
   489  000254  C01C  F00B         	movff	??_UART_Init+5,___lldiv@divisor+1
   490  000258  C01D  F00C         	movff	??_UART_Init+6,___lldiv@divisor+2
   491  00025C  C01E  F00D         	movff	??_UART_Init+7,___lldiv@divisor+3
   492  000260  ECA8  F000         	call	___lldiv	;wreg free
   493  000264  C006  F01F         	movff	?___lldiv,UART_Init@baudrate_calculated
   494  000268  C007  F020         	movff	?___lldiv+1,UART_Init@baudrate_calculated+1
   495  00026C                     
   496                           ;main.c: 35:     TXSTAbits.BRGH = 1;
   497  00026C  84AC               	bsf	172,2,c	;volatile
   498  00026E                     
   499                           ;main.c: 36:     BAUDCONbits.BRG16 = 1;
   500  00026E  86B8               	bsf	184,3,c	;volatile
   501  000270                     
   502                           ;main.c: 38:     SPBRG = (baudrate_calculated & 0x00FF);
   503  000270  C01F  FFAF         	movff	UART_Init@baudrate_calculated,4015	;volatile
   504  000274                     
   505                           ;main.c: 39:     SPBRGH = (baudrate_calculated & 0xFF00) >> 8;
   506  000274  5020               	movf	(UART_Init@baudrate_calculated+1)^0,w,c
   507  000276  6EB0               	movwf	176,c	;volatile
   508  000278                     
   509                           ;main.c: 41:     TXSTAbits.SYNC = 0;
   510  000278  98AC               	bcf	172,4,c	;volatile
   511  00027A                     
   512                           ;main.c: 42:     TXSTAbits.TX9 = 0;
   513  00027A  9CAC               	bcf	172,6,c	;volatile
   514  00027C                     
   515                           ;main.c: 43:     RCSTAbits.SPEN = 1;
   516  00027C  8EAB               	bsf	171,7,c	;volatile
   517  00027E                     
   518                           ;main.c: 44:     TRISCbits.RC6 = 1;
   519  00027E  8C94               	bsf	148,6,c	;volatile
   520  000280                     
   521                           ;main.c: 45:     TRISCbits.RC7 = 1;
   522  000280  8E94               	bsf	148,7,c	;volatile
   523  000282                     
   524                           ;main.c: 46:     RCSTAbits.CREN = 1;
   525  000282  88AB               	bsf	171,4,c	;volatile
   526  000284                     
   527                           ;main.c: 47:     TXSTAbits.TXEN = 1;
   528  000284  8AAC               	bsf	172,5,c	;volatile
   529  000286  0012               	return		;funcret
   530  000288                     __end_of_UART_Init:
   531                           	callstack 0
   532                           
   533 ;; *************** function ___lldiv *****************
   534 ;; Defined at:
   535 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  dividend        4    5[COMRAM] unsigned long 
   538 ;;  divisor         4    9[COMRAM] unsigned long 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  quotient        4   13[COMRAM] unsigned long 
   541 ;;  counter         1   17[COMRAM] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  4    5[COMRAM] unsigned long 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   551 ;;      Params:         8       0       0       0       0       0       0
   552 ;;      Locals:         5       0       0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0
   554 ;;      Totals:        13       0       0       0       0       0       0
   555 ;;Total ram usage:       13 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 2
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_UART_Init
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text3
   566  000150                     __ptext3:
   567                           	callstack 0
   568  000150                     ___lldiv:
   569                           	callstack 27
   570  000150  0E00               	movlw	0
   571  000152  6E0E               	movwf	___lldiv@quotient^0,c
   572  000154  0E00               	movlw	0
   573  000156  6E0F               	movwf	(___lldiv@quotient+1)^0,c
   574  000158  0E00               	movlw	0
   575  00015A  6E10               	movwf	(___lldiv@quotient+2)^0,c
   576  00015C  0E00               	movlw	0
   577  00015E  6E11               	movwf	(___lldiv@quotient+3)^0,c
   578  000160  500A               	movf	___lldiv@divisor^0,w,c
   579  000162  100B               	iorwf	(___lldiv@divisor+1)^0,w,c
   580  000164  100C               	iorwf	(___lldiv@divisor+2)^0,w,c
   581  000166  100D               	iorwf	(___lldiv@divisor+3)^0,w,c
   582  000168  B4D8               	btfsc	status,2,c
   583  00016A  EFB9  F000         	goto	u181
   584  00016E  EFBB  F000         	goto	u180
   585  000172                     u181:
   586  000172  EFF1  F000         	goto	l109
   587  000176                     u180:
   588  000176  0E01               	movlw	1
   589  000178  6E12               	movwf	___lldiv@counter^0,c
   590  00017A  EFC5  F000         	goto	l869
   591  00017E                     l867:
   592  00017E  90D8               	bcf	status,0,c
   593  000180  360A               	rlcf	___lldiv@divisor^0,f,c
   594  000182  360B               	rlcf	(___lldiv@divisor+1)^0,f,c
   595  000184  360C               	rlcf	(___lldiv@divisor+2)^0,f,c
   596  000186  360D               	rlcf	(___lldiv@divisor+3)^0,f,c
   597  000188  2A12               	incf	___lldiv@counter^0,f,c
   598  00018A                     l869:
   599  00018A  AE0D               	btfss	(___lldiv@divisor+3)^0,7,c
   600  00018C  EFCA  F000         	goto	u191
   601  000190  EFCC  F000         	goto	u190
   602  000194                     u191:
   603  000194  EFBF  F000         	goto	l867
   604  000198                     u190:
   605  000198                     l871:
   606  000198  90D8               	bcf	status,0,c
   607  00019A  360E               	rlcf	___lldiv@quotient^0,f,c
   608  00019C  360F               	rlcf	(___lldiv@quotient+1)^0,f,c
   609  00019E  3610               	rlcf	(___lldiv@quotient+2)^0,f,c
   610  0001A0  3611               	rlcf	(___lldiv@quotient+3)^0,f,c
   611  0001A2  500A               	movf	___lldiv@divisor^0,w,c
   612  0001A4  5C06               	subwf	___lldiv@dividend^0,w,c
   613  0001A6  500B               	movf	(___lldiv@divisor+1)^0,w,c
   614  0001A8  5807               	subwfb	(___lldiv@dividend+1)^0,w,c
   615  0001AA  500C               	movf	(___lldiv@divisor+2)^0,w,c
   616  0001AC  5808               	subwfb	(___lldiv@dividend+2)^0,w,c
   617  0001AE  500D               	movf	(___lldiv@divisor+3)^0,w,c
   618  0001B0  5809               	subwfb	(___lldiv@dividend+3)^0,w,c
   619  0001B2  A0D8               	btfss	status,0,c
   620  0001B4  EFDE  F000         	goto	u201
   621  0001B8  EFE0  F000         	goto	u200
   622  0001BC                     u201:
   623  0001BC  EFE9  F000         	goto	l879
   624  0001C0                     u200:
   625  0001C0  500A               	movf	___lldiv@divisor^0,w,c
   626  0001C2  5E06               	subwf	___lldiv@dividend^0,f,c
   627  0001C4  500B               	movf	(___lldiv@divisor+1)^0,w,c
   628  0001C6  5A07               	subwfb	(___lldiv@dividend+1)^0,f,c
   629  0001C8  500C               	movf	(___lldiv@divisor+2)^0,w,c
   630  0001CA  5A08               	subwfb	(___lldiv@dividend+2)^0,f,c
   631  0001CC  500D               	movf	(___lldiv@divisor+3)^0,w,c
   632  0001CE  5A09               	subwfb	(___lldiv@dividend+3)^0,f,c
   633  0001D0  800E               	bsf	___lldiv@quotient^0,0,c
   634  0001D2                     l879:
   635  0001D2  90D8               	bcf	status,0,c
   636  0001D4  320D               	rrcf	(___lldiv@divisor+3)^0,f,c
   637  0001D6  320C               	rrcf	(___lldiv@divisor+2)^0,f,c
   638  0001D8  320B               	rrcf	(___lldiv@divisor+1)^0,f,c
   639  0001DA  320A               	rrcf	___lldiv@divisor^0,f,c
   640  0001DC  2E12               	decfsz	___lldiv@counter^0,f,c
   641  0001DE  EFCC  F000         	goto	l871
   642  0001E2                     l109:
   643  0001E2  C00E  F006         	movff	___lldiv@quotient,?___lldiv
   644  0001E6  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
   645  0001EA  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
   646  0001EE  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
   647  0001F2  0012               	return		;funcret
   648  0001F4                     __end_of___lldiv:
   649                           	callstack 0
   650                           
   651 ;; *************** function _low_isr *****************
   652 ;; Defined at:
   653 ;;		line 124 in file "main.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   667 ;;      Params:         0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0
   669 ;;      Temps:          4       0       0       0       0       0       0
   670 ;;      Totals:         4       0       0       0       0       0       0
   671 ;;Total ram usage:        4 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		Interrupt level 1
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	intcodelo
   682  000018                     __pintcodelo:
   683                           	callstack 0
   684  000018                     _low_isr:
   685                           	callstack 27
   686                           
   687                           ;incstack = 0
   688  000018  8024               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   689  00001A  CFD8 F003          	movff	status,??_low_isr+1
   690  00001E  CFE8 F004          	movff	wreg,??_low_isr+2
   691  000022  CFE0 F005          	movff	bsr,??_low_isr+3
   692  000026                     
   693                           ;main.c: 126:     INTCONbits.GIEL = 0;
   694  000026  9CF2               	bcf	242,6,c	;volatile
   695                           
   696                           ;main.c: 128:     if (PIR1bits.RCIF == 1)
   697  000028  AA9E               	btfss	158,5,c	;volatile
   698  00002A  EF19  F000         	goto	i1u15_21
   699  00002E  EF1B  F000         	goto	i1u15_20
   700  000032                     i1u15_21:
   701  000032  EF2F  F000         	goto	i1l855
   702  000036                     i1u15_20:
   703  000036                     
   704                           ;main.c: 129:     {;main.c: 130:         LATBbits.LATB6 = ~LATBbits.LATB6;
   705  000036  BC8A               	btfsc	138,6,c	;volatile
   706  000038  EF20  F000         	goto	i1u16_21
   707  00003C  EF23  F000         	goto	i1u16_20
   708  000040                     i1u16_21:
   709  000040  0E01               	movlw	1
   710  000042  EF24  F000         	goto	i1u16_26
   711  000046                     i1u16_20:
   712  000046  0E00               	movlw	0
   713  000048                     i1u16_26:
   714  000048  0AFF               	xorlw	255
   715  00004A  6E02               	movwf	??_low_isr^0,c
   716  00004C  3A02               	swapf	??_low_isr^0,f,c
   717  00004E  4602               	rlncf	??_low_isr^0,f,c
   718  000050  4602               	rlncf	??_low_isr^0,f,c
   719  000052  508A               	movf	138,w,c	;volatile
   720  000054  1802               	xorwf	??_low_isr^0,w,c
   721  000056  0BBF               	andlw	-65
   722  000058  1802               	xorwf	??_low_isr^0,w,c
   723  00005A  6E8A               	movwf	138,c	;volatile
   724  00005C                     
   725                           ;main.c: 132:         PIR1bits.RCIF = 0;
   726  00005C  9A9E               	bcf	158,5,c	;volatile
   727  00005E                     i1l855:
   728                           
   729                           ;main.c: 135:     INTCONbits.GIEL = 1;
   730  00005E  8CF2               	bsf	242,6,c	;volatile
   731  000060  C005  FFE0         	movff	??_low_isr+3,bsr
   732  000064  C004  FFE8         	movff	??_low_isr+2,wreg
   733  000068  C003  FFD8         	movff	??_low_isr+1,status
   734  00006C  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   735  00006E  0010               	retfie	
   736  000070                     __end_of_low_isr:
   737                           	callstack 0
   738                           
   739 ;; *************** function _high_isr *****************
   740 ;; Defined at:
   741 ;;		line 110 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   755 ;;      Params:         0       0       0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0
   757 ;;      Temps:          1       0       0       0       0       0       0
   758 ;;      Totals:         1       0       0       0       0       0       0
   759 ;;Total ram usage:        1 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		Interrupt level 2
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	intcode
   769  000008                     __pintcode:
   770                           	callstack 0
   771  000008                     _high_isr:
   772                           	callstack 27
   773                           
   774                           ;incstack = 0
   775  000008  8224               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   776  00000A  ED44  F001         	call	int_func,f	;refresh shadow registers
   777                           
   778                           	psect	intcode_body
   779  000288                     __pintcode_body:
   780                           	callstack 27
   781  000288                     int_func:
   782                           	callstack 27
   783  000288  0006               	pop		; remove dummy address from shadow register refresh
   784  00028A                     
   785                           ;main.c: 112:     INTCONbits.GIEH = 0;
   786  00028A  9EF2               	bcf	242,7,c	;volatile
   787                           
   788                           ;main.c: 114:     if (PIR1bits.TXIF == 1)
   789  00028C  A89E               	btfss	158,4,c	;volatile
   790  00028E  EF4B  F001         	goto	i2u13_41
   791  000292  EF4D  F001         	goto	i2u13_40
   792  000296                     i2u13_41:
   793  000296  EF5F  F001         	goto	i2l847
   794  00029A                     i2u13_40:
   795  00029A                     
   796                           ;main.c: 115:     {;main.c: 117:        LATBbits.LATB7 = ~LATBbits.LATB7;
   797  00029A  BE8A               	btfsc	138,7,c	;volatile
   798  00029C  EF52  F001         	goto	i2u14_41
   799  0002A0  EF55  F001         	goto	i2u14_40
   800  0002A4                     i2u14_41:
   801  0002A4  0E01               	movlw	1
   802  0002A6  EF56  F001         	goto	i2u14_46
   803  0002AA                     i2u14_40:
   804  0002AA  0E00               	movlw	0
   805  0002AC                     i2u14_46:
   806  0002AC  0AFF               	xorlw	255
   807  0002AE  6E01               	movwf	??_high_isr^0,c
   808  0002B0  3201               	rrcf	??_high_isr^0,f,c
   809  0002B2  3201               	rrcf	??_high_isr^0,f,c
   810  0002B4  508A               	movf	138,w,c	;volatile
   811  0002B6  1801               	xorwf	??_high_isr^0,w,c
   812  0002B8  0B7F               	andlw	-129
   813  0002BA  1801               	xorwf	??_high_isr^0,w,c
   814  0002BC  6E8A               	movwf	138,c	;volatile
   815  0002BE                     i2l847:
   816                           
   817                           ;main.c: 120:     INTCONbits.GIEH = 1;
   818  0002BE  8EF2               	bsf	242,7,c	;volatile
   819  0002C0  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   820  0002C2  0011               	retfie		f
   821  0002C4                     __end_of_high_isr:
   822                           	callstack 0
   823  0000                     
   824                           	psect	rparam
   825  0000                     
   826                           	psect	temp
   827  000024                     btemp:
   828                           	callstack 0
   829  000024                     	ds	1
   830  0000                     int$flags	set	btemp
   831  0000                     wtemp8	set	btemp+1
   832  0000                     ttemp5	set	btemp+1
   833  0000                     ttemp6	set	btemp+4
   834  0000                     ttemp7	set	btemp+8
   835                           
   836                           	psect	idloc
   837                           
   838                           ;Config register IDLOC0 @ 0x200000
   839                           ;	unspecified, using default values
   840  200000                     	org	2097152
   841  200000  FF                 	db	255
   842                           
   843                           ;Config register IDLOC1 @ 0x200001
   844                           ;	unspecified, using default values
   845  200001                     	org	2097153
   846  200001  FF                 	db	255
   847                           
   848                           ;Config register IDLOC2 @ 0x200002
   849                           ;	unspecified, using default values
   850  200002                     	org	2097154
   851  200002  FF                 	db	255
   852                           
   853                           ;Config register IDLOC3 @ 0x200003
   854                           ;	unspecified, using default values
   855  200003                     	org	2097155
   856  200003  FF                 	db	255
   857                           
   858                           ;Config register IDLOC4 @ 0x200004
   859                           ;	unspecified, using default values
   860  200004                     	org	2097156
   861  200004  FF                 	db	255
   862                           
   863                           ;Config register IDLOC5 @ 0x200005
   864                           ;	unspecified, using default values
   865  200005                     	org	2097157
   866  200005  FF                 	db	255
   867                           
   868                           ;Config register IDLOC6 @ 0x200006
   869                           ;	unspecified, using default values
   870  200006                     	org	2097158
   871  200006  FF                 	db	255
   872                           
   873                           ;Config register IDLOC7 @ 0x200007
   874                           ;	unspecified, using default values
   875  200007                     	org	2097159
   876  200007  FF                 	db	255
   877                           
   878                           	psect	config
   879                           
   880                           ; Padding undefined space
   881  300000                     	org	3145728
   882  300000  FF                 	db	255
   883                           
   884                           ;Config register CONFIG1H @ 0x300001
   885                           ;	Oscillator Selection bits
   886                           ;	OSC = HS, HS oscillator
   887                           ;	Fail-Safe Clock Monitor Enable bit
   888                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   889                           ;	Internal/External Oscillator Switchover bit
   890                           ;	IESO = OFF, Oscillator Switchover mode disabled
   891  300001                     	org	3145729
   892  300001  02                 	db	2
   893                           
   894                           ;Config register CONFIG2L @ 0x300002
   895                           ;	Power-up Timer Enable bit
   896                           ;	PWRT = OFF, PWRT disabled
   897                           ;	Brown-out Reset Enable bits
   898                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   899                           ;	Brown Out Reset Voltage bits
   900                           ;	BORV = 3, Minimum setting
   901  300002                     	org	3145730
   902  300002  19                 	db	25
   903                           
   904                           ;Config register CONFIG2H @ 0x300003
   905                           ;	Watchdog Timer Enable bit
   906                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   907                           ;	Watchdog Timer Postscale Select bits
   908                           ;	WDTPS = 32768, 1:32768
   909  300003                     	org	3145731
   910  300003  1E                 	db	30
   911                           
   912                           ; Padding undefined space
   913  300004                     	org	3145732
   914  300004  FF                 	db	255
   915                           
   916                           ;Config register CONFIG3H @ 0x300005
   917                           ;	CCP2 MUX bit
   918                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   919                           ;	PORTB A/D Enable bit
   920                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   921                           ;	Low-Power Timer1 Oscillator Enable bit
   922                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   923                           ;	MCLR Pin Enable bit
   924                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   925  300005                     	org	3145733
   926  300005  01                 	db	1
   927                           
   928                           ;Config register CONFIG4L @ 0x300006
   929                           ;	Stack Full/Underflow Reset Enable bit
   930                           ;	STVREN = ON, Stack full/underflow will cause Reset
   931                           ;	Single-Supply ICSP Enable bit
   932                           ;	LVP = OFF, Single-Supply ICSP disabled
   933                           ;	Extended Instruction Set Enable bit
   934                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   935                           ;	Background Debugger Enable bit
   936                           ;	DEBUG = 0x1, unprogrammed default
   937  300006                     	org	3145734
   938  300006  81                 	db	129
   939                           
   940                           ; Padding undefined space
   941  300007                     	org	3145735
   942  300007  FF                 	db	255
   943                           
   944                           ;Config register CONFIG5L @ 0x300008
   945                           ;	Code Protection bit
   946                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   947                           ;	Code Protection bit
   948                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   949                           ;	Code Protection bit
   950                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   951                           ;	Code Protection bit
   952                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   953  300008                     	org	3145736
   954  300008  0F                 	db	15
   955                           
   956                           ;Config register CONFIG5H @ 0x300009
   957                           ;	Boot Block Code Protection bit
   958                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   959                           ;	Data EEPROM Code Protection bit
   960                           ;	CPD = OFF, Data EEPROM not code-protected
   961  300009                     	org	3145737
   962  300009  C0                 	db	192
   963                           
   964                           ;Config register CONFIG6L @ 0x30000A
   965                           ;	Write Protection bit
   966                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   967                           ;	Write Protection bit
   968                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   969                           ;	Write Protection bit
   970                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   971                           ;	Write Protection bit
   972                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   973  30000A                     	org	3145738
   974  30000A  0F                 	db	15
   975                           
   976                           ;Config register CONFIG6H @ 0x30000B
   977                           ;	Configuration Register Write Protection bit
   978                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   979                           ;	Boot Block Write Protection bit
   980                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   981                           ;	Data EEPROM Write Protection bit
   982                           ;	WRTD = OFF, Data EEPROM not write-protected
   983  30000B                     	org	3145739
   984  30000B  E0                 	db	224
   985                           
   986                           ;Config register CONFIG7L @ 0x30000C
   987                           ;	Table Read Protection bit
   988                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   989                           ;	Table Read Protection bit
   990                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   991                           ;	Table Read Protection bit
   992                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   993                           ;	Table Read Protection bit
   994                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   995  30000C                     	org	3145740
   996  30000C  0F                 	db	15
   997                           
   998                           ;Config register CONFIG7H @ 0x30000D
   999                           ;	Boot Block Table Read Protection bit
  1000                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1001  30000D                     	org	3145741
  1002  30000D  40                 	db	64
  1003                           tosu	equ	0xFFF
  1004                           tosh	equ	0xFFE
  1005                           tosl	equ	0xFFD
  1006                           stkptr	equ	0xFFC
  1007                           pclatu	equ	0xFFB
  1008                           pclath	equ	0xFFA
  1009                           pcl	equ	0xFF9
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           prodh	equ	0xFF4
  1015                           prodl	equ	0xFF3
  1016                           indf0	equ	0xFEF
  1017                           postinc0	equ	0xFEE
  1018                           postdec0	equ	0xFED
  1019                           preinc0	equ	0xFEC
  1020                           plusw0	equ	0xFEB
  1021                           fsr0h	equ	0xFEA
  1022                           fsr0l	equ	0xFE9
  1023                           wreg	equ	0xFE8
  1024                           indf1	equ	0xFE7
  1025                           postinc1	equ	0xFE6
  1026                           postdec1	equ	0xFE5
  1027                           preinc1	equ	0xFE4
  1028                           plusw1	equ	0xFE3
  1029                           fsr1h	equ	0xFE2
  1030                           fsr1l	equ	0xFE1
  1031                           bsr	equ	0xFE0
  1032                           indf2	equ	0xFDF
  1033                           postinc2	equ	0xFDE
  1034                           postdec2	equ	0xFDD
  1035                           preinc2	equ	0xFDC
  1036                           plusw2	equ	0xFDB
  1037                           fsr2h	equ	0xFDA
  1038                           fsr2l	equ	0xFD9
  1039                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     34      35
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     494
                                             32 COMRAM     2     2      0
                          _UART_Init
                          _UART_Send
 ---------------------------------------------------------------------------------
 (1) _UART_Send                                            2     2      0      15
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     479
                                             18 COMRAM    14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                              4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv
   _UART_Send

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     22      23       1       27.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      15        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 09 16:42:05 2021

                          l41 0286                            l61 02C6                            l64 02FC  
                          u60 02D4                            u61 02D0                            u70 02E8  
                          u71 02E2                            u76 02EA                            bsr 000FE0  
                         l116 01F2                           l109 01E2                           l801 02C6  
                         l803 02D4                           l901 0280                           l805 02D8  
                         l903 0282                           l911 007A                           l905 0284  
                         l921 00A2                           l913 007C                           l931 012C  
                         l923 00B2                           l915 007E                           l907 0074  
                         l861 0150                           l933 0132                           l925 00DE  
                         l917 0080                           l909 0078                           l871 0198  
                         l863 0160                           l927 00F4                           l919 0094  
                         l881 01DC                           l873 01A2                           l865 0176  
                         l929 0104                           l875 01C0                           l867 017E  
                         l891 0274                           l883 01F4                           l877 01D0  
                         l869 018A                           l893 0278                           l885 026C  
                         l879 01D2                           l895 027A                           l887 026E  
                         l897 027C                           l889 0270                           l899 027E  
                         u200 01C0                           u201 01BC                           u230 00A2  
                         u215 0206                           u231 009E                           u240 00C4  
                         u225 0240                           u241 00BE                           u250 00F4  
                         u251 00F0                           u180 0176                           u260 0116  
                         u181 0172                           u261 0110                           u190 0198  
                         u246 00C6                           u191 0194                           u266 0118  
                         u277 00A8                           u287 00FA                           u297 013C  
                         wreg 000FE8                          _LATB 000F8A                          i1l76 0060  
                        i2l70 02C0                          _TRMT 007D61                          _main 0074  
                        btemp 0024                          start 0070                  ___param_bank 000000  
                       ?_main 0001               __end_of___lldiv 01F4                         i1l851 0036  
                       i1l853 005C                         i1l855 005E                         i1l849 0026  
                       i2l843 028A                         i2l845 029A                         i2l847 02BE  
                       _SPBRG 000FAF                         _PORTB 000F81                         _TXREG 000FAD  
          __size_of_UART_Init 0094            __size_of_UART_Send 003A               __end_of_low_isr 0070  
                       ttemp5 0025                         ttemp6 0028                         ttemp7 002C  
                       status 000FD8                         wtemp8 0025               __initialization 02FE  
                __end_of_main 0150                        ??_main 0021                 __activetblptr 000000  
                      _SPBRGH 000FB0             __end_of_UART_Init 0288              __end_of_high_isr 02C4  
           __end_of_UART_Send 02FE                     ??___lldiv 000E                        isa$std 000001  
                   ??_low_isr 0002                    __accesstop 0080       __end_of__initialization 0300  
               ___rparam_used 000001                __pcstackCOMRAM 0001  UART_Init@baudrate_calculated 001F  
                     i1u15_20 0036                       i1u15_21 0032                       i1u16_20 0046  
                     i1u16_21 0040                       i1u16_26 0048                       i2u13_40 029A  
                     i2u13_41 0296                       i2u14_40 02AA                       i2u14_41 02A4  
                     i2u14_46 02AC                     ?_high_isr 0001                       __Hparam 0000  
                     __Lparam 0000                       ___lldiv 0150                       __pcinit 02FE  
                     __ramtop 0600                       __ptext0 0074                       __ptext1 02C4  
                     __ptext2 01F4                       __ptext3 0150                       _counter 0023  
                     _low_isr 0018                    ??_high_isr 0001                __pintcode_body 0288  
        end_of_initialization 0300                       int_func 0288               ___lldiv@divisor 000A  
             ___lldiv@counter 0012                     _RCSTAbits 000FAB                     _UART_Init 01F4  
                   _UART_Send 02C4                     _TRISBbits 000F93                     _TRISCbits 000F94  
                   _TXSTAbits 000FAC                   _BAUDCONbits 000FB8                    ?_UART_Init 0013  
                  ?_UART_Send 0001           start_initialization 02FE                   __pbssCOMRAM 0023  
           __size_of_high_isr 02BC                     __pintcode 0008                      ?___lldiv 0006  
                 __pintcodelo 0018                   ??_UART_Init 0017                   ??_UART_Send 0006  
               UART_Send@data 0007                      ?_low_isr 0001                      _LATBbits 000F8A  
                    _IPR1bits 000F9F                      _PIE1bits 000F9D                      _PIR1bits 000F9E  
           UART_Init@baudrate 0013                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___lldiv 00A4              __size_of_low_isr 0058                      _high_isr 0008  
               __size_of_main 00DC                      isa$xinst 000000                      int$flags 0024  
                  _INTCONbits 000FF2                      intlevel1 0000                      intlevel2 0000  
            ___lldiv@dividend 0006              ___lldiv@quotient 000E  
