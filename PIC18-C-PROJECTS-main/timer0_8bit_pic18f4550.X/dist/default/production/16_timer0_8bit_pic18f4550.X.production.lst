

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 30 17:44:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _RCONbits	set	4048
    53  0000                     _INTCONbits	set	4082
    54  0000                     _LATAbits	set	3977
    55  0000                     _PORTDbits	set	3971
    56  0000                     _T0CONbits	set	4053
    57  0000                     _TRISD	set	3989
    58  0000                     _ADCON1	set	4033
    59  0000                     _CMCON	set	4020
    60  0000                     _TRISA	set	3986
    61  0000                     _LATA	set	3977
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  0000A0                     __pcinit:
    67                           	callstack 0
    68  0000A0                     start_initialization:
    69                           	callstack 0
    70  0000A0                     __initialization:
    71                           	callstack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (2 bytes)
    74  0000A0  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    75  0000A2  6A01               	clrf	__pbssCOMRAM& (0+255),c
    76  0000A4                     end_of_initialization:
    77                           	callstack 0
    78  0000A4                     __end_of__initialization:
    79                           	callstack 0
    80  0000A4  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    81  0000A6  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    82  0000A8  0100               	movlb	0
    83  0000AA  EF28  F000         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	bssCOMRAM
    86  000001                     __pbssCOMRAM:
    87                           	callstack 0
    88  000001                     _counter:
    89                           	callstack 0
    90  000001                     	ds	2
    91                           
    92                           	psect	cstackCOMRAM
    93  000000                     __pcstackCOMRAM:
    94                           	callstack 0
    95  000000                     
    96                           ; 1 bytes @ 0x0
    97 ;;
    98 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    99 ;;
   100 ;; *************** function _main *****************
   101 ;; Defined at:
   102 ;;		line 76 in file "main.c"
   103 ;; Parameters:    Size  Location     Type
   104 ;;		None
   105 ;; Auto vars:     Size  Location     Type
   106 ;;		None
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, status,0, cstack
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   116 ;;      Params:         0       0       0       0       0       0       0       0       0
   117 ;;      Locals:         0       0       0       0       0       0       0       0       0
   118 ;;      Temps:          0       0       0       0       0       0       0       0       0
   119 ;;      Totals:         0       0       0       0       0       0       0       0       0
   120 ;;Total ram usage:        0 bytes
   121 ;; Hardware stack levels required when called:    2
   122 ;; This function calls:
   123 ;;		_timer0Setup
   124 ;; This function is called by:
   125 ;;		Startup code after reset
   126 ;; This function uses a non-reentrant model
   127 ;;
   128                           
   129                           	psect	text0
   130  000050                     __ptext0:
   131                           	callstack 0
   132  000050                     _main:
   133                           	callstack 29
   134  000050                     
   135                           ;main.c: 78:     timer0Setup();
   136  000050  EC43  F000         	call	_timer0Setup	;wreg free
   137  000054                     
   138                           ;main.c: 81:     LATA = 0;
   139  000054  0E00               	movlw	0
   140  000056  6E89               	movwf	137,c	;volatile
   141  000058                     
   142                           ;main.c: 82:     TRISA &= ~(0x03);
   143  000058  0EFC               	movlw	252
   144  00005A  1692               	andwf	146,f,c	;volatile
   145  00005C                     
   146                           ;main.c: 83:     CMCON |= 0x07;
   147  00005C  0E07               	movlw	7
   148  00005E  12B4               	iorwf	180,f,c	;volatile
   149  000060                     
   150                           ;main.c: 84:     ADCON1 |= 0x0F;
   151  000060  0E0F               	movlw	15
   152  000062  12C1               	iorwf	193,f,c	;volatile
   153  000064                     
   154                           ;main.c: 85:     TRISD |= 0x01;
   155  000064  8095               	bsf	149,0,c	;volatile
   156  000066                     
   157                           ;main.c: 87:     T0CONbits.TMR0ON = 1;
   158  000066  8ED5               	bsf	213,7,c	;volatile
   159  000068                     l736:
   160                           
   161                           ;main.c: 90:     {;main.c: 91:         if (PORTDbits.RD0 == 1)
   162  000068  A083               	btfss	131,0,c	;volatile
   163  00006A  EF39  F000         	goto	u11
   164  00006E  EF3B  F000         	goto	u10
   165  000072                     u11:
   166  000072  EF3E  F000         	goto	l30
   167  000076                     u10:
   168  000076                     
   169                           ;main.c: 92:             LATAbits.LA0 = 1;
   170  000076  8089               	bsf	137,0,c	;volatile
   171  000078  EF34  F000         	goto	l736
   172  00007C                     l30:
   173                           
   174                           ;main.c: 94:             LATAbits.LA0 = 0;
   175  00007C  9089               	bcf	137,0,c	;volatile
   176  00007E  EF34  F000         	goto	l736
   177  000082  EF07  F000         	goto	start
   178  000086                     __end_of_main:
   179                           	callstack 0
   180                           
   181 ;; *************** function _timer0Setup *****************
   182 ;; Defined at:
   183 ;;		line 120 in file "main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		None
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   197 ;;      Params:         0       0       0       0       0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0       0       0
   200 ;;      Totals:         0       0       0       0       0       0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels used:    1
   203 ;; Hardware stack levels required when called:    1
   204 ;; This function calls:
   205 ;;		Nothing
   206 ;; This function is called by:
   207 ;;		_main
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text1
   212  000086                     __ptext1:
   213                           	callstack 0
   214  000086                     _timer0Setup:
   215                           	callstack 29
   216  000086                     
   217                           ;main.c: 123:     T0CONbits.TMR0ON = 0;
   218  000086  9ED5               	bcf	213,7,c	;volatile
   219                           
   220                           ;main.c: 124:     T0CONbits.T0CS = 0;
   221  000088  9AD5               	bcf	213,5,c	;volatile
   222                           
   223                           ;main.c: 125:     T0CONbits.T08BIT = 1;
   224  00008A  8CD5               	bsf	213,6,c	;volatile
   225                           
   226                           ;main.c: 126:     T0CONbits.PSA = 0;
   227  00008C  96D5               	bcf	213,3,c	;volatile
   228                           
   229                           ;main.c: 127:     T0CONbits.T0PS0 = 0;
   230  00008E  90D5               	bcf	213,0,c	;volatile
   231                           
   232                           ;main.c: 128:     T0CONbits.T0PS1 = 0;
   233  000090  92D5               	bcf	213,1,c	;volatile
   234                           
   235                           ;main.c: 129:     T0CONbits.T0PS2 = 0;
   236  000092  94D5               	bcf	213,2,c	;volatile
   237                           
   238                           ;main.c: 131:     RCONbits.IPEN = 0;
   239  000094  9ED0               	bcf	208,7,c	;volatile
   240                           
   241                           ;main.c: 132:     INTCONbits.GIE = 1;
   242  000096  8EF2               	bsf	242,7,c	;volatile
   243                           
   244                           ;main.c: 133:     INTCONbits.PEIE = 1;
   245  000098  8CF2               	bsf	242,6,c	;volatile
   246                           
   247                           ;main.c: 134:     INTCONbits.T0IF = 0;
   248  00009A  94F2               	bcf	242,2,c	;volatile
   249                           
   250                           ;main.c: 135:     INTCONbits.TMR0IE = 1;
   251  00009C  8AF2               	bsf	242,5,c	;volatile
   252  00009E  0012               	return		;funcret
   253  0000A0                     __end_of_timer0Setup:
   254                           	callstack 0
   255                           
   256 ;; *************** function _myInterruptHandler *****************
   257 ;; Defined at:
   258 ;;		line 101 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   272 ;;      Params:         0       0       0       0       0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		Interrupt level 2
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	intcode
   286  000008                     __pintcode:
   287                           	callstack 0
   288  000008                     _myInterruptHandler:
   289                           	callstack 29
   290                           
   291                           ;incstack = 0
   292  000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   293  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   294                           
   295                           	psect	intcode_body
   296  000012                     __pintcode_body:
   297                           	callstack 29
   298  000012                     int_func:
   299                           	callstack 29
   300  000012  0006               	pop		; remove dummy address from shadow register refresh
   301  000014                     
   302                           ;main.c: 103:     if (INTCONbits.T0IF == 1)
   303  000014  A4F2               	btfss	242,2,c	;volatile
   304  000016  EF0F  F000         	goto	i2u2_41
   305  00001A  EF11  F000         	goto	i2u2_40
   306  00001E                     i2u2_41:
   307  00001E  EF26  F000         	goto	i2l41
   308  000022                     i2u2_40:
   309  000022                     
   310                           ;main.c: 104:     {;main.c: 106:         counter++;
   311  000022  4A01               	infsnz	_counter^0,f,c
   312  000024  2A02               	incf	(_counter+1)^0,f,c
   313  000026                     
   314                           ;main.c: 107:         INTCONbits.T0IF = 0;
   315  000026  94F2               	bcf	242,2,c	;volatile
   316  000028                     
   317                           ;main.c: 109:         if (counter == 9804)
   318  000028  0E4C               	movlw	76
   319  00002A  1801               	xorwf	_counter^0,w,c
   320  00002C  E107               	bnz	i2u3_41
   321  00002E  0E26               	movlw	38
   322  000030  1802               	xorwf	(_counter+1)^0,w,c
   323  000032  A4D8               	btfss	status,2,c
   324  000034  EF1E  F000         	goto	i2u3_41
   325  000038  EF20  F000         	goto	i2u3_40
   326  00003C                     i2u3_41:
   327  00003C  EF26  F000         	goto	i2l41
   328  000040                     i2u3_40:
   329  000040                     
   330                           ;main.c: 110:         {;main.c: 111:             counter = 0;
   331  000040  0E00               	movlw	0
   332  000042  6E02               	movwf	(_counter+1)^0,c
   333  000044  0E00               	movlw	0
   334  000046  6E01               	movwf	_counter^0,c
   335  000048                     
   336                           ;main.c: 112:             LATA ^= 0x02;
   337  000048  0E02               	movlw	2
   338  00004A  1A89               	xorwf	137,f,c	;volatile
   339  00004C                     i2l41:
   340  00004C  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   341  00004E  0011               	retfie		f
   342  000050                     __end_of_myInterruptHandler:
   343                           	callstack 0
   344  0000                     
   345                           	psect	rparam
   346  0000                     
   347                           	psect	temp
   348  000003                     btemp:
   349                           	callstack 0
   350  000003                     	ds	1
   351  0000                     int$flags	set	btemp
   352  0000                     wtemp8	set	btemp+1
   353  0000                     ttemp5	set	btemp+1
   354  0000                     ttemp6	set	btemp+4
   355  0000                     ttemp7	set	btemp+8
   356                           
   357                           	psect	idloc
   358                           
   359                           ;Config register IDLOC0 @ 0x200000
   360                           ;	unspecified, using default values
   361  200000                     	org	2097152
   362  200000  FF                 	db	255
   363                           
   364                           ;Config register IDLOC1 @ 0x200001
   365                           ;	unspecified, using default values
   366  200001                     	org	2097153
   367  200001  FF                 	db	255
   368                           
   369                           ;Config register IDLOC2 @ 0x200002
   370                           ;	unspecified, using default values
   371  200002                     	org	2097154
   372  200002  FF                 	db	255
   373                           
   374                           ;Config register IDLOC3 @ 0x200003
   375                           ;	unspecified, using default values
   376  200003                     	org	2097155
   377  200003  FF                 	db	255
   378                           
   379                           ;Config register IDLOC4 @ 0x200004
   380                           ;	unspecified, using default values
   381  200004                     	org	2097156
   382  200004  FF                 	db	255
   383                           
   384                           ;Config register IDLOC5 @ 0x200005
   385                           ;	unspecified, using default values
   386  200005                     	org	2097157
   387  200005  FF                 	db	255
   388                           
   389                           ;Config register IDLOC6 @ 0x200006
   390                           ;	unspecified, using default values
   391  200006                     	org	2097158
   392  200006  FF                 	db	255
   393                           
   394                           ;Config register IDLOC7 @ 0x200007
   395                           ;	unspecified, using default values
   396  200007                     	org	2097159
   397  200007  FF                 	db	255
   398                           
   399                           	psect	config
   400                           
   401                           ;Config register CONFIG1L @ 0x300000
   402                           ;	PLL Prescaler Selection bits
   403                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   404                           ;	System Clock Postscaler Selection bits
   405                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   406                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   407                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   408  300000                     	org	3145728
   409  300000  00                 	db	0
   410                           
   411                           ;Config register CONFIG1H @ 0x300001
   412                           ;	Oscillator Selection bits
   413                           ;	FOSC = HS, HS oscillator (HS)
   414                           ;	Fail-Safe Clock Monitor Enable bit
   415                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   416                           ;	Internal/External Oscillator Switchover bit
   417                           ;	IESO = OFF, Oscillator Switchover mode disabled
   418  300001                     	org	3145729
   419  300001  0C                 	db	12
   420                           
   421                           ;Config register CONFIG2L @ 0x300002
   422                           ;	Power-up Timer Enable bit
   423                           ;	PWRT = OFF, PWRT disabled
   424                           ;	Brown-out Reset Enable bits
   425                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   426                           ;	Brown-out Reset Voltage bits
   427                           ;	BORV = 3, Minimum setting 2.05V
   428                           ;	USB Voltage Regulator Enable bit
   429                           ;	VREGEN = OFF, USB voltage regulator disabled
   430  300002                     	org	3145730
   431  300002  1F                 	db	31
   432                           
   433                           ;Config register CONFIG2H @ 0x300003
   434                           ;	Watchdog Timer Enable bit
   435                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   436                           ;	Watchdog Timer Postscale Select bits
   437                           ;	WDTPS = 32768, 1:32768
   438  300003                     	org	3145731
   439  300003  1E                 	db	30
   440                           
   441                           ; Padding undefined space
   442  300004                     	org	3145732
   443  300004  FF                 	db	255
   444                           
   445                           ;Config register CONFIG3H @ 0x300005
   446                           ;	CCP2 MUX bit
   447                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   448                           ;	PORTB A/D Enable bit
   449                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   450                           ;	Low-Power Timer 1 Oscillator Enable bit
   451                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   452                           ;	MCLR Pin Enable bit
   453                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   454  300005                     	org	3145733
   455  300005  83                 	db	131
   456                           
   457                           ;Config register CONFIG4L @ 0x300006
   458                           ;	Stack Full/Underflow Reset Enable bit
   459                           ;	STVREN = ON, Stack full/underflow will cause Reset
   460                           ;	Single-Supply ICSP Enable bit
   461                           ;	LVP = ON, Single-Supply ICSP enabled
   462                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   463                           ;	ICPRT = OFF, ICPORT disabled
   464                           ;	Extended Instruction Set Enable bit
   465                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   466                           ;	Background Debugger Enable bit
   467                           ;	DEBUG = 0x1, unprogrammed default
   468  300006                     	org	3145734
   469  300006  85                 	db	133
   470                           
   471                           ; Padding undefined space
   472  300007                     	org	3145735
   473  300007  FF                 	db	255
   474                           
   475                           ;Config register CONFIG5L @ 0x300008
   476                           ;	Code Protection bit
   477                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   478                           ;	Code Protection bit
   479                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   480                           ;	Code Protection bit
   481                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   482                           ;	Code Protection bit
   483                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   484  300008                     	org	3145736
   485  300008  0F                 	db	15
   486                           
   487                           ;Config register CONFIG5H @ 0x300009
   488                           ;	Boot Block Code Protection bit
   489                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   490                           ;	Data EEPROM Code Protection bit
   491                           ;	CPD = OFF, Data EEPROM is not code-protected
   492  300009                     	org	3145737
   493  300009  C0                 	db	192
   494                           
   495                           ;Config register CONFIG6L @ 0x30000A
   496                           ;	Write Protection bit
   497                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   498                           ;	Write Protection bit
   499                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   500                           ;	Write Protection bit
   501                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   502                           ;	Write Protection bit
   503                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   504  30000A                     	org	3145738
   505  30000A  0F                 	db	15
   506                           
   507                           ;Config register CONFIG6H @ 0x30000B
   508                           ;	Configuration Register Write Protection bit
   509                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   510                           ;	Boot Block Write Protection bit
   511                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   512                           ;	Data EEPROM Write Protection bit
   513                           ;	WRTD = OFF, Data EEPROM is not write-protected
   514  30000B                     	org	3145739
   515  30000B  E0                 	db	224
   516                           
   517                           ;Config register CONFIG7L @ 0x30000C
   518                           ;	Table Read Protection bit
   519                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   520                           ;	Table Read Protection bit
   521                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   522                           ;	Table Read Protection bit
   523                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   524                           ;	Table Read Protection bit
   525                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   526  30000C                     	org	3145740
   527  30000C  0F                 	db	15
   528                           
   529                           ;Config register CONFIG7H @ 0x30000D
   530                           ;	Boot Block Table Read Protection bit
   531                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   532  30000D                     	org	3145741
   533  30000D  40                 	db	64
   534                           tosu	equ	0xFFF
   535                           tosh	equ	0xFFE
   536                           tosl	equ	0xFFD
   537                           stkptr	equ	0xFFC
   538                           pclatu	equ	0xFFB
   539                           pclath	equ	0xFFA
   540                           pcl	equ	0xFF9
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           prodh	equ	0xFF4
   546                           prodl	equ	0xFF3
   547                           indf0	equ	0xFEF
   548                           postinc0	equ	0xFEE
   549                           postdec0	equ	0xFED
   550                           preinc0	equ	0xFEC
   551                           plusw0	equ	0xFEB
   552                           fsr0h	equ	0xFEA
   553                           fsr0l	equ	0xFE9
   554                           wreg	equ	0xFE8
   555                           indf1	equ	0xFE7
   556                           postinc1	equ	0xFE6
   557                           postdec1	equ	0xFE5
   558                           preinc1	equ	0xFE4
   559                           plusw1	equ	0xFE3
   560                           fsr1h	equ	0xFE2
   561                           fsr1l	equ	0xFE1
   562                           bsr	equ	0xFE0
   563                           indf2	equ	0xFDF
   564                           postinc2	equ	0xFDE
   565                           postdec2	equ	0xFDD
   566                           preinc2	equ	0xFDC
   567                           plusw2	equ	0xFDB
   568                           fsr2h	equ	0xFDA
   569                           fsr2l	equ	0xFD9
   570                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myInterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myInterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myInterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myInterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myInterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myInterruptHandler in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _timer0Setup
 ---------------------------------------------------------------------------------
 (1) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myInterruptHandler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer0Setup

 _myInterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       2       1        2.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      20        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 30 17:44:16 2021

                         l30 007C                           l44 009E                           u10 0076  
                         u11 0072                          l720 0086                          l730 0060  
                        l722 0050                          l732 0064                          l724 0054  
                        l734 0066                          l726 0058                          l736 0068  
                        l728 005C                          l738 0076                         _LATA 000F89  
                       i2l41 004C                         _main 0050                         btemp 0003  
                       start 000E                 ___param_bank 000000                        ?_main 0000  
                      _CMCON 000FB4                        i2l740 0014                        i2l750 0048  
                      i2l742 0022                        i2l744 0026                        i2l746 0028  
                      i2l748 0040                        _TRISA 000F92                        _TRISD 000F95  
                      ttemp5 0004                        ttemp6 0007                        ttemp7 000B  
                      status 000FD8                        wtemp8 0004              __initialization 00A0  
               __end_of_main 0086                       ??_main 0000                __activetblptr 000000  
                     _ADCON1 000FC1                       i2u2_40 0022                       i2u2_41 001E  
                     i2u3_40 0040                       i2u3_41 003C                 ?_timer0Setup 0000  
 __end_of_myInterruptHandler 0050                   __accesstop 0060      __end_of__initialization 00A4  
              ___rparam_used 000001               __pcstackCOMRAM 0000                      __Hparam 0000  
                    __Lparam 0000                      __pcinit 00A0         __size_of_timer0Setup 001A  
                    __ramtop 0800                      __ptext0 0050                      __ptext1 0086  
                  _T0CONbits 000FD5                      _counter 0001               __pintcode_body 0012  
       end_of_initialization 00A4                      int_func 0012                    _PORTDbits 000F83  
         _myInterruptHandler 0008          ?_myInterruptHandler 0000         ??_myInterruptHandler 0000  
        start_initialization 00A0                  __pbssCOMRAM 0001                    __pintcode 0008  
                   _LATAbits 000F89                     _RCONbits 000FD0                ??_timer0Setup 0000  
                   __Hrparam 0000                     __Lrparam 0000          __end_of_timer0Setup 00A0  
              __size_of_main 0036                     int$flags 0003  __size_of_myInterruptHandler 0048  
                 _INTCONbits 000FF2                     intlevel2 0000                  _timer0Setup 0086  
