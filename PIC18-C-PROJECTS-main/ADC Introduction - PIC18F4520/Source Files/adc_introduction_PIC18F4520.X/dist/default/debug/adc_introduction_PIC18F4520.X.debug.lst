

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 10 12:08:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4520 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _PIR1bits	set	3998
    96  0000                     _ADRESL	set	4035
    97  0000                     _ADRESH	set	4036
    98  0000                     _INTCONbits	set	4082
    99  0000                     _RCONbits	set	4048
   100  0000                     _ADCON0bits	set	4034
   101  0000                     _ADCON2bits	set	4032
   102  0000                     _ADCON1bits	set	4033
   103  0000                     _TRISAbits	set	3986
   104  0000                     _LATD	set	3980
   105  0000                     _TRISD	set	3989
   106  0000                     _RCREG	set	4014
   107  0000                     _TXREG	set	4013
   108  0000                     _PIE1bits	set	3997
   109  0000                     _IPR1bits	set	3999
   110  0000                     _TXSTAbits	set	4012
   111  0000                     _BAUDCONbits	set	4024
   112  0000                     _RCSTAbits	set	4011
   113  0000                     _SPBRG	set	4015
   114  0000                     _SPBRGH	set	4016
   115  0000                     _TRISCbits	set	3988
   116                           
   117                           	psect	smallconst
   118  000600                     __psmallconst:
   119                           	callstack 0
   120  000600  00                 	db	0
   121  000601                     STR_1:
   122  000601  0D                 	db	13
   123  000602  41                 	db	65	;'A'
   124  000603  44                 	db	68	;'D'
   125  000604  43                 	db	67	;'C'
   126  000605  20                 	db	32
   127  000606  52                 	db	82	;'R'
   128  000607  65                 	db	101	;'e'
   129  000608  61                 	db	97	;'a'
   130  000609  64                 	db	100	;'d'
   131  00060A  3A                 	db	58	;':'
   132  00060B  20                 	db	32
   133  00060C  30                 	db	48	;'0'
   134  00060D  78                 	db	120	;'x'
   135  00060E  25                 	db	37
   136  00060F  30                 	db	48	;'0'
   137  000610  32                 	db	50	;'2'
   138  000611  78                 	db	120	;'x'
   139  000612  25                 	db	37
   140  000613  30                 	db	48	;'0'
   141  000614  32                 	db	50	;'2'
   142  000615  78                 	db	120	;'x'
   143  000616  09                 	db	9
   144  000617  00                 	db	0
   145  000618                     STR_2:
   146  000618  41                 	db	65	;'A'
   147  000619  44                 	db	68	;'D'
   148  00061A  43                 	db	67	;'C'
   149  00061B  20                 	db	32
   150  00061C  56                 	db	86	;'V'
   151  00061D  6F                 	db	111	;'o'
   152  00061E  6C                 	db	108	;'l'
   153  00061F  74                 	db	116	;'t'
   154  000620  3A                 	db	58	;':'
   155  000621  20                 	db	32
   156  000622  25                 	db	37
   157  000623  2E                 	db	46
   158  000624  32                 	db	50	;'2'
   159  000625  66                 	db	102	;'f'
   160  000626  09                 	db	9
   161  000627  00                 	db	0
   162  000628                     STR_3:
   163  000628  49                 	db	73	;'I'
   164  000629  4E                 	db	78	;'N'
   165  00062A  46                 	db	70	;'F'
   166  00062B  00                 	db	0
   167  00062C                     STR_7:
   168  00062C  4E                 	db	78	;'N'
   169  00062D  41                 	db	65	;'A'
   170  00062E  4E                 	db	78	;'N'
   171  00062F  00                 	db	0
   172  000630                     STR_4:
   173  000630  69                 	db	105	;'i'
   174  000631  6E                 	db	110	;'n'
   175  000632  66                 	db	102	;'f'
   176  000633  00                 	db	0
   177  000634                     STR_8:
   178  000634  6E                 	db	110	;'n'
   179  000635  61                 	db	97	;'a'
   180  000636  6E                 	db	110	;'n'
   181  000637  00                 	db	0
   182  000638                     STR_11:
   183  000638  6C                 	db	108	;'l'
   184  000639  66                 	db	102	;'f'
   185  00063A  00                 	db	0
   186  00063B  00                 	db	0	; dummy byte at the end
   187  0000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191  003940                     __pcinit:
   192                           	callstack 0
   193  003940                     start_initialization:
   194                           	callstack 0
   195  003940                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Clear objects allocated to BANK2 (256 bytes)
   199  003940  EE02  F000         	lfsr	0,__pbssBANK2
   200  003944  EE11 F000          	lfsr	1,256
   201  003948                     clear_0:
   202  003948  6AEE               	clrf	postinc0,c
   203  00394A  50E5               	movf	postdec1,w,c
   204  00394C  50E1               	movf	fsr1l,w,c
   205  00394E  E1FC               	bnz	clear_0
   206  003950  50E2               	movf	fsr1h,w,c
   207  003952  E1FA               	bnz	clear_0
   208                           
   209                           ; Clear objects allocated to BANK1 (80 bytes)
   210  003954  EE01  F000         	lfsr	0,__pbssBANK1
   211  003958  0E50               	movlw	80
   212  00395A                     clear_1:
   213  00395A  6AEE               	clrf	postinc0,c
   214  00395C  06E8               	decf	wreg,f,c
   215  00395E  E1FD               	bnz	clear_1
   216                           
   217                           ; Clear objects allocated to BANK0 (16 bytes)
   218  003960  EE00  F0D1         	lfsr	0,__pbssBANK0
   219  003964  0E10               	movlw	16
   220  003966                     clear_2:
   221  003966  6AEE               	clrf	postinc0,c
   222  003968  06E8               	decf	wreg,f,c
   223  00396A  E1FD               	bnz	clear_2
   224                           
   225                           ; Clear objects allocated to COMRAM (8 bytes)
   226  00396C  EE00  F06E         	lfsr	0,__pbssCOMRAM
   227  003970  0E08               	movlw	8
   228  003972                     clear_3:
   229  003972  6AEE               	clrf	postinc0,c
   230  003974  06E8               	decf	wreg,f,c
   231  003976  E1FD               	bnz	clear_3
   232  003978                     end_of_initialization:
   233                           	callstack 0
   234  003978                     __end_of__initialization:
   235                           	callstack 0
   236  003978  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237  00397A  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238  00397C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  00397E  6EF8               	movwf	tblptru,c
   240  003980  0100               	movlb	0
   241  003982  EF1E  F017         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244  00006E                     __pbssCOMRAM:
   245                           	callstack 0
   246  00006E                     _width:
   247                           	callstack 0
   248  00006E                     	ds	2
   249  000070                     _prec:
   250                           	callstack 0
   251  000070                     	ds	2
   252  000072                     _flags:
   253                           	callstack 0
   254  000072                     	ds	2
   255  000074                     _got_data_bool:
   256                           	callstack 0
   257  000074                     	ds	1
   258  000075                     _data:
   259                           	callstack 0
   260  000075                     	ds	1
   261                           
   262                           	psect	bssBANK0
   263  0000D1                     __pbssBANK0:
   264                           	callstack 0
   265  0000D1                     floorf@F527:
   266                           	callstack 0
   267  0000D1                     	ds	4
   268  0000D5                     ___fpclassifyf@F465:
   269                           	callstack 0
   270  0000D5                     	ds	4
   271  0000D9                     _adc_volt:
   272                           	callstack 0
   273  0000D9                     	ds	4
   274  0000DD                     _nout:
   275                           	callstack 0
   276  0000DD                     	ds	2
   277  0000DF                     _adc_to_led:
   278                           	callstack 0
   279  0000DF                     	ds	2
   280                           
   281                           	psect	bssBANK1
   282  000100                     __pbssBANK1:
   283                           	callstack 0
   284  000100                     _dbuf:
   285                           	callstack 0
   286  000100                     	ds	80
   287                           
   288                           	psect	bssBANK2
   289  000200                     __pbssBANK2:
   290                           	callstack 0
   291  000200                     _print_buffer:
   292                           	callstack 0
   293  000200                     	ds	256
   294                           
   295                           	psect	cstackBANK0
   296  000080                     __pcstackBANK0:
   297                           	callstack 0
   298  000080                     _efgtoa$1319:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x0
   302  000080                     	ds	2
   303  000082                     _efgtoa$1320:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x2
   307  000082                     	ds	2
   308  000084                     _efgtoa$1325:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x4
   312  000084                     	ds	2
   313  000086                     _efgtoa$1329:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x6
   317  000086                     	ds	2
   318  000088                     _efgtoa$1330:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322  000088                     	ds	2
   323  00008A                     _efgtoa$1331:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0xA
   327  00008A                     	ds	2
   328  00008C                     efgtoa@t:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0xC
   332  00008C                     	ds	2
   333  00008E                     efgtoa@pp:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0xE
   337  00008E                     	ds	2
   338  000090                     efgtoa@ne:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x10
   342  000090                     	ds	2
   343  000092                     efgtoa@m:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x12
   347  000092                     	ds	2
   348  000094                     efgtoa@ou:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x14
   352  000094                     	ds	4
   353  000098                     efgtoa@d:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x18
   357  000098                     	ds	2
   358  00009A                     efgtoa@sign:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x1A
   362  00009A                     	ds	2
   363  00009C                     efgtoa@p:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x1C
   367  00009C                     	ds	2
   368  00009E                     efgtoa@w:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x1E
   372  00009E                     	ds	2
   373  0000A0                     efgtoa@nmode:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x20
   377  0000A0                     	ds	1
   378  0000A1                     efgtoa@mode:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x21
   382  0000A1                     	ds	1
   383  0000A2                     efgtoa@h:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x22
   387  0000A2                     	ds	4
   388  0000A6                     efgtoa@l:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x26
   392  0000A6                     	ds	4
   393  0000AA                     efgtoa@i:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x2A
   397  0000AA                     	ds	2
   398  0000AC                     efgtoa@g:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x2C
   402  0000AC                     	ds	4
   403  0000B0                     efgtoa@e:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x30
   407  0000B0                     	ds	2
   408  0000B2                     efgtoa@n:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x32
   412  0000B2                     	ds	2
   413  0000B4                     efgtoa@u:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x34
   417  0000B4                     	ds	4
   418  0000B8                     ?_vfprintf:
   419                           	callstack 0
   420  0000B8                     vfprintf@fp:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x38
   424  0000B8                     	ds	2
   425  0000BA                     vfprintf@fmt:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x3A
   429  0000BA                     	ds	2
   430  0000BC                     vfprintf@ap:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x3C
   434  0000BC                     	ds	2
   435  0000BE                     ?_sprintf:
   436                           	callstack 0
   437  0000BE                     sprintf@s:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x3E
   441  0000BE                     	ds	2
   442  0000C0                     sprintf@fmt:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x40
   446  0000C0                     	ds	6
   447  0000C6                     sprintf@ap:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x46
   451  0000C6                     	ds	2
   452  0000C8                     sprintf@f:
   453                           	callstack 0
   454                           
   455                           ; 6 bytes @ 0x48
   456  0000C8                     	ds	6
   457  0000CE                     ??_main:
   458                           
   459                           ; 1 bytes @ 0x4E
   460  0000CE                     	ds	3
   461                           
   462                           	psect	cstackCOMRAM
   463  000001                     __pcstackCOMRAM:
   464                           	callstack 0
   465  000001                     uart_receiver@c:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x0
   469  000001                     	ds	2
   470  000003                     uart_receiver@rx_flag:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x2
   474  000003                     	ds	2
   475  000005                     ??_high_isr:
   476                           
   477                           ; 1 bytes @ 0x4
   478  000005                     	ds	2
   479  000007                     ??_low_isr:
   480                           
   481                           ; 1 bytes @ 0x6
   482  000007                     	ds	1
   483  000008                     ?_strlen:
   484                           	callstack 0
   485  000008                     ?___fpclassifyf:
   486                           	callstack 0
   487  000008                     ?_isupper:
   488                           	callstack 0
   489  000008                     ?_isalpha:
   490                           	callstack 0
   491  000008                     ?_isdigit:
   492                           	callstack 0
   493  000008                     ?_strncmp:
   494                           	callstack 0
   495  000008                     ?_isspace:
   496                           	callstack 0
   497  000008                     ?_islower:
   498                           	callstack 0
   499  000008                     ?___wmul:
   500                           	callstack 0
   501  000008                     ?___awdiv:
   502                           	callstack 0
   503  000008                     ?___awmod:
   504                           	callstack 0
   505  000008                     ?___fladd:
   506                           	callstack 0
   507  000008                     ?___fldiv:
   508                           	callstack 0
   509  000008                     ?___flneg:
   510                           	callstack 0
   511  000008                     ?___fltol:
   512                           	callstack 0
   513  000008                     ?___xxtofl:
   514                           	callstack 0
   515  000008                     uart_init@gen_reg:
   516                           	callstack 0
   517  000008                     uart_send@c:
   518                           	callstack 0
   519  000008                     ___wmul@multiplier:
   520                           	callstack 0
   521  000008                     ___awdiv@dividend:
   522                           	callstack 0
   523  000008                     ___awmod@dividend:
   524                           	callstack 0
   525  000008                     isalpha@c:
   526                           	callstack 0
   527  000008                     isdigit@c:
   528                           	callstack 0
   529  000008                     isspace@c:
   530                           	callstack 0
   531  000008                     isupper@c:
   532                           	callstack 0
   533  000008                     fputc@c:
   534                           	callstack 0
   535  000008                     strcpy@dest:
   536                           	callstack 0
   537  000008                     strlen@s:
   538                           	callstack 0
   539  000008                     strncmp@_l:
   540                           	callstack 0
   541  000008                     islower@c:
   542                           	callstack 0
   543  000008                     ___fleq@ff1:
   544                           	callstack 0
   545  000008                     ___flneg@f1:
   546                           	callstack 0
   547  000008                     ___fltol@f1:
   548                           	callstack 0
   549  000008                     ___fladd@b:
   550                           	callstack 0
   551  000008                     ___fldiv@b:
   552                           	callstack 0
   553  000008                     ___xxtofl@val:
   554                           	callstack 0
   555  000008                     ___fpclassifyf@x:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x7
   559  000008                     	ds	2
   560  00000A                     ??_isupper:
   561  00000A                     ??_isalpha:
   562  00000A                     ??_isdigit:
   563  00000A                     ??_isspace:
   564  00000A                     ??_islower:
   565  00000A                     uart_init@sync:
   566                           	callstack 0
   567  00000A                     uart_send_string@c:
   568                           	callstack 0
   569  00000A                     ___wmul@multiplicand:
   570                           	callstack 0
   571  00000A                     ___awdiv@divisor:
   572                           	callstack 0
   573  00000A                     ___awmod@divisor:
   574                           	callstack 0
   575  00000A                     fputc@fp:
   576                           	callstack 0
   577  00000A                     strcpy@src:
   578                           	callstack 0
   579  00000A                     strlen@a:
   580                           	callstack 0
   581  00000A                     strncmp@_r:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x9
   585  00000A                     	ds	2
   586  00000C                     ??_fputc:
   587  00000C                     ??___fpclassifyf:
   588  00000C                     ??_strcpy:
   589  00000C                     ??___fltol:
   590  00000C                     ??___xxtofl:
   591  00000C                     uart_send_string@i:
   592                           	callstack 0
   593  00000C                     ___awdiv@counter:
   594                           	callstack 0
   595  00000C                     ___awmod@counter:
   596                           	callstack 0
   597  00000C                     uart_init@brgh:
   598                           	callstack 0
   599  00000C                     ___wmul@product:
   600                           	callstack 0
   601  00000C                     strncmp@n:
   602                           	callstack 0
   603  00000C                     ___fleq@ff2:
   604                           	callstack 0
   605  00000C                     ___fladd@a:
   606                           	callstack 0
   607  00000C                     ___fldiv@a:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0xB
   611  00000C                     	ds	1
   612  00000D                     ___awdiv@sign:
   613                           	callstack 0
   614  00000D                     ___awmod@sign:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0xC
   618  00000D                     	ds	1
   619  00000E                     ??_strncmp:
   620  00000E                     ?_tolower:
   621                           	callstack 0
   622  00000E                     ?_toupper:
   623                           	callstack 0
   624  00000E                     _isspace$1436:
   625                           	callstack 0
   626  00000E                     uart_init@brg16:
   627                           	callstack 0
   628  00000E                     ___awdiv@quotient:
   629                           	callstack 0
   630  00000E                     strcpy@s:
   631                           	callstack 0
   632  00000E                     tolower@c:
   633                           	callstack 0
   634  00000E                     toupper@c:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xD
   638  00000E                     	ds	1
   639  00000F                     ?_atoi:
   640                           	callstack 0
   641  00000F                     atoi@s:
   642                           	callstack 0
   643  00000F                     strncmp@l:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0xE
   647  00000F                     	ds	1
   648  000010                     ??___fladd:
   649  000010                     ??___fldiv:
   650  000010                     ??_tolower:
   651  000010                     ??_toupper:
   652  000010                     ??___fleq:
   653  000010                     ___fltol@sign1:
   654                           	callstack 0
   655  000010                     ___xxtofl@sign:
   656                           	callstack 0
   657  000010                     ___fpclassifyf@e:
   658                           	callstack 0
   659  000010                     strcpy@d:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0xF
   663  000010                     	ds	1
   664  000011                     ??_atoi:
   665  000011                     ___fltol@exp1:
   666                           	callstack 0
   667  000011                     ___xxtofl@exp:
   668                           	callstack 0
   669  000011                     fputs@s:
   670                           	callstack 0
   671  000011                     strncmp@r:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x10
   675  000011                     	ds	1
   676  000012                     ___xxtofl@arg:
   677                           	callstack 0
   678  000012                     ___fpclassifyf@u:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x11
   682  000012                     	ds	1
   683  000013                     fputs@fp:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x12
   687  000013                     	ds	1
   688  000014                     ___fladd@signs:
   689                           	callstack 0
   690  000014                     _tolower$1500:
   691                           	callstack 0
   692  000014                     _toupper$1515:
   693                           	callstack 0
   694  000014                     ___fldiv@rem:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x13
   698  000014                     	ds	1
   699  000015                     ___fladd@aexp:
   700                           	callstack 0
   701  000015                     fputs@c:
   702                           	callstack 0
   703  000015                     atoi@neg:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x14
   707  000015                     	ds	1
   708  000016                     ?___flmul:
   709                           	callstack 0
   710  000016                     ___fladd@bexp:
   711                           	callstack 0
   712  000016                     fputs@i:
   713                           	callstack 0
   714  000016                     ___flmul@b:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x15
   718  000016                     	ds	1
   719  000017                     ___fladd@grs:
   720                           	callstack 0
   721  000017                     _atoi$1396:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x16
   725  000017                     	ds	1
   726  000018                     ?_pad:
   727                           	callstack 0
   728  000018                     ___fldiv@sign:
   729                           	callstack 0
   730  000018                     pad@fp:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x17
   734  000018                     	ds	1
   735  000019                     ___fldiv@new_exp:
   736                           	callstack 0
   737  000019                     _atoi$1398:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x18
   741  000019                     	ds	1
   742  00001A                     pad@buf:
   743                           	callstack 0
   744  00001A                     ___flmul@a:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x19
   748  00001A                     	ds	1
   749  00001B                     _atoi$1397:
   750                           	callstack 0
   751  00001B                     ___fldiv@grs:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x1A
   755  00001B                     	ds	1
   756  00001C                     pad@p:
   757                           	callstack 0
   758  00001C                     atoi@n:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x1B
   762  00001C                     	ds	2
   763  00001E                     ??___flmul:
   764  00001E                     ??_pad:
   765                           
   766                           ; 1 bytes @ 0x1D
   767  00001E                     	ds	1
   768  00001F                     ___fldiv@bexp:
   769                           	callstack 0
   770  00001F                     pad@i:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x1E
   774  00001F                     	ds	1
   775  000020                     ___fldiv@aexp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x1F
   779  000020                     	ds	1
   780  000021                     ?_floorf:
   781                           	callstack 0
   782  000021                     pad@w:
   783                           	callstack 0
   784  000021                     floorf@x:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x20
   788  000021                     	ds	1
   789  000022                     ___flmul@sign:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x21
   793  000022                     	ds	1
   794  000023                     ?_xtoa:
   795                           	callstack 0
   796  000023                     xtoa@fp:
   797                           	callstack 0
   798  000023                     ___flmul@grs:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x22
   802  000023                     	ds	2
   803  000025                     ??_floorf:
   804  000025                     xtoa@d:
   805                           	callstack 0
   806                           
   807                           ; 8 bytes @ 0x24
   808  000025                     	ds	2
   809  000027                     ___flmul@aexp:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x26
   813  000027                     	ds	1
   814  000028                     ___flmul@bexp:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x27
   818  000028                     	ds	1
   819  000029                     ___flmul@prod:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x28
   823  000029                     	ds	2
   824  00002B                     floorf@m:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x2A
   828  00002B                     	ds	2
   829  00002D                     xtoa@x:
   830                           	callstack 0
   831  00002D                     ___flmul@temp:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x2C
   835  00002D                     	ds	1
   836  00002E                     ??_xtoa:
   837                           
   838                           ; 1 bytes @ 0x2D
   839  00002E                     	ds	1
   840  00002F                     ?___flsub:
   841                           	callstack 0
   842  00002F                     floorf@e:
   843                           	callstack 0
   844  00002F                     ___flge@ff1:
   845                           	callstack 0
   846  00002F                     ___flsub@b:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x2E
   850  00002F                     	ds	2
   851  000031                     floorf@u:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x30
   855  000031                     	ds	2
   856  000033                     ___flge@ff2:
   857                           	callstack 0
   858  000033                     ___flsub@a:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x32
   862  000033                     	ds	3
   863  000036                     _xtoa$1341:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x35
   867  000036                     	ds	1
   868  000037                     ??___flge:
   869                           
   870                           ; 1 bytes @ 0x36
   871  000037                     	ds	1
   872  000038                     _xtoa$1342:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x37
   876  000038                     	ds	2
   877  00003A                     xtoa@p:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x39
   881  00003A                     	ds	1
   882  00003B                     ?_efgtoa:
   883                           	callstack 0
   884  00003B                     efgtoa@fp:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x3A
   888  00003B                     	ds	1
   889  00003C                     xtoa@w:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x3B
   893  00003C                     	ds	1
   894  00003D                     efgtoa@f:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x3C
   898  00003D                     	ds	1
   899  00003E                     xtoa@n:
   900                           	callstack 0
   901                           
   902                           ; 8 bytes @ 0x3D
   903  00003E                     	ds	3
   904  000041                     efgtoa@c:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x40
   908  000041                     	ds	1
   909  000042                     ??_efgtoa:
   910                           
   911                           ; 1 bytes @ 0x41
   912  000042                     	ds	4
   913  000046                     xtoa@i:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x45
   917  000046                     	ds	2
   918  000048                     xtoa@c:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x47
   922  000048                     	ds	2
   923  00004A                     ?_vfpfcnvrt:
   924                           	callstack 0
   925  00004A                     vfpfcnvrt@fp:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x49
   929  00004A                     	ds	2
   930  00004C                     vfpfcnvrt@fmt:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x4B
   934  00004C                     	ds	2
   935  00004E                     vfpfcnvrt@ap:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x4D
   939  00004E                     	ds	2
   940  000050                     ??_vfpfcnvrt:
   941                           
   942                           ; 1 bytes @ 0x4F
   943  000050                     	ds	4
   944  000054                     vfpfcnvrt@llu:
   945                           	callstack 0
   946                           
   947                           ; 8 bytes @ 0x53
   948  000054                     	ds	8
   949  00005C                     vfpfcnvrt@done:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x5B
   953  00005C                     	ds	2
   954  00005E                     _vfpfcnvrt$1356:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x5D
   958  00005E                     	ds	2
   959  000060                     _vfpfcnvrt$1357:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x5F
   963  000060                     	ds	2
   964  000062                     _vfpfcnvrt$1361:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x61
   968  000062                     	ds	2
   969  000064                     vfpfcnvrt@f:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x63
   973  000064                     	ds	4
   974  000068                     vfpfcnvrt@ct:
   975                           	callstack 0
   976                           
   977                           ; 3 bytes @ 0x67
   978  000068                     	ds	3
   979  00006B                     vfpfcnvrt@c:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x6A
   983  00006B                     	ds	1
   984  00006C                     vfprintf@cfmt:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x6B
   988  00006C                     	ds	2
   989  00006E                     
   990                           ; 1 bytes @ 0x6D
   991 ;;
   992 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   993 ;;
   994 ;; *************** function _main *****************
   995 ;; Defined at:
   996 ;;		line 85 in file "main.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1010 ;;      Params:         0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0
  1012 ;;      Temps:          0       3       0       0       0       0       0
  1013 ;;      Totals:         0       3       0       0       0       0       0
  1014 ;;Total ram usage:        3 bytes
  1015 ;; Hardware stack levels required when called: 11
  1016 ;; This function calls:
  1017 ;;		___flmul
  1018 ;;		___xxtofl
  1019 ;;		_sprintf
  1020 ;;		_uart_init
  1021 ;;		_uart_send_string
  1022 ;; This function is called by:
  1023 ;;		Startup code after reset
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text0
  1028  002E3C                     __ptext0:
  1029                           	callstack 0
  1030  002E3C                     _main:
  1031                           	callstack 20
  1032  002E3C                     
  1033                           ;main.c: 92:     TRISD=0;
  1034  002E3C  0E00               	movlw	0
  1035  002E3E  6E95               	movwf	149,c	;volatile
  1036                           
  1037                           ;main.c: 93:     LATD=0;
  1038  002E40  0E00               	movlw	0
  1039  002E42  6E8C               	movwf	140,c	;volatile
  1040  002E44                     
  1041                           ;main.c: 94:     uart_init(51,0,1,0);
  1042  002E44  0E00               	movlw	0
  1043  002E46  6E09               	movwf	(uart_init@gen_reg+1)^0,c
  1044  002E48  0E33               	movlw	51
  1045  002E4A  6E08               	movwf	uart_init@gen_reg^0,c
  1046  002E4C  0E00               	movlw	0
  1047  002E4E  6E0B               	movwf	(uart_init@sync+1)^0,c
  1048  002E50  0E00               	movlw	0
  1049  002E52  6E0A               	movwf	uart_init@sync^0,c
  1050  002E54  0E00               	movlw	0
  1051  002E56  6E0D               	movwf	(uart_init@brgh+1)^0,c
  1052  002E58  0E01               	movlw	1
  1053  002E5A  6E0C               	movwf	uart_init@brgh^0,c
  1054  002E5C  0E00               	movlw	0
  1055  002E5E  6E0F               	movwf	(uart_init@brg16+1)^0,c
  1056  002E60  0E00               	movlw	0
  1057  002E62  6E0E               	movwf	uart_init@brg16^0,c
  1058  002E64  ECF1  F01D         	call	_uart_init	;wreg free
  1059  002E68                     
  1060                           ;main.c: 96:     TRISAbits.RA0 = 1;
  1061  002E68  8092               	bsf	146,0,c	;volatile
  1062  002E6A                     
  1063                           ;main.c: 98:     ADCON1bits.VCFG0 = 0;
  1064  002E6A  98C1               	bcf	193,4,c	;volatile
  1065  002E6C                     
  1066                           ;main.c: 99:     ADCON1bits.VCFG1 = 0;
  1067  002E6C  9AC1               	bcf	193,5,c	;volatile
  1068  002E6E                     
  1069                           ;main.c: 100:     ADCON1bits.PCFG = 0x0E;
  1070  002E6E  50C1               	movf	193,w,c	;volatile
  1071  002E70  0BF0               	andlw	-16
  1072  002E72  090E               	iorlw	14
  1073  002E74  6EC1               	movwf	193,c	;volatile
  1074  002E76                     
  1075                           ;main.c: 102:     ADCON2bits.ADFM = 1;
  1076  002E76  8EC0               	bsf	192,7,c	;volatile
  1077  002E78                     
  1078                           ;main.c: 103:     ADCON2bits.ACQT = 0x04;
  1079  002E78  50C0               	movf	192,w,c	;volatile
  1080  002E7A  0BC7               	andlw	-57
  1081  002E7C  0920               	iorlw	32
  1082  002E7E  6EC0               	movwf	192,c	;volatile
  1083  002E80                     
  1084                           ;main.c: 104:     ADCON2bits.ADCS = 0x04;
  1085  002E80  50C0               	movf	192,w,c	;volatile
  1086  002E82  0BF8               	andlw	-8
  1087  002E84  0904               	iorlw	4
  1088  002E86  6EC0               	movwf	192,c	;volatile
  1089  002E88                     
  1090                           ;main.c: 106:     ADCON0bits.CHS = 0;
  1091  002E88  0EC3               	movlw	-61
  1092  002E8A  16C2               	andwf	194,f,c	;volatile
  1093  002E8C                     
  1094                           ;main.c: 107:     ADCON0bits.ADON = 1;
  1095  002E8C  80C2               	bsf	194,0,c	;volatile
  1096  002E8E                     
  1097                           ;main.c: 109:     RCONbits.IPEN = 1;
  1098  002E8E  8ED0               	bsf	208,7,c	;volatile
  1099  002E90                     
  1100                           ;main.c: 110:     INTCONbits.GIEH = 1;
  1101  002E90  8EF2               	bsf	242,7,c	;volatile
  1102  002E92                     
  1103                           ;main.c: 111:     INTCONbits.GIEL = 1;
  1104  002E92  8CF2               	bsf	242,6,c	;volatile
  1105  002E94                     l4479:
  1106                           
  1107                           ;main.c: 114:         ADCON0bits.GODONE = 1;
  1108  002E94  82C2               	bsf	194,1,c	;volatile
  1109  002E96                     l90:
  1110  002E96  B2C2               	btfsc	194,1,c	;volatile
  1111  002E98  EF50  F017         	goto	u5661
  1112  002E9C  EF52  F017         	goto	u5660
  1113  002EA0                     u5661:
  1114  002EA0  EF4B  F017         	goto	l90
  1115  002EA4                     u5660:
  1116  002EA4                     
  1117                           ;main.c: 116:         sprintf(print_buffer,"\rADC Read: 0x%02x%02x\t",ADRESH,ADRESL);
  1118  002EA4  0E00               	movlw	low _print_buffer
  1119  002EA6  0100               	movlb	0	; () banked
  1120  002EA8  6FBE               	movwf	sprintf@s& (0+255),b
  1121  002EAA  0E02               	movlw	high _print_buffer
  1122  002EAC  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1123  002EAE  0E01               	movlw	low STR_1
  1124  002EB0  6FC0               	movwf	sprintf@fmt& (0+255),b
  1125  002EB2  0E06               	movlw	high STR_1
  1126  002EB4  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1127  002EB6  CFC4 F0C2          	movff	4036,?_sprintf+4	;volatile
  1128  002EBA  6BC3               	clrf	(?_sprintf+5)& (0+255),b
  1129  002EBC  CFC3 F0C4          	movff	4035,?_sprintf+6	;volatile
  1130  002EC0  6BC5               	clrf	(?_sprintf+7)& (0+255),b
  1131  002EC2  EC4E  F01C         	call	_sprintf	;wreg free
  1132  002EC6                     
  1133                           ;main.c: 117:         uart_send_string(print_buffer);
  1134  002EC6  0E00               	movlw	low _print_buffer
  1135  002EC8  6E0A               	movwf	uart_send_string@c^0,c
  1136  002ECA  0E02               	movlw	high _print_buffer
  1137  002ECC  6E0B               	movwf	(uart_send_string@c+1)^0,c
  1138  002ECE  EC65  F01D         	call	_uart_send_string	;wreg free
  1139  002ED2                     
  1140                           ;main.c: 119:         adc_to_led = (ADRESH << 6) | (ADRESL >> 2);
  1141  002ED2  50C4               	movf	196,w,c	;volatile
  1142  002ED4  0100               	movlb	0	; () banked
  1143  002ED6  6FCE               	movwf	??_main& (0+255),b
  1144  002ED8  6BCF               	clrf	(??_main+1)& (0+255),b
  1145  002EDA  0E06               	movlw	6
  1146  002EDC                     u5675:
  1147  002EDC  90D8               	bcf	status,0,c
  1148  002EDE  37CE               	rlcf	??_main& (0+255),f,b
  1149  002EE0  37CF               	rlcf	(??_main+1)& (0+255),f,b
  1150  002EE2  2EE8               	decfsz	wreg,f,c
  1151  002EE4  EF6E  F017         	goto	u5675
  1152  002EE8  CFC3 F0D0          	movff	4035,??_main+2	;volatile
  1153  002EEC  90D8               	bcf	status,0,c
  1154  002EEE  33D0               	rrcf	(??_main+2)& (0+255),f,b
  1155  002EF0  90D8               	bcf	status,0,c
  1156  002EF2  33D0               	rrcf	(??_main+2)& (0+255),f,b
  1157  002EF4  51D0               	movf	(??_main+2)& (0+255),w,b
  1158  002EF6  11CE               	iorwf	??_main& (0+255),w,b
  1159  002EF8  6FDF               	movwf	_adc_to_led& (0+255),b
  1160  002EFA  51CF               	movf	(??_main+1)& (0+255),w,b
  1161  002EFC  6FE0               	movwf	(_adc_to_led+1)& (0+255),b
  1162  002EFE                     
  1163                           ; BSR set to: 0
  1164                           ;main.c: 120:         LATD = adc_to_led;
  1165  002EFE  C0DF  FF8C         	movff	_adc_to_led,3980	;volatile
  1166  002F02                     
  1167                           ; BSR set to: 0
  1168                           ;main.c: 122:         adc_to_led = (ADRESH << 8) | (ADRESL);
  1169  002F02  50C3               	movf	195,w,c	;volatile
  1170  002F04  CFC4 F0CE          	movff	4036,??_main	;volatile
  1171  002F08  6BCF               	clrf	(??_main+1)& (0+255),b
  1172  002F0A  C0CE  F0CF         	movff	??_main,??_main+1
  1173  002F0E  6BCE               	clrf	??_main& (0+255),b
  1174  002F10  11CE               	iorwf	??_main& (0+255),w,b
  1175  002F12  6FDF               	movwf	_adc_to_led& (0+255),b
  1176  002F14  51CF               	movf	(??_main+1)& (0+255),w,b
  1177  002F16  6FE0               	movwf	(_adc_to_led+1)& (0+255),b
  1178  002F18                     
  1179                           ; BSR set to: 0
  1180                           ;main.c: 124:         adc_volt = adc_to_led * (5.0/1023.0);
  1181  002F18  C0DF  F008         	movff	_adc_to_led,___xxtofl@val
  1182  002F1C  C0E0  F009         	movff	_adc_to_led+1,___xxtofl@val+1
  1183  002F20  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1184  002F22  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1185  002F24  0E00               	movlw	0
  1186  002F26  EC7C  F015         	call	___xxtofl
  1187  002F2A  C008  F016         	movff	?___xxtofl,___flmul@b
  1188  002F2E  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  1189  002F32  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  1190  002F36  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  1191  002F3A  0E0A               	movlw	10
  1192  002F3C  6E1A               	movwf	___flmul@a^0,c
  1193  002F3E  0E28               	movlw	40
  1194  002F40  6E1B               	movwf	(___flmul@a+1)^0,c
  1195  002F42  0EA0               	movlw	160
  1196  002F44  6E1C               	movwf	(___flmul@a+2)^0,c
  1197  002F46  0E3B               	movlw	59
  1198  002F48  6E1D               	movwf	(___flmul@a+3)^0,c
  1199  002F4A  EC27  F00F         	call	___flmul	;wreg free
  1200  002F4E  C016  F0D9         	movff	?___flmul,_adc_volt
  1201  002F52  C017  F0DA         	movff	?___flmul+1,_adc_volt+1
  1202  002F56  C018  F0DB         	movff	?___flmul+2,_adc_volt+2
  1203  002F5A  C019  F0DC         	movff	?___flmul+3,_adc_volt+3
  1204  002F5E                     
  1205                           ;main.c: 125:         sprintf(print_buffer,"ADC Volt: %.2f\t",adc_volt);
  1206  002F5E  0E00               	movlw	low _print_buffer
  1207  002F60  0100               	movlb	0	; () banked
  1208  002F62  6FBE               	movwf	sprintf@s& (0+255),b
  1209  002F64  0E02               	movlw	high _print_buffer
  1210  002F66  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1211  002F68  0E18               	movlw	low STR_2
  1212  002F6A  6FC0               	movwf	sprintf@fmt& (0+255),b
  1213  002F6C  0E06               	movlw	high STR_2
  1214  002F6E  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1215  002F70  C0D9  F0C2         	movff	_adc_volt,?_sprintf+4
  1216  002F74  C0DA  F0C3         	movff	_adc_volt+1,?_sprintf+5
  1217  002F78  C0DB  F0C4         	movff	_adc_volt+2,?_sprintf+6
  1218  002F7C  C0DC  F0C5         	movff	_adc_volt+3,?_sprintf+7
  1219  002F80  EC4E  F01C         	call	_sprintf	;wreg free
  1220  002F84                     
  1221                           ;main.c: 126:         uart_send_string(print_buffer);
  1222  002F84  0E00               	movlw	low _print_buffer
  1223  002F86  6E0A               	movwf	uart_send_string@c^0,c
  1224  002F88  0E02               	movlw	high _print_buffer
  1225  002F8A  6E0B               	movwf	(uart_send_string@c+1)^0,c
  1226  002F8C  EC65  F01D         	call	_uart_send_string	;wreg free
  1227  002F90  EF4A  F017         	goto	l4479
  1228  002F94  EF13  F000         	goto	start
  1229  002F98                     __end_of_main:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _uart_send_string *****************
  1233 ;; Defined at:
  1234 ;;		line 65 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  c               2    9[COMRAM] PTR unsigned char 
  1237 ;;		 -> print_buffer(256), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  i               1   11[COMRAM] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1249 ;;      Params:         2       0       0       0       0       0       0
  1250 ;;      Locals:         1       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0
  1252 ;;      Totals:         3       0       0       0       0       0       0
  1253 ;;Total ram usage:        3 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 4
  1256 ;; This function calls:
  1257 ;;		_uart_send
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text1
  1264  003ACA                     __ptext1:
  1265                           	callstack 0
  1266  003ACA                     _uart_send_string:
  1267                           	callstack 26
  1268  003ACA                     
  1269                           ;main.c: 66:     uint8_t i=0;
  1270  003ACA  0E00               	movlw	0
  1271  003ACC  6E0C               	movwf	uart_send_string@i^0,c
  1272                           
  1273                           ;main.c: 67:     while(c[i] != '\0'){
  1274  003ACE  EF72  F01D         	goto	l4271
  1275  003AD2                     l4267:
  1276                           
  1277                           ;main.c: 68:         uart_send(&c[i]);
  1278  003AD2  500C               	movf	uart_send_string@i^0,w,c
  1279  003AD4  240A               	addwf	uart_send_string@c^0,w,c
  1280  003AD6  6E08               	movwf	uart_send@c^0,c
  1281  003AD8  0E00               	movlw	0
  1282  003ADA  200B               	addwfc	(uart_send_string@c+1)^0,w,c
  1283  003ADC  6E09               	movwf	(uart_send@c+1)^0,c
  1284  003ADE  EC3A  F01E         	call	_uart_send	;wreg free
  1285  003AE2                     
  1286                           ;main.c: 69:         i++;
  1287  003AE2  2A0C               	incf	uart_send_string@i^0,f,c
  1288  003AE4                     l4271:
  1289                           
  1290                           ;main.c: 67:     while(c[i] != '\0'){
  1291  003AE4  500C               	movf	uart_send_string@i^0,w,c
  1292  003AE6  240A               	addwf	uart_send_string@c^0,w,c
  1293  003AE8  6ED9               	movwf	fsr2l,c
  1294  003AEA  0E00               	movlw	0
  1295  003AEC  200B               	addwfc	(uart_send_string@c+1)^0,w,c
  1296  003AEE  6EDA               	movwf	fsr2h,c
  1297  003AF0  50DF               	movf	indf2,w,c
  1298  003AF2  A4D8               	btfss	status,2,c
  1299  003AF4  EF7E  F01D         	goto	u5501
  1300  003AF8  EF80  F01D         	goto	u5500
  1301  003AFC                     u5501:
  1302  003AFC  EF69  F01D         	goto	l4267
  1303  003B00                     u5500:
  1304  003B00  0012               	return		;funcret
  1305  003B02                     __end_of_uart_send_string:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _uart_send *****************
  1309 ;; Defined at:
  1310 ;;		line 38 in file "main.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  c               2    7[COMRAM] PTR unsigned char 
  1313 ;;		 -> print_buffer(256), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1325 ;;      Params:         2       0       0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0
  1328 ;;      Totals:         2       0       0       0       0       0       0
  1329 ;;Total ram usage:        2 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 3
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_uart_send_string
  1336 ;;		_uart_send_array
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text2
  1341  003C74                     __ptext2:
  1342                           	callstack 0
  1343  003C74                     _uart_send:
  1344                           	callstack 26
  1345  003C74                     
  1346                           ;main.c: 39:     TXREG=*c;
  1347  003C74  C008  FFD9         	movff	uart_send@c,fsr2l
  1348  003C78  C009  FFDA         	movff	uart_send@c+1,fsr2h
  1349  003C7C  50DF               	movf	indf2,w,c
  1350  003C7E  6EAD               	movwf	173,c	;volatile
  1351                           
  1352                           ;main.c: 40:     while(TXSTAbits.TRMT==0){
  1353  003C80  EF43  F01E         	goto	l52
  1354  003C84                     l53:
  1355                           
  1356                           ;main.c: 41:         __nop();
  1357  003C84  F000               	nop	
  1358  003C86                     l52:
  1359                           
  1360                           ;main.c: 40:     while(TXSTAbits.TRMT==0){
  1361  003C86  A2AC               	btfss	172,1,c	;volatile
  1362  003C88  EF48  F01E         	goto	u5431
  1363  003C8C  EF4A  F01E         	goto	u5430
  1364  003C90                     u5431:
  1365  003C90  EF42  F01E         	goto	l53
  1366  003C94                     u5430:
  1367  003C94  0012               	return		;funcret
  1368  003C96                     __end_of_uart_send:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function _uart_init *****************
  1372 ;; Defined at:
  1373 ;;		line 18 in file "main.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  gen_reg         2    7[COMRAM] unsigned short 
  1376 ;;  sync            2    9[COMRAM] unsigned int 
  1377 ;;  brgh            2   11[COMRAM] unsigned int 
  1378 ;;  brg16           2   13[COMRAM] unsigned int 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         8       0       0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0
  1393 ;;      Totals:         8       0       0       0       0       0       0
  1394 ;;Total ram usage:        8 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 3
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text3
  1405  003BE2                     __ptext3:
  1406                           	callstack 0
  1407  003BE2                     _uart_init:
  1408                           	callstack 27
  1409  003BE2                     
  1410                           ;main.c: 20:     TRISCbits.RC7=1;
  1411  003BE2  8E94               	bsf	148,7,c	;volatile
  1412                           
  1413                           ;main.c: 21:     TRISCbits.RC6=1;
  1414  003BE4  8C94               	bsf	148,6,c	;volatile
  1415  003BE6                     
  1416                           ;main.c: 23:     SPBRGH = (gen_reg & 0xFF00) >> 8;
  1417  003BE6  5009               	movf	(uart_init@gen_reg+1)^0,w,c
  1418  003BE8  6EB0               	movwf	176,c	;volatile
  1419  003BEA                     
  1420                           ;main.c: 24:     SPBRG = gen_reg & 0x00FF;
  1421  003BEA  C008  FFAF         	movff	uart_init@gen_reg,4015	;volatile
  1422  003BEE                     
  1423                           ;main.c: 26:     RCSTAbits.CREN = 1;
  1424  003BEE  88AB               	bsf	171,4,c	;volatile
  1425  003BF0                     
  1426                           ;main.c: 27:     RCSTAbits.SPEN = 1;
  1427  003BF0  8EAB               	bsf	171,7,c	;volatile
  1428  003BF2                     
  1429                           ;main.c: 28:     BAUDCONbits.BRG16 = brg16;
  1430  003BF2  B00E               	btfsc	uart_init@brg16^0,0,c
  1431  003BF4  D002               	bra	u5455
  1432  003BF6  96B8               	bcf	184,3,c	;volatile
  1433  003BF8  D001               	bra	u5456
  1434  003BFA                     u5455:
  1435  003BFA  86B8               	bsf	184,3,c	;volatile
  1436  003BFC                     u5456:
  1437  003BFC                     
  1438                           ;main.c: 30:     TXSTAbits.SYNC = sync;
  1439  003BFC  B00A               	btfsc	uart_init@sync^0,0,c
  1440  003BFE  D002               	bra	u5465
  1441  003C00  98AC               	bcf	172,4,c	;volatile
  1442  003C02  D001               	bra	u5466
  1443  003C04                     u5465:
  1444  003C04  88AC               	bsf	172,4,c	;volatile
  1445  003C06                     u5466:
  1446  003C06                     
  1447                           ;main.c: 31:     TXSTAbits.BRGH = brgh;
  1448  003C06  B00C               	btfsc	uart_init@brgh^0,0,c
  1449  003C08  D002               	bra	u5475
  1450  003C0A  94AC               	bcf	172,2,c	;volatile
  1451  003C0C  D001               	bra	u5476
  1452  003C0E                     u5475:
  1453  003C0E  84AC               	bsf	172,2,c	;volatile
  1454  003C10                     u5476:
  1455  003C10                     
  1456                           ;main.c: 32:     TXSTAbits.TXEN = 1;
  1457  003C10  8AAC               	bsf	172,5,c	;volatile
  1458  003C12                     
  1459                           ;main.c: 34:     IPR1bits.RCIP=1;
  1460  003C12  8A9F               	bsf	159,5,c	;volatile
  1461  003C14                     
  1462                           ;main.c: 35:     PIE1bits.RCIE=1;
  1463  003C14  8A9D               	bsf	157,5,c	;volatile
  1464  003C16  0012               	return		;funcret
  1465  003C18                     __end_of_uart_init:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _sprintf *****************
  1469 ;; Defined at:
  1470 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  s               2   62[BANK0 ] PTR unsigned char 
  1473 ;;		 -> print_buffer(256), 
  1474 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1475 ;;		 -> STR_2(16), STR_1(23), 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  f               6   72[BANK0 ] struct _IO_FILE
  1478 ;;  ap              2   70[BANK0 ] PTR void [1]
  1479 ;;		 -> ?_sprintf(2), 
  1480 ;;  ret             2    0        int 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  2   62[BANK0 ] int 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         0       8       0       0       0       0       0
  1491 ;;      Locals:         0       8       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0
  1493 ;;      Totals:         0      16       0       0       0       0       0
  1494 ;;Total ram usage:       16 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 10
  1497 ;; This function calls:
  1498 ;;		_vfprintf
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text4
  1505  00389C                     __ptext4:
  1506                           	callstack 0
  1507  00389C                     _sprintf:
  1508                           	callstack 20
  1509  00389C  0EC2               	movlw	low (?_sprintf+4)
  1510  00389E  0100               	movlb	0	; () banked
  1511  0038A0  6FC6               	movwf	sprintf@ap& (0+255),b
  1512  0038A2  0E00               	movlw	high (?_sprintf+4)
  1513  0038A4  6FC7               	movwf	(sprintf@ap+1)& (0+255),b
  1514  0038A6  C0BE  F0C8         	movff	sprintf@s,sprintf@f
  1515  0038AA  C0BF  F0C9         	movff	sprintf@s+1,sprintf@f+1
  1516  0038AE                     
  1517                           ; BSR set to: 0
  1518  0038AE  0E00               	movlw	0
  1519  0038B0  6FCB               	movwf	(sprintf@f+3)& (0+255),b
  1520  0038B2  0E00               	movlw	0
  1521  0038B4  6FCA               	movwf	(sprintf@f+2)& (0+255),b
  1522  0038B6                     
  1523                           ; BSR set to: 0
  1524  0038B6  0E00               	movlw	0
  1525  0038B8  6FCD               	movwf	(sprintf@f+5)& (0+255),b
  1526  0038BA  0E00               	movlw	0
  1527  0038BC  6FCC               	movwf	(sprintf@f+4)& (0+255),b
  1528  0038BE                     
  1529                           ; BSR set to: 0
  1530  0038BE  0EC8               	movlw	low sprintf@f
  1531  0038C0  6FB8               	movwf	vfprintf@fp& (0+255),b
  1532  0038C2  0E00               	movlw	high sprintf@f
  1533  0038C4  6FB9               	movwf	(vfprintf@fp+1)& (0+255),b
  1534  0038C6  C0C0  F0BA         	movff	sprintf@fmt,vfprintf@fmt
  1535  0038CA  C0C1  F0BB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1536  0038CE  0EC6               	movlw	low sprintf@ap
  1537  0038D0  6FBC               	movwf	vfprintf@ap& (0+255),b
  1538  0038D2  0E00               	movlw	high sprintf@ap
  1539  0038D4  6FBD               	movwf	(vfprintf@ap+1)& (0+255),b
  1540  0038D6  EC90  F01B         	call	_vfprintf	;wreg free
  1541  0038DA  0100               	movlb	0	; () banked
  1542  0038DC  51CA               	movf	(sprintf@f+2)& (0+255),w,b
  1543  0038DE  25BE               	addwf	sprintf@s& (0+255),w,b
  1544  0038E0  6ED9               	movwf	fsr2l,c
  1545  0038E2  51CB               	movf	(sprintf@f+3)& (0+255),w,b
  1546  0038E4  21BF               	addwfc	(sprintf@s+1)& (0+255),w,b
  1547  0038E6  6EDA               	movwf	fsr2h,c
  1548  0038E8  0E00               	movlw	0
  1549  0038EA  6EDF               	movwf	indf2,c
  1550  0038EC                     
  1551                           ; BSR set to: 0
  1552  0038EC  0012               	return		;funcret
  1553  0038EE                     __end_of_sprintf:
  1554                           	callstack 0
  1555                           
  1556 ;; *************** function _vfprintf *****************
  1557 ;; Defined at:
  1558 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1561 ;;		 -> sprintf@f(6), 
  1562 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1563 ;;		 -> STR_2(16), STR_1(23), 
  1564 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1565 ;;		 -> sprintf@ap(2), 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  cfmt            2  107[COMRAM] PTR unsigned char 
  1568 ;;		 -> STR_2(16), STR_1(23), 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2   56[BANK0 ] int 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         0       6       0       0       0       0       0
  1579 ;;      Locals:         2       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0
  1581 ;;      Totals:         2       6       0       0       0       0       0
  1582 ;;Total ram usage:        8 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 9
  1585 ;; This function calls:
  1586 ;;		_vfpfcnvrt
  1587 ;; This function is called by:
  1588 ;;		_sprintf
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text5
  1593  003720                     __ptext5:
  1594                           	callstack 0
  1595  003720                     _vfprintf:
  1596                           	callstack 20
  1597  003720                     
  1598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1599  003720  C0BA  F06C         	movff	vfprintf@fmt,vfprintf@cfmt
  1600  003724  C0BB  F06D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1601  003728                     
  1602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1603  003728  0E00               	movlw	0
  1604  00372A  0100               	movlb	0	; () banked
  1605  00372C  6FDE               	movwf	(_nout+1)& (0+255),b
  1606  00372E  0E00               	movlw	0
  1607  003730  6FDD               	movwf	_nout& (0+255),b
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1610  003732  EFAE  F01B         	goto	l4437
  1611  003736                     l4435:
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1615  003736  C0B8  F04A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1616  00373A  C0B9  F04B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1617  00373E  0E6C               	movlw	low vfprintf@cfmt
  1618  003740  6E4C               	movwf	vfpfcnvrt@fmt^0,c
  1619  003742  0E00               	movlw	high vfprintf@cfmt
  1620  003744  6E4D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1621  003746  C0BC  F04E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1622  00374A  C0BD  F04F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1623  00374E  EC4B  F009         	call	_vfpfcnvrt	;wreg free
  1624  003752  504A               	movf	?_vfpfcnvrt^0,w,c
  1625  003754  0100               	movlb	0	; () banked
  1626  003756  27DD               	addwf	_nout& (0+255),f,b
  1627  003758  504B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1628  00375A  23DE               	addwfc	(_nout+1)& (0+255),f,b
  1629  00375C                     l4437:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1633  00375C  C06C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1634  003760  C06D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1635  003764                     	if	0	;tblptru may be non-zero
  1636  003764                     	endif
  1637  003764                     	if	0	;tblptru may be non-zero
  1638  003764                     	endif
  1639  003764  0008               	tblrd		*
  1640  003766  50F5               	movf	tablat,w,c
  1641  003768  0900               	iorlw	0
  1642  00376A  A4D8               	btfss	status,2,c
  1643  00376C  EFBA  F01B         	goto	u5651
  1644  003770  EFBC  F01B         	goto	u5650
  1645  003774                     u5651:
  1646  003774  EF9B  F01B         	goto	l4435
  1647  003778                     u5650:
  1648  003778                     
  1649                           ; BSR set to: 0
  1650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1651  003778  C0DD  F0B8         	movff	_nout,?_vfprintf
  1652  00377C  C0DE  F0B9         	movff	_nout+1,?_vfprintf+1
  1653  003780                     
  1654                           ; BSR set to: 0
  1655  003780  0012               	return		;funcret
  1656  003782                     __end_of_vfprintf:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _vfpfcnvrt *****************
  1660 ;; Defined at:
  1661 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  1664 ;;		 -> sprintf@f(6), 
  1665 ;;  fmt             2   75[COMRAM] PTR PTR unsigned char 
  1666 ;;		 -> vfprintf@cfmt(2), 
  1667 ;;  ap              2   77[COMRAM] PTR PTR void 
  1668 ;;		 -> sprintf@ap(2), 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  llu             8   83[COMRAM] unsigned long long 
  1671 ;;  ll              8    0        long long 
  1672 ;;  f               4   99[COMRAM] long long 
  1673 ;;  ct              3  103[COMRAM] unsigned char [3]
  1674 ;;  vp              3    0        PTR void 
  1675 ;;  cp              3    0        PTR unsigned char 
  1676 ;;  done            2   91[COMRAM] int 
  1677 ;;  i               2    0        int 
  1678 ;;  c               1  106[COMRAM] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  2   73[COMRAM] int 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         6       0       0       0       0       0       0
  1689 ;;      Locals:        24       0       0       0       0       0       0
  1690 ;;      Temps:          4       0       0       0       0       0       0
  1691 ;;      Totals:        34       0       0       0       0       0       0
  1692 ;;Total ram usage:       34 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 8
  1695 ;; This function calls:
  1696 ;;		_atoi
  1697 ;;		_efgtoa
  1698 ;;		_fputc
  1699 ;;		_isdigit
  1700 ;;		_isupper
  1701 ;;		_strncmp
  1702 ;;		_tolower
  1703 ;;		_xtoa
  1704 ;; This function is called by:
  1705 ;;		_vfprintf
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text6
  1710  001296                     __ptext6:
  1711                           	callstack 0
  1712  001296                     _vfpfcnvrt:
  1713                           	callstack 20
  1714  001296                     
  1715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1716  001296  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1717  00129A  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1718  00129E  CFDE FFF6          	movff	postinc2,tblptrl
  1719  0012A2  CFDD FFF7          	movff	postdec2,tblptrh
  1720  0012A6                     	if	0	;tblptru may be non-zero
  1721  0012A6                     	endif
  1722  0012A6                     	if	0	;tblptru may be non-zero
  1723  0012A6                     	endif
  1724  0012A6  0008               	tblrd		*
  1725  0012A8  50F5               	movf	tablat,w,c
  1726  0012AA  0A25               	xorlw	37
  1727  0012AC  A4D8               	btfss	status,2,c
  1728  0012AE  EF5B  F009         	goto	u5201
  1729  0012B2  EF5D  F009         	goto	u5200
  1730  0012B6                     u5201:
  1731  0012B6  EFAB  F00C         	goto	l4211
  1732  0012BA                     u5200:
  1733  0012BA                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1735  0012BA  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  0012BE  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  0012C2  2ADE               	incf	postinc2,f,c
  1738  0012C4  0E00               	movlw	0
  1739  0012C6  22DD               	addwfc	postdec2,f,c
  1740  0012C8                     
  1741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1742  0012C8  0E00               	movlw	0
  1743  0012CA  6E6F               	movwf	(_width+1)^0,c
  1744  0012CC  0E00               	movlw	0
  1745  0012CE  6E6E               	movwf	_width^0,c
  1746  0012D0  C06E  F072         	movff	_width,_flags
  1747  0012D4  C06F  F073         	movff	_width+1,_flags+1
  1748  0012D8                     
  1749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1750  0012D8  6870               	setf	_prec^0,c
  1751  0012DA  6871               	setf	(_prec+1)^0,c
  1752  0012DC                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1754  0012DC  0E00               	movlw	0
  1755  0012DE  6E5D               	movwf	(vfpfcnvrt@done+1)^0,c
  1756  0012E0  0E00               	movlw	0
  1757  0012E2  6E5C               	movwf	vfpfcnvrt@done^0,c
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1760  0012E4  EFBA  F009         	goto	l4101
  1761  0012E8                     l4075:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1764  0012E8  8072               	bsf	_flags^0,0,c
  1765  0012EA                     l4077:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1768  0012EA  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1769  0012EE  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1770  0012F2  2ADE               	incf	postinc2,f,c
  1771  0012F4  0E00               	movlw	0
  1772  0012F6  22DD               	addwfc	postdec2,f,c
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1775  0012F8  EFBA  F009         	goto	l4101
  1776  0012FC                     l4079:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1779  0012FC  8272               	bsf	_flags^0,1,c
  1780  0012FE  EF75  F009         	goto	l4077
  1781  001302                     l4083:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1784  001302  8472               	bsf	_flags^0,2,c
  1785  001304  EF75  F009         	goto	l4077
  1786  001308                     l4087:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1789  001308  8672               	bsf	_flags^0,3,c
  1790  00130A  EF75  F009         	goto	l4077
  1791  00130E                     l4091:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1794  00130E  8872               	bsf	_flags^0,4,c
  1795  001310  EF75  F009         	goto	l4077
  1796  001314                     l4095:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1799  001314  0E00               	movlw	0
  1800  001316  6E5D               	movwf	(vfpfcnvrt@done+1)^0,c
  1801  001318  0E01               	movlw	1
  1802  00131A  6E5C               	movwf	vfpfcnvrt@done^0,c
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1805  00131C  EFBA  F009         	goto	l4101
  1806  001320                     l4099:
  1807  001320  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1808  001324  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1809  001328  CFDE FFF6          	movff	postinc2,tblptrl
  1810  00132C  CFDD FFF7          	movff	postdec2,tblptrh
  1811  001330                     	if	0	;tblptru may be non-zero
  1812  001330                     	endif
  1813  001330                     	if	0	;tblptru may be non-zero
  1814  001330                     	endif
  1815  001330  0008               	tblrd		*
  1816  001332  50F5               	movf	tablat,w,c
  1817  001334  6E50               	movwf	??_vfpfcnvrt^0,c
  1818  001336  6A51               	clrf	(??_vfpfcnvrt+1)^0,c
  1819                           
  1820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1821                           ; Switch size 1, requested type "simple"
  1822                           ; Number of cases is 1, Range of values is 0 to 0
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte            4     3 (average)
  1826                           ;	Chosen strategy is simple_byte
  1827  001338  5051               	movf	(??_vfpfcnvrt+1)^0,w,c
  1828  00133A  0A00               	xorlw	0	; case 0
  1829  00133C  B4D8               	btfsc	status,2,c
  1830  00133E  EFA3  F009         	goto	l4537
  1831  001342  EF8A  F009         	goto	l4095
  1832  001346                     l4537:
  1833                           
  1834                           ; Switch size 1, requested type "simple"
  1835                           ; Number of cases is 5, Range of values is 32 to 48
  1836                           ; switch strategies available:
  1837                           ; Name         Instructions Cycles
  1838                           ; simple_byte           16     9 (average)
  1839                           ;	Chosen strategy is simple_byte
  1840  001346  5050               	movf	??_vfpfcnvrt^0,w,c
  1841  001348  0A20               	xorlw	32	; case 32
  1842  00134A  B4D8               	btfsc	status,2,c
  1843  00134C  EF84  F009         	goto	l4087
  1844  001350  0A03               	xorlw	3	; case 35
  1845  001352  B4D8               	btfsc	status,2,c
  1846  001354  EF87  F009         	goto	l4091
  1847  001358  0A08               	xorlw	8	; case 43
  1848  00135A  B4D8               	btfsc	status,2,c
  1849  00135C  EF81  F009         	goto	l4083
  1850  001360  0A06               	xorlw	6	; case 45
  1851  001362  B4D8               	btfsc	status,2,c
  1852  001364  EF74  F009         	goto	l4075
  1853  001368  0A1D               	xorlw	29	; case 48
  1854  00136A  B4D8               	btfsc	status,2,c
  1855  00136C  EF7E  F009         	goto	l4079
  1856  001370  EF8A  F009         	goto	l4095
  1857  001374                     l4101:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1860  001374  505C               	movf	vfpfcnvrt@done^0,w,c
  1861  001376  105D               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1862  001378  B4D8               	btfsc	status,2,c
  1863  00137A  EFC1  F009         	goto	u5211
  1864  00137E  EFC3  F009         	goto	u5210
  1865  001382                     u5211:
  1866  001382  EF90  F009         	goto	l4099
  1867  001386                     u5210:
  1868  001386                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1870  001386  A072               	btfss	_flags^0,0,c
  1871  001388  EFC8  F009         	goto	u5221
  1872  00138C  EFCA  F009         	goto	u5220
  1873  001390                     u5221:
  1874  001390  EFCB  F009         	goto	l4105
  1875  001394                     u5220:
  1876  001394                     
  1877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1878  001394  9272               	bcf	_flags^0,1,c
  1879  001396                     l4105:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1882  001396  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1883  00139A  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1884  00139E  CFDE FFF6          	movff	postinc2,tblptrl
  1885  0013A2  CFDD FFF7          	movff	postdec2,tblptrh
  1886  0013A6                     	if	0	;tblptru may be non-zero
  1887  0013A6                     	endif
  1888  0013A6                     	if	0	;tblptru may be non-zero
  1889  0013A6                     	endif
  1890  0013A6  0008               	tblrd		*
  1891  0013A8  50F5               	movf	tablat,w,c
  1892  0013AA  0A2A               	xorlw	42
  1893  0013AC  A4D8               	btfss	status,2,c
  1894  0013AE  EFDB  F009         	goto	u5231
  1895  0013B2  EFDD  F009         	goto	u5230
  1896  0013B6                     u5231:
  1897  0013B6  EF06  F00A         	goto	l4113
  1898  0013BA                     u5230:
  1899  0013BA                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1901  0013BA  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  0013BE  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  0013C2  2ADE               	incf	postinc2,f,c
  1904  0013C4  0E00               	movlw	0
  1905  0013C6  22DD               	addwfc	postdec2,f,c
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1908  0013C8  C04E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1909  0013CC  C04F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1910  0013D0  CFDF F050          	movff	indf2,??_vfpfcnvrt
  1911  0013D4  0E02               	movlw	2
  1912  0013D6  26DE               	addwf	postinc2,f,c
  1913  0013D8  CFDF F051          	movff	indf2,??_vfpfcnvrt+1
  1914  0013DC  0E00               	movlw	0
  1915  0013DE  22DD               	addwfc	postdec2,f,c
  1916  0013E0  C050  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1917  0013E4  C051  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1918  0013E8  CFDE F06E          	movff	postinc2,_width
  1919  0013EC  CFDD F06F          	movff	postdec2,_width+1
  1920  0013F0                     
  1921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1922  0013F0  BE6F               	btfsc	(_width+1)^0,7,c
  1923  0013F2  EFFF  F009         	goto	u5240
  1924  0013F6  EFFD  F009         	goto	u5241
  1925  0013FA                     u5241:
  1926  0013FA  EF49  F00A         	goto	l4123
  1927  0013FE                     u5240:
  1928  0013FE                     
  1929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1930  0013FE  8072               	bsf	_flags^0,0,c
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1933  001400  6C6E               	negf	_width^0,c
  1934  001402  1E6F               	comf	(_width+1)^0,f,c
  1935  001404  B0D8               	btfsc	status,0,c
  1936  001406  2A6F               	incf	(_width+1)^0,f,c
  1937  001408  EF49  F00A         	goto	l4123
  1938  00140C                     l4113:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1941  00140C  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1942  001410  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1943  001414  CFDE F00F          	movff	postinc2,atoi@s
  1944  001418  CFDD F010          	movff	postdec2,atoi@s+1
  1945  00141C  EC56  F016         	call	_atoi	;wreg free
  1946  001420  C00F  F06E         	movff	?_atoi,_width
  1947  001424  C010  F06F         	movff	?_atoi+1,_width+1
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1950  001428  EF1D  F00A         	goto	l4117
  1951  00142C                     l4115:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1954  00142C  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1955  001430  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1956  001434  2ADE               	incf	postinc2,f,c
  1957  001436  0E00               	movlw	0
  1958  001438  22DD               	addwfc	postdec2,f,c
  1959  00143A                     l4117:
  1960  00143A  0ED0               	movlw	208
  1961  00143C  6E50               	movwf	??_vfpfcnvrt^0,c
  1962  00143E  0EFF               	movlw	255
  1963  001440  6E51               	movwf	(??_vfpfcnvrt+1)^0,c
  1964  001442  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1965  001446  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1966  00144A  CFDE FFF6          	movff	postinc2,tblptrl
  1967  00144E  CFDD FFF7          	movff	postdec2,tblptrh
  1968  001452                     	if	0	;tblptru may be non-zero
  1969  001452                     	endif
  1970  001452                     	if	0	;tblptru may be non-zero
  1971  001452                     	endif
  1972  001452  0008               	tblrd		*
  1973  001454  50F5               	movf	tablat,w,c
  1974  001456  6E52               	movwf	(??_vfpfcnvrt+2)^0,c
  1975  001458  6A53               	clrf	(??_vfpfcnvrt+3)^0,c
  1976  00145A  5050               	movf	??_vfpfcnvrt^0,w,c
  1977  00145C  2652               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1978  00145E  5051               	movf	(??_vfpfcnvrt+1)^0,w,c
  1979  001460  2253               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1980  001462  5053               	movf	(??_vfpfcnvrt+3)^0,w,c
  1981  001464  E10A               	bnz	u5250
  1982  001466  0E0A               	movlw	10
  1983  001468  5C52               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1984  00146A  A0D8               	btfss	status,0,c
  1985  00146C  EF3A  F00A         	goto	u5251
  1986  001470  EF3D  F00A         	goto	u5250
  1987  001474                     u5251:
  1988  001474  0E01               	movlw	1
  1989  001476  EF3E  F00A         	goto	u5260
  1990  00147A                     u5250:
  1991  00147A  0E00               	movlw	0
  1992  00147C                     u5260:
  1993  00147C  6E5E               	movwf	_vfpfcnvrt$1356^0,c
  1994  00147E  6A5F               	clrf	(_vfpfcnvrt$1356+1)^0,c
  1995  001480  505E               	movf	_vfpfcnvrt$1356^0,w,c
  1996  001482  105F               	iorwf	(_vfpfcnvrt$1356+1)^0,w,c
  1997  001484  A4D8               	btfss	status,2,c
  1998  001486  EF47  F00A         	goto	u5271
  1999  00148A  EF49  F00A         	goto	u5270
  2000  00148E                     u5271:
  2001  00148E  EF16  F00A         	goto	l4115
  2002  001492                     u5270:
  2003  001492                     l4123:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2006  001492  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2007  001496  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2008  00149A  CFDE FFF6          	movff	postinc2,tblptrl
  2009  00149E  CFDD FFF7          	movff	postdec2,tblptrh
  2010  0014A2                     	if	0	;tblptru may be non-zero
  2011  0014A2                     	endif
  2012  0014A2                     	if	0	;tblptru may be non-zero
  2013  0014A2                     	endif
  2014  0014A2  0008               	tblrd		*
  2015  0014A4  50F5               	movf	tablat,w,c
  2016  0014A6  0A2E               	xorlw	46
  2017  0014A8  A4D8               	btfss	status,2,c
  2018  0014AA  EF59  F00A         	goto	u5281
  2019  0014AE  EF5B  F00A         	goto	u5280
  2020  0014B2                     u5281:
  2021  0014B2  EFD8  F00A         	goto	l4143
  2022  0014B6                     u5280:
  2023  0014B6                     
  2024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2025  0014B6  0E00               	movlw	0
  2026  0014B8  6E71               	movwf	(_prec+1)^0,c
  2027  0014BA  0E00               	movlw	0
  2028  0014BC  6E70               	movwf	_prec^0,c
  2029  0014BE                     
  2030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2031  0014BE  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2032  0014C2  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2033  0014C6  2ADE               	incf	postinc2,f,c
  2034  0014C8  0E00               	movlw	0
  2035  0014CA  22DD               	addwfc	postdec2,f,c
  2036  0014CC                     
  2037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2038  0014CC  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2039  0014D0  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2040  0014D4  CFDE FFF6          	movff	postinc2,tblptrl
  2041  0014D8  CFDD FFF7          	movff	postdec2,tblptrh
  2042  0014DC                     	if	0	;tblptru may be non-zero
  2043  0014DC                     	endif
  2044  0014DC                     	if	0	;tblptru may be non-zero
  2045  0014DC                     	endif
  2046  0014DC  0008               	tblrd		*
  2047  0014DE  50F5               	movf	tablat,w,c
  2048  0014E0  0A2A               	xorlw	42
  2049  0014E2  A4D8               	btfss	status,2,c
  2050  0014E4  EF76  F00A         	goto	u5291
  2051  0014E8  EF78  F00A         	goto	u5290
  2052  0014EC                     u5291:
  2053  0014EC  EF95  F00A         	goto	l4133
  2054  0014F0                     u5290:
  2055  0014F0                     
  2056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2057  0014F0  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2058  0014F4  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2059  0014F8  2ADE               	incf	postinc2,f,c
  2060  0014FA  0E00               	movlw	0
  2061  0014FC  22DD               	addwfc	postdec2,f,c
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2064  0014FE  C04E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2065  001502  C04F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2066  001506  CFDF F050          	movff	indf2,??_vfpfcnvrt
  2067  00150A  0E02               	movlw	2
  2068  00150C  26DE               	addwf	postinc2,f,c
  2069  00150E  CFDF F051          	movff	indf2,??_vfpfcnvrt+1
  2070  001512  0E00               	movlw	0
  2071  001514  22DD               	addwfc	postdec2,f,c
  2072  001516  C050  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2073  00151A  C051  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2074  00151E  CFDE F070          	movff	postinc2,_prec
  2075  001522  CFDD F071          	movff	postdec2,_prec+1
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2078  001526  EFD8  F00A         	goto	l4143
  2079  00152A                     l4133:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2082  00152A  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2083  00152E  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2084  001532  CFDE F00F          	movff	postinc2,atoi@s
  2085  001536  CFDD F010          	movff	postdec2,atoi@s+1
  2086  00153A  EC56  F016         	call	_atoi	;wreg free
  2087  00153E  C00F  F070         	movff	?_atoi,_prec
  2088  001542  C010  F071         	movff	?_atoi+1,_prec+1
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2091  001546  EFAC  F00A         	goto	l4137
  2092  00154A                     l4135:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2095  00154A  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2096  00154E  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2097  001552  2ADE               	incf	postinc2,f,c
  2098  001554  0E00               	movlw	0
  2099  001556  22DD               	addwfc	postdec2,f,c
  2100  001558                     l4137:
  2101  001558  0ED0               	movlw	208
  2102  00155A  6E50               	movwf	??_vfpfcnvrt^0,c
  2103  00155C  0EFF               	movlw	255
  2104  00155E  6E51               	movwf	(??_vfpfcnvrt+1)^0,c
  2105  001560  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2106  001564  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2107  001568  CFDE FFF6          	movff	postinc2,tblptrl
  2108  00156C  CFDD FFF7          	movff	postdec2,tblptrh
  2109  001570                     	if	0	;tblptru may be non-zero
  2110  001570                     	endif
  2111  001570                     	if	0	;tblptru may be non-zero
  2112  001570                     	endif
  2113  001570  0008               	tblrd		*
  2114  001572  50F5               	movf	tablat,w,c
  2115  001574  6E52               	movwf	(??_vfpfcnvrt+2)^0,c
  2116  001576  6A53               	clrf	(??_vfpfcnvrt+3)^0,c
  2117  001578  5050               	movf	??_vfpfcnvrt^0,w,c
  2118  00157A  2652               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2119  00157C  5051               	movf	(??_vfpfcnvrt+1)^0,w,c
  2120  00157E  2253               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2121  001580  5053               	movf	(??_vfpfcnvrt+3)^0,w,c
  2122  001582  E10A               	bnz	u5300
  2123  001584  0E0A               	movlw	10
  2124  001586  5C52               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2125  001588  A0D8               	btfss	status,0,c
  2126  00158A  EFC9  F00A         	goto	u5301
  2127  00158E  EFCC  F00A         	goto	u5300
  2128  001592                     u5301:
  2129  001592  0E01               	movlw	1
  2130  001594  EFCD  F00A         	goto	u5310
  2131  001598                     u5300:
  2132  001598  0E00               	movlw	0
  2133  00159A                     u5310:
  2134  00159A  6E60               	movwf	_vfpfcnvrt$1357^0,c
  2135  00159C  6A61               	clrf	(_vfpfcnvrt$1357+1)^0,c
  2136  00159E  5060               	movf	_vfpfcnvrt$1357^0,w,c
  2137  0015A0  1061               	iorwf	(_vfpfcnvrt$1357+1)^0,w,c
  2138  0015A2  A4D8               	btfss	status,2,c
  2139  0015A4  EFD6  F00A         	goto	u5321
  2140  0015A8  EFD8  F00A         	goto	u5320
  2141  0015AC                     u5321:
  2142  0015AC  EFA5  F00A         	goto	l4135
  2143  0015B0                     u5320:
  2144  0015B0                     l4143:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2147  0015B0  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2148  0015B4  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2149  0015B8  CFDE FFF6          	movff	postinc2,tblptrl
  2150  0015BC  CFDD FFF7          	movff	postdec2,tblptrh
  2151  0015C0                     	if	0	;tblptru may be non-zero
  2152  0015C0                     	endif
  2153  0015C0                     	if	0	;tblptru may be non-zero
  2154  0015C0                     	endif
  2155  0015C0  0008               	tblrd		*
  2156  0015C2  50F5               	movf	tablat,w,c
  2157  0015C4  6E0E               	movwf	tolower@c^0,c
  2158  0015C6  6A0F               	clrf	(tolower@c+1)^0,c
  2159  0015C8  ECC1  F01B         	call	_tolower	;wreg free
  2160  0015CC  500E               	movf	?_tolower^0,w,c
  2161  0015CE  6E68               	movwf	vfpfcnvrt@ct^0,c
  2162  0015D0                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2164  0015D0  5068               	movf	vfpfcnvrt@ct^0,w,c
  2165  0015D2  B4D8               	btfsc	status,2,c
  2166  0015D4  EFEE  F00A         	goto	u5331
  2167  0015D8  EFF0  F00A         	goto	u5330
  2168  0015DC                     u5331:
  2169  0015DC  EF28  F00B         	goto	l4153
  2170  0015E0                     u5330:
  2171  0015E0                     
  2172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2173  0015E0  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2174  0015E4  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2175  0015E8  CFDE F050          	movff	postinc2,??_vfpfcnvrt
  2176  0015EC  CFDD F051          	movff	postdec2,??_vfpfcnvrt+1
  2177  0015F0  0E01               	movlw	1
  2178  0015F2  2650               	addwf	??_vfpfcnvrt^0,f,c
  2179  0015F4  0E00               	movlw	0
  2180  0015F6  2251               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2181  0015F8  C050  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2182  0015FC  C051  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2183  001600                     	if	0	;tblptru may be non-zero
  2184  001600                     	endif
  2185  001600                     	if	0	;tblptru may be non-zero
  2186  001600                     	endif
  2187  001600  0008               	tblrd		*
  2188  001602  50F5               	movf	tablat,w,c
  2189  001604  6E0E               	movwf	tolower@c^0,c
  2190  001606  6A0F               	clrf	(tolower@c+1)^0,c
  2191  001608  ECC1  F01B         	call	_tolower	;wreg free
  2192  00160C  500E               	movf	?_tolower^0,w,c
  2193  00160E  6E69               	movwf	(vfpfcnvrt@ct+1)^0,c
  2194  001610                     
  2195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2196  001610  5069               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2197  001612  B4D8               	btfsc	status,2,c
  2198  001614  EF0E  F00B         	goto	u5341
  2199  001618  EF10  F00B         	goto	u5340
  2200  00161C                     u5341:
  2201  00161C  EF28  F00B         	goto	l4153
  2202  001620                     u5340:
  2203  001620                     
  2204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2205  001620  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2206  001624  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2207  001628  CFDE F050          	movff	postinc2,??_vfpfcnvrt
  2208  00162C  CFDD F051          	movff	postdec2,??_vfpfcnvrt+1
  2209  001630  0E02               	movlw	2
  2210  001632  2650               	addwf	??_vfpfcnvrt^0,f,c
  2211  001634  0E00               	movlw	0
  2212  001636  2251               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2213  001638  C050  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2214  00163C  C051  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2215  001640                     	if	0	;tblptru may be non-zero
  2216  001640                     	endif
  2217  001640                     	if	0	;tblptru may be non-zero
  2218  001640                     	endif
  2219  001640  0008               	tblrd		*
  2220  001642  50F5               	movf	tablat,w,c
  2221  001644  6E0E               	movwf	tolower@c^0,c
  2222  001646  6A0F               	clrf	(tolower@c+1)^0,c
  2223  001648  ECC1  F01B         	call	_tolower	;wreg free
  2224  00164C  500E               	movf	?_tolower^0,w,c
  2225  00164E  6E6A               	movwf	(vfpfcnvrt@ct+2)^0,c
  2226  001650                     l4153:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2229  001650  0E66               	movlw	102
  2230  001652  1868               	xorwf	vfpfcnvrt@ct^0,w,c
  2231  001654  A4D8               	btfss	status,2,c
  2232  001656  EF2F  F00B         	goto	u5351
  2233  00165A  EF31  F00B         	goto	u5350
  2234  00165E                     u5351:
  2235  00165E  EF71  F00B         	goto	l4165
  2236  001662                     u5350:
  2237  001662                     
  2238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2239  001662  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2240  001666  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2241  00166A  CFDE FFF6          	movff	postinc2,tblptrl
  2242  00166E  CFDD FFF7          	movff	postdec2,tblptrh
  2243  001672                     	if	0	;tblptru may be non-zero
  2244  001672                     	endif
  2245  001672                     	if	0	;tblptru may be non-zero
  2246  001672                     	endif
  2247  001672  0008               	tblrd		*
  2248  001674  CFF5 F06B          	movff	tablat,vfpfcnvrt@c
  2249  001678                     
  2250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2251  001678  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  00167C  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  001680  2ADE               	incf	postinc2,f,c
  2254  001682  0E00               	movlw	0
  2255  001684  22DD               	addwfc	postdec2,f,c
  2256  001686                     
  2257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2258  001686  C04E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2259  00168A  C04F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2260  00168E  CFDF F050          	movff	indf2,??_vfpfcnvrt
  2261  001692  0E04               	movlw	4
  2262  001694  26DE               	addwf	postinc2,f,c
  2263  001696  CFDF F051          	movff	indf2,??_vfpfcnvrt+1
  2264  00169A  0E00               	movlw	0
  2265  00169C  22DD               	addwfc	postdec2,f,c
  2266  00169E  C050  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2267  0016A2  C051  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2268  0016A6  CFDE F064          	movff	postinc2,vfpfcnvrt@f
  2269  0016AA  CFDE F065          	movff	postinc2,vfpfcnvrt@f+1
  2270  0016AE  CFDE F066          	movff	postinc2,vfpfcnvrt@f+2
  2271  0016B2  CFDE F067          	movff	postinc2,vfpfcnvrt@f+3
  2272  0016B6                     l4161:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2275  0016B6  C04A  F03B         	movff	vfpfcnvrt@fp,efgtoa@fp
  2276  0016BA  C04B  F03C         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2277  0016BE  C064  F03D         	movff	vfpfcnvrt@f,efgtoa@f
  2278  0016C2  C065  F03E         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2279  0016C6  C066  F03F         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2280  0016CA  C067  F040         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2281  0016CE  C06B  F041         	movff	vfpfcnvrt@c,efgtoa@c
  2282  0016D2  EC1E  F003         	call	_efgtoa	;wreg free
  2283  0016D6  C03B  F04A         	movff	?_efgtoa,?_vfpfcnvrt
  2284  0016DA  C03C  F04B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2285  0016DE  EFC6  F00C         	goto	l999
  2286  0016E2                     l4165:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2289  0016E2  0E68               	movlw	low vfpfcnvrt@ct
  2290  0016E4  6E08               	movwf	strncmp@_l^0,c
  2291  0016E6  0E00               	movlw	high vfpfcnvrt@ct
  2292  0016E8  6E09               	movwf	(strncmp@_l+1)^0,c
  2293  0016EA  0E38               	movlw	low STR_11
  2294  0016EC  6E0A               	movwf	strncmp@_r^0,c
  2295  0016EE  0E06               	movlw	high STR_11
  2296  0016F0  6E0B               	movwf	(strncmp@_r+1)^0,c
  2297  0016F2  0E00               	movlw	0
  2298  0016F4  6E0D               	movwf	(strncmp@n+1)^0,c
  2299  0016F6  0E02               	movlw	2
  2300  0016F8  6E0C               	movwf	strncmp@n^0,c
  2301  0016FA  EC50  F019         	call	_strncmp	;wreg free
  2302  0016FE  5008               	movf	?_strncmp^0,w,c
  2303  001700  1009               	iorwf	(?_strncmp+1)^0,w,c
  2304  001702  A4D8               	btfss	status,2,c
  2305  001704  EF86  F00B         	goto	u5361
  2306  001708  EF88  F00B         	goto	u5360
  2307  00170C                     u5361:
  2308  00170C  EF03  F00C         	goto	l4181
  2309  001710                     u5360:
  2310  001710                     
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2312  001710  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2313  001714  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  001718  CFDE F050          	movff	postinc2,??_vfpfcnvrt
  2315  00171C  CFDD F051          	movff	postdec2,??_vfpfcnvrt+1
  2316  001720  0E01               	movlw	1
  2317  001722  2650               	addwf	??_vfpfcnvrt^0,f,c
  2318  001724  0E00               	movlw	0
  2319  001726  2251               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2320  001728  C050  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2321  00172C  C051  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2322  001730                     	if	0	;tblptru may be non-zero
  2323  001730                     	endif
  2324  001730                     	if	0	;tblptru may be non-zero
  2325  001730                     	endif
  2326  001730  0008               	tblrd		*
  2327  001732  CFF5 F06B          	movff	tablat,vfpfcnvrt@c
  2328  001736  0EBF               	movlw	191
  2329  001738  6E50               	movwf	??_vfpfcnvrt^0,c
  2330  00173A  0EFF               	movlw	255
  2331  00173C  6E51               	movwf	(??_vfpfcnvrt+1)^0,c
  2332  00173E  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2333  001742  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2334  001746  CFDE FFF6          	movff	postinc2,tblptrl
  2335  00174A  CFDD FFF7          	movff	postdec2,tblptrh
  2336  00174E                     	if	0	;tblptru may be non-zero
  2337  00174E                     	endif
  2338  00174E                     	if	0	;tblptru may be non-zero
  2339  00174E                     	endif
  2340  00174E  0008               	tblrd		*
  2341  001750  50F5               	movf	tablat,w,c
  2342  001752  6E52               	movwf	(??_vfpfcnvrt+2)^0,c
  2343  001754  6A53               	clrf	(??_vfpfcnvrt+3)^0,c
  2344  001756  5050               	movf	??_vfpfcnvrt^0,w,c
  2345  001758  2652               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2346  00175A  5051               	movf	(??_vfpfcnvrt+1)^0,w,c
  2347  00175C  2253               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2348  00175E  5053               	movf	(??_vfpfcnvrt+3)^0,w,c
  2349  001760  E10A               	bnz	u5370
  2350  001762  0E1A               	movlw	26
  2351  001764  5C52               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2352  001766  A0D8               	btfss	status,0,c
  2353  001768  EFB8  F00B         	goto	u5371
  2354  00176C  EFBB  F00B         	goto	u5370
  2355  001770                     u5371:
  2356  001770  0E01               	movlw	1
  2357  001772  EFBC  F00B         	goto	u5380
  2358  001776                     u5370:
  2359  001776  0E00               	movlw	0
  2360  001778                     u5380:
  2361  001778  6E62               	movwf	_vfpfcnvrt$1361^0,c
  2362  00177A  6A63               	clrf	(_vfpfcnvrt$1361+1)^0,c
  2363  00177C  5062               	movf	_vfpfcnvrt$1361^0,w,c
  2364  00177E  1063               	iorwf	(_vfpfcnvrt$1361+1)^0,w,c
  2365  001780  B4D8               	btfsc	status,2,c
  2366  001782  EFC5  F00B         	goto	u5391
  2367  001786  EFC7  F00B         	goto	u5390
  2368  00178A                     u5391:
  2369  00178A  EFE1  F00B         	goto	l4175
  2370  00178E                     u5390:
  2371  00178E                     
  2372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2373  00178E  C04E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2374  001792  C04F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2375  001796  CFDF F050          	movff	indf2,??_vfpfcnvrt
  2376  00179A  0E04               	movlw	4
  2377  00179C  26DE               	addwf	postinc2,f,c
  2378  00179E  CFDF F051          	movff	indf2,??_vfpfcnvrt+1
  2379  0017A2  0E00               	movlw	0
  2380  0017A4  22DD               	addwfc	postdec2,f,c
  2381  0017A6  C050  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2382  0017AA  C051  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2383  0017AE  CFDE F064          	movff	postinc2,vfpfcnvrt@f
  2384  0017B2  CFDE F065          	movff	postinc2,vfpfcnvrt@f+1
  2385  0017B6  CFDE F066          	movff	postinc2,vfpfcnvrt@f+2
  2386  0017BA  CFDE F067          	movff	postinc2,vfpfcnvrt@f+3
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2389  0017BE  EFF9  F00B         	goto	l1006
  2390  0017C2                     l4175:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2393  0017C2  C04E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2394  0017C6  C04F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2395  0017CA  CFDF F050          	movff	indf2,??_vfpfcnvrt
  2396  0017CE  0E04               	movlw	4
  2397  0017D0  26DE               	addwf	postinc2,f,c
  2398  0017D2  CFDF F051          	movff	indf2,??_vfpfcnvrt+1
  2399  0017D6  0E00               	movlw	0
  2400  0017D8  22DD               	addwfc	postdec2,f,c
  2401  0017DA  C050  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2402  0017DE  C051  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2403  0017E2  CFDE F064          	movff	postinc2,vfpfcnvrt@f
  2404  0017E6  CFDE F065          	movff	postinc2,vfpfcnvrt@f+1
  2405  0017EA  CFDE F066          	movff	postinc2,vfpfcnvrt@f+2
  2406  0017EE  CFDE F067          	movff	postinc2,vfpfcnvrt@f+3
  2407  0017F2                     l1006:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2410  0017F2  0E02               	movlw	2
  2411  0017F4  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412  0017F8  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413  0017FC  26DE               	addwf	postinc2,f,c
  2414  0017FE  0E00               	movlw	0
  2415  001800  22DD               	addwfc	postdec2,f,c
  2416  001802  EF5B  F00B         	goto	l4161
  2417  001806                     l4181:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2420  001806  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421  00180A  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422  00180E  CFDE FFF6          	movff	postinc2,tblptrl
  2423  001812  CFDD FFF7          	movff	postdec2,tblptrh
  2424  001816                     	if	0	;tblptru may be non-zero
  2425  001816                     	endif
  2426  001816                     	if	0	;tblptru may be non-zero
  2427  001816                     	endif
  2428  001816  0008               	tblrd		*
  2429  001818  50F5               	movf	tablat,w,c
  2430  00181A  0A78               	xorlw	120
  2431  00181C  B4D8               	btfsc	status,2,c
  2432  00181E  EF13  F00C         	goto	u5401
  2433  001822  EF15  F00C         	goto	u5400
  2434  001826                     u5401:
  2435  001826  EF27  F00C         	goto	l4185
  2436  00182A                     u5400:
  2437  00182A  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2438  00182E  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2439  001832  CFDE FFF6          	movff	postinc2,tblptrl
  2440  001836  CFDD FFF7          	movff	postdec2,tblptrh
  2441  00183A                     	if	0	;tblptru may be non-zero
  2442  00183A                     	endif
  2443  00183A                     	if	0	;tblptru may be non-zero
  2444  00183A                     	endif
  2445  00183A  0008               	tblrd		*
  2446  00183C  50F5               	movf	tablat,w,c
  2447  00183E  0A58               	xorlw	88
  2448  001840  A4D8               	btfss	status,2,c
  2449  001842  EF25  F00C         	goto	u5411
  2450  001846  EF27  F00C         	goto	u5410
  2451  00184A                     u5411:
  2452  00184A  EF75  F00C         	goto	l4195
  2453  00184E                     u5410:
  2454  00184E                     l4185:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2457  00184E  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  001852  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  001856  CFDE FFF6          	movff	postinc2,tblptrl
  2460  00185A  CFDD FFF7          	movff	postdec2,tblptrh
  2461  00185E                     	if	0	;tblptru may be non-zero
  2462  00185E                     	endif
  2463  00185E                     	if	0	;tblptru may be non-zero
  2464  00185E                     	endif
  2465  00185E  0008               	tblrd		*
  2466  001860  CFF5 F06B          	movff	tablat,vfpfcnvrt@c
  2467  001864                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2469  001864  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2470  001868  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2471  00186C  2ADE               	incf	postinc2,f,c
  2472  00186E  0E00               	movlw	0
  2473  001870  22DD               	addwfc	postdec2,f,c
  2474  001872                     
  2475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2476  001872  C04E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2477  001876  C04F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2478  00187A  CFDF F050          	movff	indf2,??_vfpfcnvrt
  2479  00187E  0E02               	movlw	2
  2480  001880  26DE               	addwf	postinc2,f,c
  2481  001882  CFDF F051          	movff	indf2,??_vfpfcnvrt+1
  2482  001886  0E00               	movlw	0
  2483  001888  22DD               	addwfc	postdec2,f,c
  2484  00188A  C050  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2485  00188E  C051  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2486  001892  CFDE F052          	movff	postinc2,??_vfpfcnvrt+2
  2487  001896  CFDD F053          	movff	postdec2,??_vfpfcnvrt+3
  2488  00189A  C052  F054         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2489  00189E  C053  F055         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2490  0018A2  6A56               	clrf	(vfpfcnvrt@llu+2)^0,c
  2491  0018A4  6A57               	clrf	(vfpfcnvrt@llu+3)^0,c
  2492  0018A6  6A58               	clrf	(vfpfcnvrt@llu+4)^0,c
  2493  0018A8  6A59               	clrf	(vfpfcnvrt@llu+5)^0,c
  2494  0018AA  6A5A               	clrf	(vfpfcnvrt@llu+6)^0,c
  2495  0018AC  6A5B               	clrf	(vfpfcnvrt@llu+7)^0,c
  2496  0018AE                     
  2497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2498  0018AE  C04A  F023         	movff	vfpfcnvrt@fp,xtoa@fp
  2499  0018B2  C04B  F024         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2500  0018B6  C054  F025         	movff	vfpfcnvrt@llu,xtoa@d
  2501  0018BA  C055  F026         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2502  0018BE  C056  F027         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2503  0018C2  C057  F028         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2504  0018C6  C058  F029         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2505  0018CA  C059  F02A         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2506  0018CE  C05A  F02B         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2507  0018D2  C05B  F02C         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2508  0018D6  C06B  F02D         	movff	vfpfcnvrt@c,xtoa@x
  2509  0018DA  EC09  F013         	call	_xtoa	;wreg free
  2510  0018DE  C023  F04A         	movff	?_xtoa,?_vfpfcnvrt
  2511  0018E2  C024  F04B         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2512  0018E6  EFC6  F00C         	goto	l999
  2513  0018EA                     l4195:
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2516  0018EA  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2517  0018EE  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2518  0018F2  CFDE FFF6          	movff	postinc2,tblptrl
  2519  0018F6  CFDD FFF7          	movff	postdec2,tblptrh
  2520  0018FA                     	if	0	;tblptru may be non-zero
  2521  0018FA                     	endif
  2522  0018FA                     	if	0	;tblptru may be non-zero
  2523  0018FA                     	endif
  2524  0018FA  0008               	tblrd		*
  2525  0018FC  50F5               	movf	tablat,w,c
  2526  0018FE  0A25               	xorlw	37
  2527  001900  A4D8               	btfss	status,2,c
  2528  001902  EF85  F00C         	goto	u5421
  2529  001906  EF87  F00C         	goto	u5420
  2530  00190A                     u5421:
  2531  00190A  EF9E  F00C         	goto	l4205
  2532  00190E                     u5420:
  2533  00190E                     
  2534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2535  00190E  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2536  001912  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2537  001916  2ADE               	incf	postinc2,f,c
  2538  001918  0E00               	movlw	0
  2539  00191A  22DD               	addwfc	postdec2,f,c
  2540  00191C                     
  2541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2542  00191C  0E00               	movlw	0
  2543  00191E  6E09               	movwf	(fputc@c+1)^0,c
  2544  001920  0E25               	movlw	37
  2545  001922  6E08               	movwf	fputc@c^0,c
  2546  001924  C04A  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  2547  001928  C04B  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2548  00192C  ECBB  F019         	call	_fputc	;wreg free
  2549  001930                     l4201:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2552  001930  0E00               	movlw	0
  2553  001932  6E4B               	movwf	(?_vfpfcnvrt+1)^0,c
  2554  001934  0E01               	movlw	1
  2555  001936  6E4A               	movwf	?_vfpfcnvrt^0,c
  2556  001938  EFC6  F00C         	goto	l999
  2557  00193C                     l4205:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2560  00193C  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2561  001940  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2562  001944  2ADE               	incf	postinc2,f,c
  2563  001946  0E00               	movlw	0
  2564  001948  22DD               	addwfc	postdec2,f,c
  2565  00194A                     
  2566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2567  00194A  0E00               	movlw	0
  2568  00194C  6E4B               	movwf	(?_vfpfcnvrt+1)^0,c
  2569  00194E  0E00               	movlw	0
  2570  001950  6E4A               	movwf	?_vfpfcnvrt^0,c
  2571  001952  EFC6  F00C         	goto	l999
  2572  001956                     l4211:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2575  001956  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2576  00195A  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2577  00195E  CFDE FFF6          	movff	postinc2,tblptrl
  2578  001962  CFDD FFF7          	movff	postdec2,tblptrh
  2579  001966                     	if	0	;tblptru may be non-zero
  2580  001966                     	endif
  2581  001966                     	if	0	;tblptru may be non-zero
  2582  001966                     	endif
  2583  001966  0008               	tblrd		*
  2584  001968  50F5               	movf	tablat,w,c
  2585  00196A  6E08               	movwf	fputc@c^0,c
  2586  00196C  6A09               	clrf	(fputc@c+1)^0,c
  2587  00196E  C04A  F00A         	movff	vfpfcnvrt@fp,fputc@fp
  2588  001972  C04B  F00B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2589  001976  ECBB  F019         	call	_fputc	;wreg free
  2590  00197A                     
  2591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2592  00197A  C04C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2593  00197E  C04D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2594  001982  2ADE               	incf	postinc2,f,c
  2595  001984  0E00               	movlw	0
  2596  001986  22DD               	addwfc	postdec2,f,c
  2597  001988  EF98  F00C         	goto	l4201
  2598  00198C                     l999:
  2599  00198C  0012               	return		;funcret
  2600  00198E                     __end_of_vfpfcnvrt:
  2601                           	callstack 0
  2602                           
  2603 ;; *************** function _xtoa *****************
  2604 ;; Defined at:
  2605 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  2608 ;;		 -> sprintf@f(6), 
  2609 ;;  d               8   36[COMRAM] unsigned long long 
  2610 ;;  x               1   44[COMRAM] unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  n               8   61[COMRAM] unsigned long long 
  2613 ;;  c               2   71[COMRAM] int 
  2614 ;;  i               2   69[COMRAM] int 
  2615 ;;  w               2   59[COMRAM] int 
  2616 ;;  p               2   57[COMRAM] int 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2   34[COMRAM] int 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2626 ;;      Params:        11       0       0       0       0       0       0
  2627 ;;      Locals:        20       0       0       0       0       0       0
  2628 ;;      Temps:          8       0       0       0       0       0       0
  2629 ;;      Totals:        39       0       0       0       0       0       0
  2630 ;;Total ram usage:       39 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 7
  2633 ;; This function calls:
  2634 ;;		_isalpha
  2635 ;;		_isupper
  2636 ;;		_pad
  2637 ;;		_toupper
  2638 ;; This function is called by:
  2639 ;;		_vfpfcnvrt
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text7
  2644  002612                     __ptext7:
  2645                           	callstack 0
  2646  002612                     _xtoa:
  2647                           	callstack 20
  2648  002612                     
  2649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2650  002612  BE71               	btfsc	(_prec+1)^0,7,c
  2651  002614  EF0E  F013         	goto	u4911
  2652  002618  EF10  F013         	goto	u4910
  2653  00261C                     u4911:
  2654  00261C  EF11  F013         	goto	l3941
  2655  002620                     u4910:
  2656  002620                     
  2657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2658  002620  9272               	bcf	_flags^0,1,c
  2659  002622                     l3941:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2662  002622  BE71               	btfsc	(_prec+1)^0,7,c
  2663  002624  EF1E  F013         	goto	u4920
  2664  002628  5071               	movf	(_prec+1)^0,w,c
  2665  00262A  E106               	bnz	u4921
  2666  00262C  0470               	decf	_prec^0,w,c
  2667  00262E  B0D8               	btfsc	status,0,c
  2668  002630  EF1C  F013         	goto	u4921
  2669  002634  EF1E  F013         	goto	u4920
  2670  002638                     u4921:
  2671  002638  EF24  F013         	goto	l935
  2672  00263C                     u4920:
  2673  00263C  0E00               	movlw	0
  2674  00263E  6E3B               	movwf	(xtoa@p+1)^0,c
  2675  002640  0E01               	movlw	1
  2676  002642  6E3A               	movwf	xtoa@p^0,c
  2677  002644  EF28  F013         	goto	l937
  2678  002648                     l935:
  2679  002648  C070  F03A         	movff	_prec,xtoa@p
  2680  00264C  C071  F03B         	movff	_prec+1,xtoa@p+1
  2681  002650                     l937:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2684  002650  C06E  F03C         	movff	_width,xtoa@w
  2685  002654  C06F  F03D         	movff	_width+1,xtoa@w+1
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2688  002658  A872               	btfss	_flags^0,4,c
  2689  00265A  EF31  F013         	goto	u4931
  2690  00265E  EF33  F013         	goto	u4930
  2691  002662                     u4931:
  2692  002662  EF37  F013         	goto	l3947
  2693  002666                     u4930:
  2694  002666                     
  2695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2696  002666  0EFE               	movlw	254
  2697  002668  263C               	addwf	xtoa@w^0,f,c
  2698  00266A  0EFF               	movlw	255
  2699  00266C  223D               	addwfc	(xtoa@w+1)^0,f,c
  2700  00266E                     l3947:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2703  00266E  C025  F03E         	movff	xtoa@d,xtoa@n
  2704  002672  C026  F03F         	movff	xtoa@d+1,xtoa@n+1
  2705  002676  C027  F040         	movff	xtoa@d+2,xtoa@n+2
  2706  00267A  C028  F041         	movff	xtoa@d+3,xtoa@n+3
  2707  00267E  C029  F042         	movff	xtoa@d+4,xtoa@n+4
  2708  002682  C02A  F043         	movff	xtoa@d+5,xtoa@n+5
  2709  002686  C02B  F044         	movff	xtoa@d+6,xtoa@n+6
  2710  00268A  C02C  F045         	movff	xtoa@d+7,xtoa@n+7
  2711  00268E                     
  2712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2713  00268E  0E00               	movlw	0
  2714  002690  6E47               	movwf	(xtoa@i+1)^0,c
  2715  002692  0E4F               	movlw	79
  2716  002694  6E46               	movwf	xtoa@i^0,c
  2717  002696                     
  2718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2719  002696  0E00               	movlw	0
  2720  002698  0101               	movlb	1	; () banked
  2721  00269A  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2724  00269C  EF03  F014         	goto	l3983
  2725  0026A0                     l3953:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  2728  0026A0  0646               	decf	xtoa@i^0,f,c
  2729  0026A2  A0D8               	btfss	status,0,c
  2730  0026A4  0647               	decf	(xtoa@i+1)^0,f,c
  2731  0026A6                     
  2732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2733  0026A6  0E0F               	movlw	15
  2734  0026A8  143E               	andwf	xtoa@n^0,w,c
  2735  0026AA  6E48               	movwf	xtoa@c^0,c
  2736  0026AC  6A49               	clrf	(xtoa@c+1)^0,c
  2737  0026AE                     
  2738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2739  0026AE  BE49               	btfsc	(xtoa@c+1)^0,7,c
  2740  0026B0  EF63  F013         	goto	u4941
  2741  0026B4  5049               	movf	(xtoa@c+1)^0,w,c
  2742  0026B6  E109               	bnz	u4940
  2743  0026B8  0E0A               	movlw	10
  2744  0026BA  5C48               	subwf	xtoa@c^0,w,c
  2745  0026BC  A0D8               	btfss	status,0,c
  2746  0026BE  EF63  F013         	goto	u4941
  2747  0026C2  EF65  F013         	goto	u4940
  2748  0026C6                     u4941:
  2749  0026C6  EF6D  F013         	goto	l3961
  2750  0026CA                     u4940:
  2751  0026CA  0E57               	movlw	87
  2752  0026CC  2448               	addwf	xtoa@c^0,w,c
  2753  0026CE  6E48               	movwf	xtoa@c^0,c
  2754  0026D0  0E00               	movlw	0
  2755  0026D2  2049               	addwfc	(xtoa@c+1)^0,w,c
  2756  0026D4  6E49               	movwf	(xtoa@c+1)^0,c
  2757  0026D6  EF73  F013         	goto	l944
  2758  0026DA                     l3961:
  2759  0026DA  0E30               	movlw	48
  2760  0026DC  2448               	addwf	xtoa@c^0,w,c
  2761  0026DE  6E48               	movwf	xtoa@c^0,c
  2762  0026E0  0E00               	movlw	0
  2763  0026E2  2049               	addwfc	(xtoa@c+1)^0,w,c
  2764  0026E4  6E49               	movwf	(xtoa@c+1)^0,c
  2765  0026E6                     l944:
  2766  0026E6  0EBF               	movlw	191
  2767  0026E8  6E2E               	movwf	??_xtoa^0,c
  2768  0026EA  0EFF               	movlw	255
  2769  0026EC  6E2F               	movwf	(??_xtoa+1)^0,c
  2770  0026EE  502D               	movf	xtoa@x^0,w,c
  2771  0026F0  6E30               	movwf	(??_xtoa+2)^0,c
  2772  0026F2  6A31               	clrf	(??_xtoa+3)^0,c
  2773  0026F4  502E               	movf	??_xtoa^0,w,c
  2774  0026F6  2630               	addwf	(??_xtoa+2)^0,f,c
  2775  0026F8  502F               	movf	(??_xtoa+1)^0,w,c
  2776  0026FA  2231               	addwfc	(??_xtoa+3)^0,f,c
  2777  0026FC  5031               	movf	(??_xtoa+3)^0,w,c
  2778  0026FE  E10A               	bnz	u4950
  2779  002700  0E1A               	movlw	26
  2780  002702  5C30               	subwf	(??_xtoa+2)^0,w,c
  2781  002704  A0D8               	btfss	status,0,c
  2782  002706  EF87  F013         	goto	u4951
  2783  00270A  EF8A  F013         	goto	u4950
  2784  00270E                     u4951:
  2785  00270E  0E01               	movlw	1
  2786  002710  EF8B  F013         	goto	u4960
  2787  002714                     u4950:
  2788  002714  0E00               	movlw	0
  2789  002716                     u4960:
  2790  002716  6E36               	movwf	_xtoa$1341^0,c
  2791  002718  6A37               	clrf	(_xtoa$1341+1)^0,c
  2792  00271A  5036               	movf	_xtoa$1341^0,w,c
  2793  00271C  1037               	iorwf	(_xtoa$1341+1)^0,w,c
  2794  00271E  B4D8               	btfsc	status,2,c
  2795  002720  EF94  F013         	goto	u4971
  2796  002724  EF96  F013         	goto	u4970
  2797  002728                     u4971:
  2798  002728  EFC6  F013         	goto	l3975
  2799  00272C                     u4970:
  2800  00272C  0E9F               	movlw	159
  2801  00272E  6E2E               	movwf	??_xtoa^0,c
  2802  002730  0EFF               	movlw	255
  2803  002732  6E2F               	movwf	(??_xtoa+1)^0,c
  2804  002734  0E20               	movlw	32
  2805  002736  1048               	iorwf	xtoa@c^0,w,c
  2806  002738  6E30               	movwf	(??_xtoa+2)^0,c
  2807  00273A  0E00               	movlw	0
  2808  00273C  1049               	iorwf	(xtoa@c+1)^0,w,c
  2809  00273E  6E31               	movwf	(??_xtoa+3)^0,c
  2810  002740  502E               	movf	??_xtoa^0,w,c
  2811  002742  2630               	addwf	(??_xtoa+2)^0,f,c
  2812  002744  502F               	movf	(??_xtoa+1)^0,w,c
  2813  002746  2231               	addwfc	(??_xtoa+3)^0,f,c
  2814  002748  5031               	movf	(??_xtoa+3)^0,w,c
  2815  00274A  E10A               	bnz	u4980
  2816  00274C  0E1A               	movlw	26
  2817  00274E  5C30               	subwf	(??_xtoa+2)^0,w,c
  2818  002750  A0D8               	btfss	status,0,c
  2819  002752  EFAD  F013         	goto	u4981
  2820  002756  EFB0  F013         	goto	u4980
  2821  00275A                     u4981:
  2822  00275A  0E01               	movlw	1
  2823  00275C  EFB1  F013         	goto	u4990
  2824  002760                     u4980:
  2825  002760  0E00               	movlw	0
  2826  002762                     u4990:
  2827  002762  6E38               	movwf	_xtoa$1342^0,c
  2828  002764  6A39               	clrf	(_xtoa$1342+1)^0,c
  2829  002766  5038               	movf	_xtoa$1342^0,w,c
  2830  002768  1039               	iorwf	(_xtoa$1342+1)^0,w,c
  2831  00276A  B4D8               	btfsc	status,2,c
  2832  00276C  EFBA  F013         	goto	u5001
  2833  002770  EFBC  F013         	goto	u5000
  2834  002774                     u5001:
  2835  002774  EFC6  F013         	goto	l3975
  2836  002778                     u5000:
  2837  002778                     
  2838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2839  002778  C048  F00E         	movff	xtoa@c,toupper@c
  2840  00277C  C049  F00F         	movff	xtoa@c+1,toupper@c+1
  2841  002780  ECF1  F01B         	call	_toupper	;wreg free
  2842  002784  C00E  F048         	movff	?_toupper,xtoa@c
  2843  002788  C00F  F049         	movff	?_toupper+1,xtoa@c+1
  2844  00278C                     l3975:
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2847  00278C  0E00               	movlw	low _dbuf
  2848  00278E  2446               	addwf	xtoa@i^0,w,c
  2849  002790  6ED9               	movwf	fsr2l,c
  2850  002792  0E01               	movlw	high _dbuf
  2851  002794  2047               	addwfc	(xtoa@i+1)^0,w,c
  2852  002796  6EDA               	movwf	fsr2h,c
  2853  002798  C048  FFDF         	movff	xtoa@c,indf2
  2854  00279C                     
  2855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  2856  00279C  063A               	decf	xtoa@p^0,f,c
  2857  00279E  A0D8               	btfss	status,0,c
  2858  0027A0  063B               	decf	(xtoa@p+1)^0,f,c
  2859  0027A2                     
  2860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  2861  0027A2  063C               	decf	xtoa@w^0,f,c
  2862  0027A4  A0D8               	btfss	status,0,c
  2863  0027A6  063D               	decf	(xtoa@w+1)^0,f,c
  2864  0027A8                     
  2865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2866  0027A8  C03E  F02E         	movff	xtoa@n,??_xtoa
  2867  0027AC  C03F  F02F         	movff	xtoa@n+1,??_xtoa+1
  2868  0027B0  C040  F030         	movff	xtoa@n+2,??_xtoa+2
  2869  0027B4  C041  F031         	movff	xtoa@n+3,??_xtoa+3
  2870  0027B8  C042  F032         	movff	xtoa@n+4,??_xtoa+4
  2871  0027BC  C043  F033         	movff	xtoa@n+5,??_xtoa+5
  2872  0027C0  C044  F034         	movff	xtoa@n+6,??_xtoa+6
  2873  0027C4  C045  F035         	movff	xtoa@n+7,??_xtoa+7
  2874  0027C8  0E05               	movlw	5
  2875  0027CA  EFF0  F013         	goto	u5010
  2876  0027CE                     u5015:
  2877  0027CE  90D8               	bcf	status,0,c
  2878  0027D0  3235               	rrcf	(??_xtoa+7)^0,f,c
  2879  0027D2  3234               	rrcf	(??_xtoa+6)^0,f,c
  2880  0027D4  3233               	rrcf	(??_xtoa+5)^0,f,c
  2881  0027D6  3232               	rrcf	(??_xtoa+4)^0,f,c
  2882  0027D8  3231               	rrcf	(??_xtoa+3)^0,f,c
  2883  0027DA  3230               	rrcf	(??_xtoa+2)^0,f,c
  2884  0027DC  322F               	rrcf	(??_xtoa+1)^0,f,c
  2885  0027DE  322E               	rrcf	??_xtoa^0,f,c
  2886  0027E0                     u5010:
  2887  0027E0  2EE8               	decfsz	wreg,f,c
  2888  0027E2  EFE7  F013         	goto	u5015
  2889  0027E6  C02E  F03E         	movff	??_xtoa,xtoa@n
  2890  0027EA  C02F  F03F         	movff	??_xtoa+1,xtoa@n+1
  2891  0027EE  C030  F040         	movff	??_xtoa+2,xtoa@n+2
  2892  0027F2  C031  F041         	movff	??_xtoa+3,xtoa@n+3
  2893  0027F6  C032  F042         	movff	??_xtoa+4,xtoa@n+4
  2894  0027FA  C033  F043         	movff	??_xtoa+5,xtoa@n+5
  2895  0027FE  C034  F044         	movff	??_xtoa+6,xtoa@n+6
  2896  002802  C035  F045         	movff	??_xtoa+7,xtoa@n+7
  2897  002806                     l3983:
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2900  002806  BE47               	btfsc	(xtoa@i+1)^0,7,c
  2901  002808  EF0F  F014         	goto	u5021
  2902  00280C  5047               	movf	(xtoa@i+1)^0,w,c
  2903  00280E  E109               	bnz	u5020
  2904  002810  0E02               	movlw	2
  2905  002812  5C46               	subwf	xtoa@i^0,w,c
  2906  002814  A0D8               	btfss	status,0,c
  2907  002816  EF0F  F014         	goto	u5021
  2908  00281A  EF11  F014         	goto	u5020
  2909  00281E                     u5021:
  2910  00281E  EF41  F014         	goto	l958
  2911  002822                     u5020:
  2912  002822  503E               	movf	xtoa@n^0,w,c
  2913  002824  103F               	iorwf	(xtoa@n+1)^0,w,c
  2914  002826  1040               	iorwf	(xtoa@n+2)^0,w,c
  2915  002828  1041               	iorwf	(xtoa@n+3)^0,w,c
  2916  00282A  1042               	iorwf	(xtoa@n+4)^0,w,c
  2917  00282C  1043               	iorwf	(xtoa@n+5)^0,w,c
  2918  00282E  1044               	iorwf	(xtoa@n+6)^0,w,c
  2919  002830  1045               	iorwf	(xtoa@n+7)^0,w,c
  2920  002832  A4D8               	btfss	status,2,c
  2921  002834  EF1E  F014         	goto	u5031
  2922  002838  EF20  F014         	goto	u5030
  2923  00283C                     u5031:
  2924  00283C  EF50  F013         	goto	l3953
  2925  002840                     u5030:
  2926  002840  BE3B               	btfsc	(xtoa@p+1)^0,7,c
  2927  002842  EF2D  F014         	goto	u5040
  2928  002846  503B               	movf	(xtoa@p+1)^0,w,c
  2929  002848  E106               	bnz	u5041
  2930  00284A  043A               	decf	xtoa@p^0,w,c
  2931  00284C  B0D8               	btfsc	status,0,c
  2932  00284E  EF2B  F014         	goto	u5041
  2933  002852  EF2D  F014         	goto	u5040
  2934  002856                     u5041:
  2935  002856  EF50  F013         	goto	l3953
  2936  00285A                     u5040:
  2937  00285A  BE3D               	btfsc	(xtoa@w+1)^0,7,c
  2938  00285C  EF38  F014         	goto	u5051
  2939  002860  503D               	movf	(xtoa@w+1)^0,w,c
  2940  002862  E108               	bnz	u5050
  2941  002864  043C               	decf	xtoa@w^0,w,c
  2942  002866  A0D8               	btfss	status,0,c
  2943  002868  EF38  F014         	goto	u5051
  2944  00286C  EF3A  F014         	goto	u5050
  2945  002870                     u5051:
  2946  002870  EF41  F014         	goto	l958
  2947  002874                     u5050:
  2948  002874  B272               	btfsc	_flags^0,1,c
  2949  002876  EF3F  F014         	goto	u5061
  2950  00287A  EF41  F014         	goto	u5060
  2951  00287E                     u5061:
  2952  00287E  EF50  F013         	goto	l3953
  2953  002882                     u5060:
  2954  002882                     l958:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2957  002882  A872               	btfss	_flags^0,4,c
  2958  002884  EF46  F014         	goto	u5071
  2959  002888  EF48  F014         	goto	u5070
  2960  00288C                     u5071:
  2961  00288C  EF5E  F014         	goto	l3999
  2962  002890                     u5070:
  2963  002890                     
  2964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  2965  002890  0646               	decf	xtoa@i^0,f,c
  2966  002892  A0D8               	btfss	status,0,c
  2967  002894  0647               	decf	(xtoa@i+1)^0,f,c
  2968  002896                     
  2969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2970  002896  0E00               	movlw	low _dbuf
  2971  002898  2446               	addwf	xtoa@i^0,w,c
  2972  00289A  6ED9               	movwf	fsr2l,c
  2973  00289C  0E01               	movlw	high _dbuf
  2974  00289E  2047               	addwfc	(xtoa@i+1)^0,w,c
  2975  0028A0  6EDA               	movwf	fsr2h,c
  2976  0028A2  C02D  FFDF         	movff	xtoa@x,indf2
  2977  0028A6                     
  2978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  2979  0028A6  0646               	decf	xtoa@i^0,f,c
  2980  0028A8  A0D8               	btfss	status,0,c
  2981  0028AA  0647               	decf	(xtoa@i+1)^0,f,c
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2984  0028AC  0E00               	movlw	low _dbuf
  2985  0028AE  2446               	addwf	xtoa@i^0,w,c
  2986  0028B0  6ED9               	movwf	fsr2l,c
  2987  0028B2  0E01               	movlw	high _dbuf
  2988  0028B4  2047               	addwfc	(xtoa@i+1)^0,w,c
  2989  0028B6  6EDA               	movwf	fsr2h,c
  2990  0028B8  0E30               	movlw	48
  2991  0028BA  6EDF               	movwf	indf2,c
  2992  0028BC                     l3999:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2995  0028BC  C023  F018         	movff	xtoa@fp,pad@fp
  2996  0028C0  C024  F019         	movff	xtoa@fp+1,pad@fp+1
  2997  0028C4  0E00               	movlw	low _dbuf
  2998  0028C6  2446               	addwf	xtoa@i^0,w,c
  2999  0028C8  6E1A               	movwf	pad@buf^0,c
  3000  0028CA  0E01               	movlw	high _dbuf
  3001  0028CC  2047               	addwfc	(xtoa@i+1)^0,w,c
  3002  0028CE  6E1B               	movwf	(pad@buf+1)^0,c
  3003  0028D0  C03C  F01C         	movff	xtoa@w,pad@p
  3004  0028D4  C03D  F01D         	movff	xtoa@w+1,pad@p+1
  3005  0028D8  EC82  F01A         	call	_pad	;wreg free
  3006  0028DC  C018  F023         	movff	?_pad,?_xtoa
  3007  0028E0  C019  F024         	movff	?_pad+1,?_xtoa+1
  3008  0028E4  0012               	return		;funcret
  3009  0028E6                     __end_of_xtoa:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _toupper *****************
  3013 ;; Defined at:
  3014 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  c               2   13[COMRAM] int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;		None
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  2   13[COMRAM] int 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3028 ;;      Params:         2       0       0       0       0       0       0
  3029 ;;      Locals:         2       0       0       0       0       0       0
  3030 ;;      Temps:          4       0       0       0       0       0       0
  3031 ;;      Totals:         8       0       0       0       0       0       0
  3032 ;;Total ram usage:        8 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 4
  3035 ;; This function calls:
  3036 ;;		_islower
  3037 ;; This function is called by:
  3038 ;;		_xtoa
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text8
  3043  0037E2                     __ptext8:
  3044                           	callstack 0
  3045  0037E2                     _toupper:
  3046                           	callstack 22
  3047  0037E2  0E9F               	movlw	159
  3048  0037E4  6E10               	movwf	??_toupper^0,c
  3049  0037E6  0EFF               	movlw	255
  3050  0037E8  6E11               	movwf	(??_toupper+1)^0,c
  3051  0037EA  C00E  F012         	movff	toupper@c,??_toupper+2
  3052  0037EE  C00F  F013         	movff	toupper@c+1,??_toupper+3
  3053  0037F2  5010               	movf	??_toupper^0,w,c
  3054  0037F4  2612               	addwf	(??_toupper+2)^0,f,c
  3055  0037F6  5011               	movf	(??_toupper+1)^0,w,c
  3056  0037F8  2213               	addwfc	(??_toupper+3)^0,f,c
  3057  0037FA  5013               	movf	(??_toupper+3)^0,w,c
  3058  0037FC  E10A               	bnz	u4300
  3059  0037FE  0E1A               	movlw	26
  3060  003800  5C12               	subwf	(??_toupper+2)^0,w,c
  3061  003802  A0D8               	btfss	status,0,c
  3062  003804  EF06  F01C         	goto	u4301
  3063  003808  EF09  F01C         	goto	u4300
  3064  00380C                     u4301:
  3065  00380C  0E01               	movlw	1
  3066  00380E  EF0A  F01C         	goto	u4310
  3067  003812                     u4300:
  3068  003812  0E00               	movlw	0
  3069  003814                     u4310:
  3070  003814  6E14               	movwf	_toupper$1515^0,c
  3071  003816  6A15               	clrf	(_toupper$1515+1)^0,c
  3072  003818  5014               	movf	_toupper$1515^0,w,c
  3073  00381A  1015               	iorwf	(_toupper$1515+1)^0,w,c
  3074  00381C  B4D8               	btfsc	status,2,c
  3075  00381E  EF13  F01C         	goto	u4321
  3076  003822  EF15  F01C         	goto	u4320
  3077  003826                     u4321:
  3078  003826  EF1B  F01C         	goto	l1159
  3079  00382A                     u4320:
  3080  00382A  0E5F               	movlw	95
  3081  00382C  140E               	andwf	toupper@c^0,w,c
  3082  00382E  6E0E               	movwf	?_toupper^0,c
  3083  003830  6A0F               	clrf	(?_toupper+1)^0,c
  3084  003832  EF1F  F01C         	goto	l1164
  3085  003836                     l1159:
  3086  003836  C00E  F00E         	movff	toupper@c,?_toupper
  3087  00383A  C00F  F00F         	movff	toupper@c+1,?_toupper+1
  3088  00383E                     l1164:
  3089  00383E  0012               	return		;funcret
  3090  003840                     __end_of_toupper:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _islower *****************
  3094 ;; Defined at:
  3095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  c               2    7[COMRAM] int 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  2    7[COMRAM] int 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3109 ;;      Params:         2       0       0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0
  3111 ;;      Temps:          4       0       0       0       0       0       0
  3112 ;;      Totals:         6       0       0       0       0       0       0
  3113 ;;Total ram usage:        6 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 3
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_toupper
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text9
  3124  003B02                     __ptext9:
  3125                           	callstack 0
  3126  003B02                     _islower:
  3127                           	callstack 22
  3128  003B02  0E9F               	movlw	159
  3129  003B04  6E0A               	movwf	??_islower^0,c
  3130  003B06  0EFF               	movlw	255
  3131  003B08  6E0B               	movwf	(??_islower+1)^0,c
  3132  003B0A  C008  F00C         	movff	islower@c,??_islower+2
  3133  003B0E  C009  F00D         	movff	islower@c+1,??_islower+3
  3134  003B12  500A               	movf	??_islower^0,w,c
  3135  003B14  260C               	addwf	(??_islower+2)^0,f,c
  3136  003B16  500B               	movf	(??_islower+1)^0,w,c
  3137  003B18  220D               	addwfc	(??_islower+3)^0,f,c
  3138  003B1A  500D               	movf	(??_islower+3)^0,w,c
  3139  003B1C  E10A               	bnz	u3300
  3140  003B1E  0E1A               	movlw	26
  3141  003B20  5C0C               	subwf	(??_islower+2)^0,w,c
  3142  003B22  A0D8               	btfss	status,0,c
  3143  003B24  EF96  F01D         	goto	u3301
  3144  003B28  EF99  F01D         	goto	u3300
  3145  003B2C                     u3301:
  3146  003B2C  0E01               	movlw	1
  3147  003B2E  EF9A  F01D         	goto	u3310
  3148  003B32                     u3300:
  3149  003B32  0E00               	movlw	0
  3150  003B34                     u3310:
  3151  003B34  6E08               	movwf	?_islower^0,c
  3152  003B36  6A09               	clrf	(?_islower+1)^0,c
  3153  003B38  0012               	return		;funcret
  3154  003B3A                     __end_of_islower:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _isalpha *****************
  3158 ;; Defined at:
  3159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  c               2    7[COMRAM] int 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  2    7[COMRAM] int 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3173 ;;      Params:         2       0       0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0
  3175 ;;      Temps:          4       0       0       0       0       0       0
  3176 ;;      Totals:         6       0       0       0       0       0       0
  3177 ;;Total ram usage:        6 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 3
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_xtoa
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           	psect	text10
  3188  003A54                     __ptext10:
  3189                           	callstack 0
  3190  003A54                     _isalpha:
  3191                           	callstack 23
  3192  003A54  0E9F               	movlw	159
  3193  003A56  6E0A               	movwf	??_isalpha^0,c
  3194  003A58  0EFF               	movlw	255
  3195  003A5A  6E0B               	movwf	(??_isalpha+1)^0,c
  3196  003A5C  0E20               	movlw	32
  3197  003A5E  1008               	iorwf	isalpha@c^0,w,c
  3198  003A60  6E0C               	movwf	(??_isalpha+2)^0,c
  3199  003A62  0E00               	movlw	0
  3200  003A64  1009               	iorwf	(isalpha@c+1)^0,w,c
  3201  003A66  6E0D               	movwf	(??_isalpha+3)^0,c
  3202  003A68  500A               	movf	??_isalpha^0,w,c
  3203  003A6A  260C               	addwf	(??_isalpha+2)^0,f,c
  3204  003A6C  500B               	movf	(??_isalpha+1)^0,w,c
  3205  003A6E  220D               	addwfc	(??_isalpha+3)^0,f,c
  3206  003A70  500D               	movf	(??_isalpha+3)^0,w,c
  3207  003A72  E10A               	bnz	u4280
  3208  003A74  0E1A               	movlw	26
  3209  003A76  5C0C               	subwf	(??_isalpha+2)^0,w,c
  3210  003A78  A0D8               	btfss	status,0,c
  3211  003A7A  EF41  F01D         	goto	u4281
  3212  003A7E  EF44  F01D         	goto	u4280
  3213  003A82                     u4281:
  3214  003A82  0E01               	movlw	1
  3215  003A84  EF45  F01D         	goto	u4290
  3216  003A88                     u4280:
  3217  003A88  0E00               	movlw	0
  3218  003A8A                     u4290:
  3219  003A8A  6E08               	movwf	?_isalpha^0,c
  3220  003A8C  6A09               	clrf	(?_isalpha+1)^0,c
  3221  003A8E  0012               	return		;funcret
  3222  003A90                     __end_of_isalpha:
  3223                           	callstack 0
  3224                           
  3225 ;; *************** function _strncmp *****************
  3226 ;; Defined at:
  3227 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  _l              2    7[COMRAM] PTR const unsigned char 
  3230 ;;		 -> vfpfcnvrt@ct(3), 
  3231 ;;  _r              2    9[COMRAM] PTR const unsigned char 
  3232 ;;		 -> STR_13(3), 
  3233 ;;  n               2   11[COMRAM] unsigned int 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  r               2   16[COMRAM] PTR const unsigned char 
  3236 ;;		 -> STR_13(3), 
  3237 ;;  l               2   14[COMRAM] PTR const unsigned char 
  3238 ;;		 -> vfpfcnvrt@ct(3), 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  2    7[COMRAM] int 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3248 ;;      Params:         6       0       0       0       0       0       0
  3249 ;;      Locals:         4       0       0       0       0       0       0
  3250 ;;      Temps:          1       0       0       0       0       0       0
  3251 ;;      Totals:        11       0       0       0       0       0       0
  3252 ;;Total ram usage:       11 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 3
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_vfpfcnvrt
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text11
  3263  0032A0                     __ptext11:
  3264                           	callstack 0
  3265  0032A0                     _strncmp:
  3266                           	callstack 24
  3267  0032A0  C008  F00F         	movff	strncmp@_l,strncmp@l
  3268  0032A4  C009  F010         	movff	strncmp@_l+1,strncmp@l+1
  3269  0032A8  C00A  F011         	movff	strncmp@_r,strncmp@r
  3270  0032AC  C00B  F012         	movff	strncmp@_r+1,strncmp@r+1
  3271  0032B0  060C               	decf	strncmp@n^0,f,c
  3272  0032B2  A0D8               	btfss	status,0,c
  3273  0032B4  060D               	decf	(strncmp@n+1)^0,f,c
  3274  0032B6  280C               	incf	strncmp@n^0,w,c
  3275  0032B8  E106               	bnz	u5151
  3276  0032BA  280D               	incf	(strncmp@n+1)^0,w,c
  3277  0032BC  A4D8               	btfss	status,2,c
  3278  0032BE  EF63  F019         	goto	u5151
  3279  0032C2  EF65  F019         	goto	u5150
  3280  0032C6                     u5151:
  3281  0032C6  EF72  F019         	goto	l4053
  3282  0032CA                     u5150:
  3283  0032CA  0E00               	movlw	0
  3284  0032CC  6E09               	movwf	(?_strncmp+1)^0,c
  3285  0032CE  0E00               	movlw	0
  3286  0032D0  6E08               	movwf	?_strncmp^0,c
  3287  0032D2  EFBA  F019         	goto	l1136
  3288  0032D6                     l4051:
  3289  0032D6  4A0F               	infsnz	strncmp@l^0,f,c
  3290  0032D8  2A10               	incf	(strncmp@l+1)^0,f,c
  3291  0032DA  4A11               	infsnz	strncmp@r^0,f,c
  3292  0032DC  2A12               	incf	(strncmp@r+1)^0,f,c
  3293  0032DE  060C               	decf	strncmp@n^0,f,c
  3294  0032E0  A0D8               	btfss	status,0,c
  3295  0032E2  060D               	decf	(strncmp@n+1)^0,f,c
  3296  0032E4                     l4053:
  3297  0032E4  C00F  FFD9         	movff	strncmp@l,fsr2l
  3298  0032E8  C010  FFDA         	movff	strncmp@l+1,fsr2h
  3299  0032EC  50DF               	movf	indf2,w,c
  3300  0032EE  B4D8               	btfsc	status,2,c
  3301  0032F0  EF7C  F019         	goto	u5161
  3302  0032F4  EF7E  F019         	goto	u5160
  3303  0032F8                     u5161:
  3304  0032F8  EFA9  F019         	goto	l4061
  3305  0032FC                     u5160:
  3306  0032FC  C011  FFF6         	movff	strncmp@r,tblptrl
  3307  003300  C012  FFF7         	movff	strncmp@r+1,tblptrh
  3308  003304                     	if	0	;tblptru may be non-zero
  3309  003304                     	endif
  3310  003304                     	if	0	;tblptru may be non-zero
  3311  003304                     	endif
  3312  003304  0008               	tblrd		*
  3313  003306  50F5               	movf	tablat,w,c
  3314  003308  0900               	iorlw	0
  3315  00330A  B4D8               	btfsc	status,2,c
  3316  00330C  EF8A  F019         	goto	u5171
  3317  003310  EF8C  F019         	goto	u5170
  3318  003314                     u5171:
  3319  003314  EFA9  F019         	goto	l4061
  3320  003318                     u5170:
  3321  003318  500C               	movf	strncmp@n^0,w,c
  3322  00331A  100D               	iorwf	(strncmp@n+1)^0,w,c
  3323  00331C  B4D8               	btfsc	status,2,c
  3324  00331E  EF93  F019         	goto	u5181
  3325  003322  EF95  F019         	goto	u5180
  3326  003326                     u5181:
  3327  003326  EFA9  F019         	goto	l4061
  3328  00332A                     u5180:
  3329  00332A  C00F  FFD9         	movff	strncmp@l,fsr2l
  3330  00332E  C010  FFDA         	movff	strncmp@l+1,fsr2h
  3331  003332  50DF               	movf	indf2,w,c
  3332  003334  6E0E               	movwf	??_strncmp^0,c
  3333  003336  C011  FFF6         	movff	strncmp@r,tblptrl
  3334  00333A  C012  FFF7         	movff	strncmp@r+1,tblptrh
  3335  00333E                     	if	0	;tblptru may be non-zero
  3336  00333E                     	endif
  3337  00333E                     	if	0	;tblptru may be non-zero
  3338  00333E                     	endif
  3339  00333E  0008               	tblrd		*
  3340  003340  50F5               	movf	tablat,w,c
  3341  003342  180E               	xorwf	??_strncmp^0,w,c
  3342  003344  B4D8               	btfsc	status,2,c
  3343  003346  EFA7  F019         	goto	u5191
  3344  00334A  EFA9  F019         	goto	u5190
  3345  00334E                     u5191:
  3346  00334E  EF6B  F019         	goto	l4051
  3347  003352                     u5190:
  3348  003352                     l4061:
  3349  003352  C00F  FFD9         	movff	strncmp@l,fsr2l
  3350  003356  C010  FFDA         	movff	strncmp@l+1,fsr2h
  3351  00335A  50DF               	movf	indf2,w,c
  3352  00335C  6E0E               	movwf	??_strncmp^0,c
  3353  00335E  C011  FFF6         	movff	strncmp@r,tblptrl
  3354  003362  C012  FFF7         	movff	strncmp@r+1,tblptrh
  3355  003366                     	if	0	;tblptru may be non-zero
  3356  003366                     	endif
  3357  003366                     	if	0	;tblptru may be non-zero
  3358  003366                     	endif
  3359  003366  0008               	tblrd		*
  3360  003368  50F5               	movf	tablat,w,c
  3361  00336A  5C0E               	subwf	??_strncmp^0,w,c
  3362  00336C  6E08               	movwf	?_strncmp^0,c
  3363  00336E  6A09               	clrf	(?_strncmp+1)^0,c
  3364  003370  A0D8               	btfss	status,0,c
  3365  003372  0609               	decf	(?_strncmp+1)^0,f,c
  3366  003374                     l1136:
  3367  003374  0012               	return		;funcret
  3368  003376                     __end_of_strncmp:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _efgtoa *****************
  3372 ;; Defined at:
  3373 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
  3376 ;;		 -> sprintf@f(6), 
  3377 ;;  f               4   60[COMRAM] PTR struct _IO_FILE
  3378 ;;  c               1   64[COMRAM] unsigned char 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  u               4   52[BANK0 ] unsigned char 
  3381 ;;  g               4   44[BANK0 ] unsigned char 
  3382 ;;  l               4   38[BANK0 ] unsigned char 
  3383 ;;  h               4   34[BANK0 ] unsigned char 
  3384 ;;  ou              4   20[BANK0 ] unsigned char 
  3385 ;;  n               2   50[BANK0 ] int 
  3386 ;;  e               2   48[BANK0 ] int 
  3387 ;;  i               2   42[BANK0 ] int 
  3388 ;;  w               2   30[BANK0 ] int 
  3389 ;;  p               2   28[BANK0 ] int 
  3390 ;;  sign            2   26[BANK0 ] int 
  3391 ;;  d               2   24[BANK0 ] int 
  3392 ;;  m               2   18[BANK0 ] int 
  3393 ;;  ne              2   16[BANK0 ] int 
  3394 ;;  pp              2   14[BANK0 ] int 
  3395 ;;  t               2   12[BANK0 ] int 
  3396 ;;  mode            1   33[BANK0 ] unsigned char 
  3397 ;;  nmode           1   32[BANK0 ] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  2   58[COMRAM] int 
  3400 ;; Registers used:
  3401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3407 ;;      Params:         7       0       0       0       0       0       0
  3408 ;;      Locals:         0      56       0       0       0       0       0
  3409 ;;      Temps:          5       0       0       0       0       0       0
  3410 ;;      Totals:        12      56       0       0       0       0       0
  3411 ;;Total ram usage:       68 bytes
  3412 ;; Hardware stack levels used: 1
  3413 ;; Hardware stack levels required when called: 7
  3414 ;; This function calls:
  3415 ;;		___awdiv
  3416 ;;		___awmod
  3417 ;;		___fladd
  3418 ;;		___fldiv
  3419 ;;		___fleq
  3420 ;;		___flge
  3421 ;;		___flmul
  3422 ;;		___flneg
  3423 ;;		___flsub
  3424 ;;		___fltol
  3425 ;;		___fpclassifyf
  3426 ;;		_floorf
  3427 ;;		_isupper
  3428 ;;		_pad
  3429 ;;		_strcpy
  3430 ;;		_tolower
  3431 ;; This function is called by:
  3432 ;;		_vfpfcnvrt
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text12
  3437  00063C                     __ptext12:
  3438                           	callstack 0
  3439  00063C                     _efgtoa:
  3440                           	callstack 20
  3441  00063C                     
  3442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3443  00063C  0E00               	movlw	0
  3444  00063E  0100               	movlb	0	; () banked
  3445  000640  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3446  000642  0E00               	movlw	0
  3447  000644  6F9A               	movwf	efgtoa@sign& (0+255),b
  3448  000646                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3451  000646  C03D  F0AC         	movff	efgtoa@f,efgtoa@g
  3452  00064A  C03E  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  3453  00064E  C03F  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  3454  000652  C040  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  3455  000656                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3458  000656  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3459  000658  EF32  F003         	goto	u4370
  3460  00065C  EF30  F003         	goto	u4371
  3461  000660                     u4371:
  3462  000660  EF48  F003         	goto	l3639
  3463  000664                     u4370:
  3464  000664                     
  3465                           ; BSR set to: 0
  3466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3467  000664  0E00               	movlw	0
  3468  000666  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3469  000668  0E01               	movlw	1
  3470  00066A  6F9A               	movwf	efgtoa@sign& (0+255),b
  3471  00066C                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3474  00066C  C0AC  F008         	movff	efgtoa@g,___flneg@f1
  3475  000670  C0AD  F009         	movff	efgtoa@g+1,___flneg@f1+1
  3476  000674  C0AE  F00A         	movff	efgtoa@g+2,___flneg@f1+2
  3477  000678  C0AF  F00B         	movff	efgtoa@g+3,___flneg@f1+3
  3478  00067C  ECB9  F01D         	call	___flneg	;wreg free
  3479  000680  C008  F0AC         	movff	?___flneg,efgtoa@g
  3480  000684  C009  F0AD         	movff	?___flneg+1,efgtoa@g+1
  3481  000688  C00A  F0AE         	movff	?___flneg+2,efgtoa@g+2
  3482  00068C  C00B  F0AF         	movff	?___flneg+3,efgtoa@g+3
  3483  000690                     l3639:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3486  000690  0E00               	movlw	0
  3487  000692  0100               	movlb	0	; () banked
  3488  000694  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  3489  000696  0E00               	movlw	0
  3490  000698  6FB2               	movwf	efgtoa@n& (0+255),b
  3491  00069A                     
  3492                           ; BSR set to: 0
  3493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3494  00069A  C06E  F09E         	movff	_width,efgtoa@w
  3495  00069E  C06F  F09F         	movff	_width+1,efgtoa@w+1
  3496  0006A2                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3499  0006A2  519A               	movf	efgtoa@sign& (0+255),w,b
  3500  0006A4  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3501  0006A6  A4D8               	btfss	status,2,c
  3502  0006A8  EF58  F003         	goto	u4381
  3503  0006AC  EF5A  F003         	goto	u4380
  3504  0006B0                     u4381:
  3505  0006B0  EF61  F003         	goto	l3647
  3506  0006B4                     u4380:
  3507  0006B4                     
  3508                           ; BSR set to: 0
  3509  0006B4  A472               	btfss	_flags^0,2,c
  3510  0006B6  EF5F  F003         	goto	u4391
  3511  0006BA  EF61  F003         	goto	u4390
  3512  0006BE                     u4391:
  3513  0006BE  EF7B  F003         	goto	l3659
  3514  0006C2                     u4390:
  3515  0006C2                     l3647:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3519  0006C2  519A               	movf	efgtoa@sign& (0+255),w,b
  3520  0006C4  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3521  0006C6  A4D8               	btfss	status,2,c
  3522  0006C8  EF68  F003         	goto	u4401
  3523  0006CC  EF6A  F003         	goto	u4400
  3524  0006D0                     u4401:
  3525  0006D0  EF70  F003         	goto	l3651
  3526  0006D4                     u4400:
  3527  0006D4                     
  3528                           ; BSR set to: 0
  3529  0006D4  0E00               	movlw	0
  3530  0006D6  6F81               	movwf	(_efgtoa$1319+1)& (0+255),b
  3531  0006D8  0E2B               	movlw	43
  3532  0006DA  6F80               	movwf	_efgtoa$1319& (0+255),b
  3533  0006DC  EF74  F003         	goto	l3653
  3534  0006E0                     l3651:
  3535                           
  3536                           ; BSR set to: 0
  3537  0006E0  0E00               	movlw	0
  3538  0006E2  6F81               	movwf	(_efgtoa$1319+1)& (0+255),b
  3539  0006E4  0E2D               	movlw	45
  3540  0006E6  6F80               	movwf	_efgtoa$1319& (0+255),b
  3541  0006E8                     l3653:
  3542                           
  3543                           ; BSR set to: 0
  3544  0006E8  C080  F100         	movff	_efgtoa$1319,_dbuf
  3545  0006EC                     
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3548  0006EC  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3549  0006EE  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3550  0006F0                     
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3553  0006F0  079E               	decf	efgtoa@w& (0+255),f,b
  3554  0006F2  A0D8               	btfss	status,0,c
  3555  0006F4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  3556  0006F6                     l3659:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3560  0006F6  C0AC  F008         	movff	efgtoa@g,___fpclassifyf@x
  3561  0006FA  C0AD  F009         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3562  0006FE  C0AE  F00A         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3563  000702  C0AF  F00B         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3564  000706  ECD1  F018         	call	___fpclassifyf	;wreg free
  3565  00070A  0408               	decf	?___fpclassifyf^0,w,c
  3566  00070C  1009               	iorwf	(?___fpclassifyf+1)^0,w,c
  3567  00070E  A4D8               	btfss	status,2,c
  3568  000710  EF8C  F003         	goto	u4411
  3569  000714  EF8E  F003         	goto	u4410
  3570  000718                     u4411:
  3571  000718  EFE5  F003         	goto	l3677
  3572  00071C                     u4410:
  3573  00071C  0EBF               	movlw	191
  3574  00071E  6E42               	movwf	??_efgtoa^0,c
  3575  000720  0EFF               	movlw	255
  3576  000722  6E43               	movwf	(??_efgtoa+1)^0,c
  3577  000724  5041               	movf	efgtoa@c^0,w,c
  3578  000726  6E44               	movwf	(??_efgtoa+2)^0,c
  3579  000728  6A45               	clrf	(??_efgtoa+3)^0,c
  3580  00072A  5042               	movf	??_efgtoa^0,w,c
  3581  00072C  2644               	addwf	(??_efgtoa+2)^0,f,c
  3582  00072E  5043               	movf	(??_efgtoa+1)^0,w,c
  3583  000730  2245               	addwfc	(??_efgtoa+3)^0,f,c
  3584  000732  5045               	movf	(??_efgtoa+3)^0,w,c
  3585  000734  E10A               	bnz	u4420
  3586  000736  0E1A               	movlw	26
  3587  000738  5C44               	subwf	(??_efgtoa+2)^0,w,c
  3588  00073A  A0D8               	btfss	status,0,c
  3589  00073C  EFA2  F003         	goto	u4421
  3590  000740  EFA5  F003         	goto	u4420
  3591  000744                     u4421:
  3592  000744  0E01               	movlw	1
  3593  000746  EFA6  F003         	goto	u4430
  3594  00074A                     u4420:
  3595  00074A  0E00               	movlw	0
  3596  00074C                     u4430:
  3597  00074C  0100               	movlb	0	; () banked
  3598  00074E  6F82               	movwf	_efgtoa$1320& (0+255),b
  3599  000750  6B83               	clrf	(_efgtoa$1320+1)& (0+255),b
  3600  000752                     
  3601                           ; BSR set to: 0
  3602  000752  5182               	movf	_efgtoa$1320& (0+255),w,b
  3603  000754  1183               	iorwf	(_efgtoa$1320+1)& (0+255),w,b
  3604  000756  B4D8               	btfsc	status,2,c
  3605  000758  EFB0  F003         	goto	u4441
  3606  00075C  EFB2  F003         	goto	u4440
  3607  000760                     u4441:
  3608  000760  EFC0  F003         	goto	l3669
  3609  000764                     u4440:
  3610  000764                     
  3611                           ; BSR set to: 0
  3612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3613  000764  0E00               	movlw	low _dbuf
  3614  000766  25B2               	addwf	efgtoa@n& (0+255),w,b
  3615  000768  6E08               	movwf	strcpy@dest^0,c
  3616  00076A  0E01               	movlw	high _dbuf
  3617  00076C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3618  00076E  6E09               	movwf	(strcpy@dest+1)^0,c
  3619  000770  0E28               	movlw	low STR_3
  3620  000772  6E0A               	movwf	strcpy@src^0,c
  3621  000774  0E06               	movlw	high STR_3
  3622  000776  6E0B               	movwf	(strcpy@src+1)^0,c
  3623  000778  EC20  F01C         	call	_strcpy	;wreg free
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3626  00077C  EFCC  F003         	goto	l3671
  3627  000780                     l3669:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3631  000780  0E00               	movlw	low _dbuf
  3632  000782  25B2               	addwf	efgtoa@n& (0+255),w,b
  3633  000784  6E08               	movwf	strcpy@dest^0,c
  3634  000786  0E01               	movlw	high _dbuf
  3635  000788  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3636  00078A  6E09               	movwf	(strcpy@dest+1)^0,c
  3637  00078C  0E30               	movlw	low STR_4
  3638  00078E  6E0A               	movwf	strcpy@src^0,c
  3639  000790  0E06               	movlw	high STR_4
  3640  000792  6E0B               	movwf	(strcpy@src+1)^0,c
  3641  000794  EC20  F01C         	call	_strcpy	;wreg free
  3642  000798                     l3671:
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3645  000798  0100               	movlb	0	; () banked
  3646  00079A  0EFD               	movlw	253
  3647  00079C  279E               	addwf	efgtoa@w& (0+255),f,b
  3648  00079E  0EFF               	movlw	255
  3649  0007A0  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3650  0007A2                     l3673:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3653  0007A2  C03B  F018         	movff	efgtoa@fp,pad@fp
  3654  0007A6  C03C  F019         	movff	efgtoa@fp+1,pad@fp+1
  3655  0007AA  0E00               	movlw	low _dbuf
  3656  0007AC  6E1A               	movwf	pad@buf^0,c
  3657  0007AE  0E01               	movlw	high _dbuf
  3658  0007B0  6E1B               	movwf	(pad@buf+1)^0,c
  3659  0007B2  C09E  F01C         	movff	efgtoa@w,pad@p
  3660  0007B6  C09F  F01D         	movff	efgtoa@w+1,pad@p+1
  3661  0007BA  EC82  F01A         	call	_pad	;wreg free
  3662  0007BE  C018  F03B         	movff	?_pad,?_efgtoa
  3663  0007C2  C019  F03C         	movff	?_pad+1,?_efgtoa+1
  3664  0007C6  EF4A  F009         	goto	l855
  3665  0007CA                     l3677:
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3668  0007CA  C0AC  F008         	movff	efgtoa@g,___fpclassifyf@x
  3669  0007CE  C0AD  F009         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3670  0007D2  C0AE  F00A         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3671  0007D6  C0AF  F00B         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3672  0007DA  ECD1  F018         	call	___fpclassifyf	;wreg free
  3673  0007DE  5008               	movf	?___fpclassifyf^0,w,c
  3674  0007E0  1009               	iorwf	(?___fpclassifyf+1)^0,w,c
  3675  0007E2  A4D8               	btfss	status,2,c
  3676  0007E4  EFF6  F003         	goto	u4451
  3677  0007E8  EFF8  F003         	goto	u4450
  3678  0007EC                     u4451:
  3679  0007EC  EF38  F004         	goto	l3695
  3680  0007F0                     u4450:
  3681  0007F0  0EBF               	movlw	191
  3682  0007F2  6E42               	movwf	??_efgtoa^0,c
  3683  0007F4  0EFF               	movlw	255
  3684  0007F6  6E43               	movwf	(??_efgtoa+1)^0,c
  3685  0007F8  5041               	movf	efgtoa@c^0,w,c
  3686  0007FA  6E44               	movwf	(??_efgtoa+2)^0,c
  3687  0007FC  6A45               	clrf	(??_efgtoa+3)^0,c
  3688  0007FE  5042               	movf	??_efgtoa^0,w,c
  3689  000800  2644               	addwf	(??_efgtoa+2)^0,f,c
  3690  000802  5043               	movf	(??_efgtoa+1)^0,w,c
  3691  000804  2245               	addwfc	(??_efgtoa+3)^0,f,c
  3692  000806  5045               	movf	(??_efgtoa+3)^0,w,c
  3693  000808  E10A               	bnz	u4460
  3694  00080A  0E1A               	movlw	26
  3695  00080C  5C44               	subwf	(??_efgtoa+2)^0,w,c
  3696  00080E  A0D8               	btfss	status,0,c
  3697  000810  EF0C  F004         	goto	u4461
  3698  000814  EF0F  F004         	goto	u4460
  3699  000818                     u4461:
  3700  000818  0E01               	movlw	1
  3701  00081A  EF10  F004         	goto	u4470
  3702  00081E                     u4460:
  3703  00081E  0E00               	movlw	0
  3704  000820                     u4470:
  3705  000820  0100               	movlb	0	; () banked
  3706  000822  6F84               	movwf	_efgtoa$1325& (0+255),b
  3707  000824  6B85               	clrf	(_efgtoa$1325+1)& (0+255),b
  3708  000826                     
  3709                           ; BSR set to: 0
  3710  000826  5184               	movf	_efgtoa$1325& (0+255),w,b
  3711  000828  1185               	iorwf	(_efgtoa$1325+1)& (0+255),w,b
  3712  00082A  B4D8               	btfsc	status,2,c
  3713  00082C  EF1A  F004         	goto	u4481
  3714  000830  EF1C  F004         	goto	u4480
  3715  000834                     u4481:
  3716  000834  EF2A  F004         	goto	l3687
  3717  000838                     u4480:
  3718  000838                     
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3721  000838  0E00               	movlw	low _dbuf
  3722  00083A  25B2               	addwf	efgtoa@n& (0+255),w,b
  3723  00083C  6E08               	movwf	strcpy@dest^0,c
  3724  00083E  0E01               	movlw	high _dbuf
  3725  000840  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3726  000842  6E09               	movwf	(strcpy@dest+1)^0,c
  3727  000844  0E2C               	movlw	low STR_7
  3728  000846  6E0A               	movwf	strcpy@src^0,c
  3729  000848  0E06               	movlw	high STR_7
  3730  00084A  6E0B               	movwf	(strcpy@src+1)^0,c
  3731  00084C  EC20  F01C         	call	_strcpy	;wreg free
  3732                           
  3733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3734  000850  EFCC  F003         	goto	l3671
  3735  000854                     l3687:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3739  000854  0E00               	movlw	low _dbuf
  3740  000856  25B2               	addwf	efgtoa@n& (0+255),w,b
  3741  000858  6E08               	movwf	strcpy@dest^0,c
  3742  00085A  0E01               	movlw	high _dbuf
  3743  00085C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3744  00085E  6E09               	movwf	(strcpy@dest+1)^0,c
  3745  000860  0E34               	movlw	low STR_8
  3746  000862  6E0A               	movwf	strcpy@src^0,c
  3747  000864  0E06               	movlw	high STR_8
  3748  000866  6E0B               	movwf	(strcpy@src+1)^0,c
  3749  000868  EC20  F01C         	call	_strcpy	;wreg free
  3750  00086C  EFCC  F003         	goto	l3671
  3751  000870                     l3695:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3754  000870  0E00               	movlw	0
  3755  000872  0100               	movlb	0	; () banked
  3756  000874  6FB4               	movwf	efgtoa@u& (0+255),b
  3757  000876  0E00               	movlw	0
  3758  000878  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3759  00087A  0E80               	movlw	128
  3760  00087C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3761  00087E  0E3F               	movlw	63
  3762  000880  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3765  000882  0E00               	movlw	0
  3766  000884  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3767  000886  0E00               	movlw	0
  3768  000888  6FB0               	movwf	efgtoa@e& (0+255),b
  3769  00088A                     
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3772  00088A  C0AC  F008         	movff	efgtoa@g,___fleq@ff1
  3773  00088E  C0AD  F009         	movff	efgtoa@g+1,___fleq@ff1+1
  3774  000892  C0AE  F00A         	movff	efgtoa@g+2,___fleq@ff1+2
  3775  000896  C0AF  F00B         	movff	efgtoa@g+3,___fleq@ff1+3
  3776  00089A  0E00               	movlw	0
  3777  00089C  6E0C               	movwf	___fleq@ff2^0,c
  3778  00089E  0E00               	movlw	0
  3779  0008A0  6E0D               	movwf	(___fleq@ff2+1)^0,c
  3780  0008A2  0E00               	movlw	0
  3781  0008A4  6E0E               	movwf	(___fleq@ff2+2)^0,c
  3782  0008A6  0E00               	movlw	0
  3783  0008A8  6E0F               	movwf	(___fleq@ff2+3)^0,c
  3784  0008AA  EC3B  F01B         	call	___fleq	;wreg free
  3785  0008AE  B0D8               	btfsc	status,0,c
  3786  0008B0  EF5C  F004         	goto	u4491
  3787  0008B4  EF5E  F004         	goto	u4490
  3788  0008B8                     u4491:
  3789  0008B8  EFE1  F004         	goto	l3713
  3790  0008BC                     u4490:
  3791  0008BC  EF7D  F004         	goto	l3705
  3792  0008C0                     l3701:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3795  0008C0  C0B4  F016         	movff	efgtoa@u,___flmul@b
  3796  0008C4  C0B5  F017         	movff	efgtoa@u+1,___flmul@b+1
  3797  0008C8  C0B6  F018         	movff	efgtoa@u+2,___flmul@b+2
  3798  0008CC  C0B7  F019         	movff	efgtoa@u+3,___flmul@b+3
  3799  0008D0  0E00               	movlw	0
  3800  0008D2  6E1A               	movwf	___flmul@a^0,c
  3801  0008D4  0E00               	movlw	0
  3802  0008D6  6E1B               	movwf	(___flmul@a+1)^0,c
  3803  0008D8  0E20               	movlw	32
  3804  0008DA  6E1C               	movwf	(___flmul@a+2)^0,c
  3805  0008DC  0E41               	movlw	65
  3806  0008DE  6E1D               	movwf	(___flmul@a+3)^0,c
  3807  0008E0  EC27  F00F         	call	___flmul	;wreg free
  3808  0008E4  C016  F0B4         	movff	?___flmul,efgtoa@u
  3809  0008E8  C017  F0B5         	movff	?___flmul+1,efgtoa@u+1
  3810  0008EC  C018  F0B6         	movff	?___flmul+2,efgtoa@u+2
  3811  0008F0  C019  F0B7         	movff	?___flmul+3,efgtoa@u+3
  3812  0008F4                     
  3813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3814  0008F4  0100               	movlb	0	; () banked
  3815  0008F6  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  3816  0008F8  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3817  0008FA                     l3705:
  3818                           
  3819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3820  0008FA  C0AC  F02F         	movff	efgtoa@g,___flge@ff1
  3821  0008FE  C0AD  F030         	movff	efgtoa@g+1,___flge@ff1+1
  3822  000902  C0AE  F031         	movff	efgtoa@g+2,___flge@ff1+2
  3823  000906  C0AF  F032         	movff	efgtoa@g+3,___flge@ff1+3
  3824  00090A  0E00               	movlw	0
  3825  00090C  6E1A               	movwf	___flmul@a^0,c
  3826  00090E  0E00               	movlw	0
  3827  000910  6E1B               	movwf	(___flmul@a+1)^0,c
  3828  000912  0E20               	movlw	32
  3829  000914  6E1C               	movwf	(___flmul@a+2)^0,c
  3830  000916  0E41               	movlw	65
  3831  000918  6E1D               	movwf	(___flmul@a+3)^0,c
  3832  00091A  C0B4  F016         	movff	efgtoa@u,___flmul@b
  3833  00091E  C0B5  F017         	movff	efgtoa@u+1,___flmul@b+1
  3834  000922  C0B6  F018         	movff	efgtoa@u+2,___flmul@b+2
  3835  000926  C0B7  F019         	movff	efgtoa@u+3,___flmul@b+3
  3836  00092A  EC27  F00F         	call	___flmul	;wreg free
  3837  00092E  C016  F033         	movff	?___flmul,___flge@ff2
  3838  000932  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  3839  000936  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  3840  00093A  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  3841  00093E  EC4F  F018         	call	___flge	;wreg free
  3842  000942  B0D8               	btfsc	status,0,c
  3843  000944  EFA6  F004         	goto	u4501
  3844  000948  EFA8  F004         	goto	u4500
  3845  00094C                     u4501:
  3846  00094C  EF60  F004         	goto	l3701
  3847  000950                     u4500:
  3848  000950  EFC8  F004         	goto	l3711
  3849  000954                     l3707:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3852  000954  C0B4  F008         	movff	efgtoa@u,___fldiv@b
  3853  000958  C0B5  F009         	movff	efgtoa@u+1,___fldiv@b+1
  3854  00095C  C0B6  F00A         	movff	efgtoa@u+2,___fldiv@b+2
  3855  000960  C0B7  F00B         	movff	efgtoa@u+3,___fldiv@b+3
  3856  000964  0E00               	movlw	0
  3857  000966  6E0C               	movwf	___fldiv@a^0,c
  3858  000968  0E00               	movlw	0
  3859  00096A  6E0D               	movwf	(___fldiv@a+1)^0,c
  3860  00096C  0E20               	movlw	32
  3861  00096E  6E0E               	movwf	(___fldiv@a+2)^0,c
  3862  000970  0E41               	movlw	65
  3863  000972  6E0F               	movwf	(___fldiv@a+3)^0,c
  3864  000974  EC3C  F011         	call	___fldiv	;wreg free
  3865  000978  C008  F0B4         	movff	?___fldiv,efgtoa@u
  3866  00097C  C009  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3867  000980  C00A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3868  000984  C00B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3869  000988                     
  3870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3871  000988  0100               	movlb	0	; () banked
  3872  00098A  07B0               	decf	efgtoa@e& (0+255),f,b
  3873  00098C  A0D8               	btfss	status,0,c
  3874  00098E  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  3875  000990                     l3711:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3878  000990  C0AC  F02F         	movff	efgtoa@g,___flge@ff1
  3879  000994  C0AD  F030         	movff	efgtoa@g+1,___flge@ff1+1
  3880  000998  C0AE  F031         	movff	efgtoa@g+2,___flge@ff1+2
  3881  00099C  C0AF  F032         	movff	efgtoa@g+3,___flge@ff1+3
  3882  0009A0  C0B4  F033         	movff	efgtoa@u,___flge@ff2
  3883  0009A4  C0B5  F034         	movff	efgtoa@u+1,___flge@ff2+1
  3884  0009A8  C0B6  F035         	movff	efgtoa@u+2,___flge@ff2+2
  3885  0009AC  C0B7  F036         	movff	efgtoa@u+3,___flge@ff2+3
  3886  0009B0  EC4F  F018         	call	___flge	;wreg free
  3887  0009B4  A0D8               	btfss	status,0,c
  3888  0009B6  EFDF  F004         	goto	u4511
  3889  0009BA  EFE1  F004         	goto	u4510
  3890  0009BE                     u4511:
  3891  0009BE  EFAA  F004         	goto	l3707
  3892  0009C2                     u4510:
  3893  0009C2                     l3713:
  3894                           
  3895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3896  0009C2  C041  F00E         	movff	efgtoa@c,tolower@c
  3897  0009C6  6A0F               	clrf	(tolower@c+1)^0,c
  3898  0009C8  ECC1  F01B         	call	_tolower	;wreg free
  3899  0009CC  500E               	movf	?_tolower^0,w,c
  3900  0009CE  0100               	movlb	0	; () banked
  3901  0009D0  6FA1               	movwf	efgtoa@mode& (0+255),b
  3902  0009D2                     
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3905  0009D2  C0A1  F0A0         	movff	efgtoa@mode,efgtoa@nmode
  3906  0009D6                     
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3909  0009D6  0E67               	movlw	103
  3910  0009D8  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3911  0009DA  A4D8               	btfss	status,2,c
  3912  0009DC  EFF2  F004         	goto	u4521
  3913  0009E0  EFF4  F004         	goto	u4520
  3914  0009E4                     u4521:
  3915  0009E4  EF1A  F005         	goto	l3727
  3916  0009E8                     u4520:
  3917  0009E8                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3920  0009E8  5070               	movf	_prec^0,w,c
  3921  0009EA  1071               	iorwf	(_prec+1)^0,w,c
  3922  0009EC  A4D8               	btfss	status,2,c
  3923  0009EE  EFFB  F004         	goto	u4531
  3924  0009F2  EFFD  F004         	goto	u4530
  3925  0009F6                     u4531:
  3926  0009F6  EF01  F005         	goto	l3723
  3927  0009FA                     u4530:
  3928  0009FA                     
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3931  0009FA  0E00               	movlw	0
  3932  0009FC  6E71               	movwf	(_prec+1)^0,c
  3933  0009FE  0E01               	movlw	1
  3934  000A00  6E70               	movwf	_prec^0,c
  3935  000A02                     l3723:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3939  000A02  BE71               	btfsc	(_prec+1)^0,7,c
  3940  000A04  EF0E  F005         	goto	u4540
  3941  000A08  5071               	movf	(_prec+1)^0,w,c
  3942  000A0A  E106               	bnz	u4541
  3943  000A0C  0470               	decf	_prec^0,w,c
  3944  000A0E  B0D8               	btfsc	status,0,c
  3945  000A10  EF0C  F005         	goto	u4541
  3946  000A14  EF0E  F005         	goto	u4540
  3947  000A18                     u4541:
  3948  000A18  EF14  F005         	goto	l873
  3949  000A1C                     u4540:
  3950  000A1C                     l3725:
  3951                           
  3952                           ; BSR set to: 0
  3953  000A1C  0E00               	movlw	0
  3954  000A1E  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  3955  000A20  0E06               	movlw	6
  3956  000A22  6F9C               	movwf	efgtoa@p& (0+255),b
  3957  000A24  EF23  F005         	goto	l3733
  3958  000A28                     l873:
  3959                           
  3960                           ; BSR set to: 0
  3961  000A28  C070  F09C         	movff	_prec,efgtoa@p
  3962  000A2C  C071  F09D         	movff	_prec+1,efgtoa@p+1
  3963  000A30  EF23  F005         	goto	l3733
  3964  000A34                     l3727:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3968  000A34  BE71               	btfsc	(_prec+1)^0,7,c
  3969  000A36  EF1F  F005         	goto	u4551
  3970  000A3A  EF21  F005         	goto	u4550
  3971  000A3E                     u4551:
  3972  000A3E  EF0E  F005         	goto	l3725
  3973  000A42                     u4550:
  3974  000A42  EF14  F005         	goto	l873
  3975  000A46                     l3733:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3979  000A46  0E67               	movlw	103
  3980  000A48  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3981  000A4A  A4D8               	btfss	status,2,c
  3982  000A4C  EF2A  F005         	goto	u4561
  3983  000A50  EF2C  F005         	goto	u4560
  3984  000A54                     u4561:
  3985  000A54  EF5B  F005         	goto	l3743
  3986  000A58                     u4560:
  3987  000A58                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3990  000A58  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3991  000A5A  EF3A  F005         	goto	u4570
  3992  000A5E  0EFC               	movlw	252
  3993  000A60  5DB0               	subwf	efgtoa@e& (0+255),w,b
  3994  000A62  0EFF               	movlw	255
  3995  000A64  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3996  000A66  A0D8               	btfss	status,0,c
  3997  000A68  EF38  F005         	goto	u4571
  3998  000A6C  EF3A  F005         	goto	u4570
  3999  000A70                     u4571:
  4000  000A70  EF59  F005         	goto	l3741
  4001  000A74                     u4570:
  4002  000A74                     
  4003                           ; BSR set to: 0
  4004  000A74  0EFF               	movlw	255
  4005  000A76  6E42               	movwf	??_efgtoa^0,c
  4006  000A78  0EFF               	movlw	255
  4007  000A7A  6E43               	movwf	(??_efgtoa+1)^0,c
  4008  000A7C  C09C  F044         	movff	efgtoa@p,??_efgtoa+2
  4009  000A80  C09D  F045         	movff	efgtoa@p+1,??_efgtoa+3
  4010  000A84  5042               	movf	??_efgtoa^0,w,c
  4011  000A86  2644               	addwf	(??_efgtoa+2)^0,f,c
  4012  000A88  5043               	movf	(??_efgtoa+1)^0,w,c
  4013  000A8A  2245               	addwfc	(??_efgtoa+3)^0,f,c
  4014  000A8C  51B0               	movf	efgtoa@e& (0+255),w,b
  4015  000A8E  5C44               	subwf	(??_efgtoa+2)^0,w,c
  4016  000A90  5045               	movf	(??_efgtoa+3)^0,w,c
  4017  000A92  0A80               	xorlw	128
  4018  000A94  6E46               	movwf	(??_efgtoa+4)^0,c
  4019  000A96  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4020  000A98  0A80               	xorlw	128
  4021  000A9A  5846               	subwfb	(??_efgtoa+4)^0,w,c
  4022  000A9C  A0D8               	btfss	status,0,c
  4023  000A9E  EF53  F005         	goto	u4581
  4024  000AA2  EF55  F005         	goto	u4580
  4025  000AA6                     u4581:
  4026  000AA6  EF59  F005         	goto	l3741
  4027  000AAA                     u4580:
  4028  000AAA                     
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4031  000AAA  0E66               	movlw	102
  4032  000AAC  6FA0               	movwf	efgtoa@nmode& (0+255),b
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4035  000AAE  EF5B  F005         	goto	l3743
  4036  000AB2                     l3741:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4040  000AB2  0E65               	movlw	101
  4041  000AB4  6FA0               	movwf	efgtoa@nmode& (0+255),b
  4042  000AB6                     l3743:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4046  000AB6  C09C  F092         	movff	efgtoa@p,efgtoa@m
  4047  000ABA  C09D  F093         	movff	efgtoa@p+1,efgtoa@m+1
  4048  000ABE                     
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4051  000ABE  0E67               	movlw	103
  4052  000AC0  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4053  000AC2  A4D8               	btfss	status,2,c
  4054  000AC4  EF66  F005         	goto	u4591
  4055  000AC8  EF68  F005         	goto	u4590
  4056  000ACC                     u4591:
  4057  000ACC  EF78  F005         	goto	l3751
  4058  000AD0                     u4590:
  4059  000AD0                     
  4060                           ; BSR set to: 0
  4061  000AD0  0E66               	movlw	102
  4062  000AD2  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  4063  000AD4  A4D8               	btfss	status,2,c
  4064  000AD6  EF6F  F005         	goto	u4601
  4065  000ADA  EF71  F005         	goto	u4600
  4066  000ADE                     u4601:
  4067  000ADE  EF7A  F005         	goto	l3753
  4068  000AE2                     u4600:
  4069  000AE2                     
  4070                           ; BSR set to: 0
  4071  000AE2  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4072  000AE4  EF78  F005         	goto	u4610
  4073  000AE8  EF76  F005         	goto	u4611
  4074  000AEC                     u4611:
  4075  000AEC  EF7A  F005         	goto	l3753
  4076  000AF0                     u4610:
  4077  000AF0                     l3751:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4081  000AF0  4B92               	infsnz	efgtoa@m& (0+255),f,b
  4082  000AF2  2B93               	incf	(efgtoa@m+1)& (0+255),f,b
  4083  000AF4                     l3753:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4087  000AF4  0E66               	movlw	102
  4088  000AF6  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  4089  000AF8  A4D8               	btfss	status,2,c
  4090  000AFA  EF81  F005         	goto	u4621
  4091  000AFE  EF83  F005         	goto	u4620
  4092  000B02                     u4621:
  4093  000B02  EFA3  F005         	goto	l3763
  4094  000B06                     u4620:
  4095  000B06                     
  4096                           ; BSR set to: 0
  4097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4098  000B06  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4099  000B08  EF8A  F005         	goto	u4630
  4100  000B0C  EF88  F005         	goto	u4631
  4101  000B10                     u4631:
  4102  000B10  EF96  F005         	goto	l3759
  4103  000B14                     u4630:
  4104  000B14                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4107  000B14  0E00               	movlw	0
  4108  000B16  6FB4               	movwf	efgtoa@u& (0+255),b
  4109  000B18  0E00               	movlw	0
  4110  000B1A  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4111  000B1C  0E80               	movlw	128
  4112  000B1E  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4113  000B20  0E3F               	movlw	63
  4114  000B22  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4117  000B24  0E00               	movlw	0
  4118  000B26  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4119  000B28  0E00               	movlw	0
  4120  000B2A  6FB0               	movwf	efgtoa@e& (0+255),b
  4121  000B2C                     l3759:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4125  000B2C  0E67               	movlw	103
  4126  000B2E  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4127  000B30  B4D8               	btfsc	status,2,c
  4128  000B32  EF9D  F005         	goto	u4641
  4129  000B36  EF9F  F005         	goto	u4640
  4130  000B3A                     u4641:
  4131  000B3A  EFA3  F005         	goto	l3763
  4132  000B3E                     u4640:
  4133  000B3E                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4136  000B3E  51B0               	movf	efgtoa@e& (0+255),w,b
  4137  000B40  2792               	addwf	efgtoa@m& (0+255),f,b
  4138  000B42  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  4139  000B44  2393               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4140  000B46                     l3763:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4144  000B46  0E00               	movlw	0
  4145  000B48  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4146  000B4A  0E00               	movlw	0
  4147  000B4C  6FAA               	movwf	efgtoa@i& (0+255),b
  4148  000B4E                     
  4149                           ; BSR set to: 0
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4151  000B4E  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  4152  000B52  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  4153  000B56  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  4154  000B5A  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  4155  000B5E                     
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4158  000B5E  C0B4  F094         	movff	efgtoa@u,efgtoa@ou
  4159  000B62  C0B5  F095         	movff	efgtoa@u+1,efgtoa@ou+1
  4160  000B66  C0B6  F096         	movff	efgtoa@u+2,efgtoa@ou+2
  4161  000B6A  C0B7  F097         	movff	efgtoa@u+3,efgtoa@ou+3
  4162                           
  4163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4164  000B6E  EF34  F006         	goto	l3777
  4165  000B72                     l3769:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4169  000B72  C0A2  F008         	movff	efgtoa@h,___fldiv@b
  4170  000B76  C0A3  F009         	movff	efgtoa@h+1,___fldiv@b+1
  4171  000B7A  C0A4  F00A         	movff	efgtoa@h+2,___fldiv@b+2
  4172  000B7E  C0A5  F00B         	movff	efgtoa@h+3,___fldiv@b+3
  4173  000B82  C0B4  F00C         	movff	efgtoa@u,___fldiv@a
  4174  000B86  C0B5  F00D         	movff	efgtoa@u+1,___fldiv@a+1
  4175  000B8A  C0B6  F00E         	movff	efgtoa@u+2,___fldiv@a+2
  4176  000B8E  C0B7  F00F         	movff	efgtoa@u+3,___fldiv@a+3
  4177  000B92  EC3C  F011         	call	___fldiv	;wreg free
  4178  000B96  C008  F021         	movff	?___fldiv,floorf@x
  4179  000B9A  C009  F022         	movff	?___fldiv+1,floorf@x+1
  4180  000B9E  C00A  F023         	movff	?___fldiv+2,floorf@x+2
  4181  000BA2  C00B  F024         	movff	?___fldiv+3,floorf@x+3
  4182  000BA6  EC73  F014         	call	_floorf	;wreg free
  4183  000BAA  C021  F0A6         	movff	?_floorf,efgtoa@l
  4184  000BAE  C022  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4185  000BB2  C023  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4186  000BB6  C024  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4189  000BBA  C0A6  F008         	movff	efgtoa@l,___fltol@f1
  4190  000BBE  C0A7  F009         	movff	efgtoa@l+1,___fltol@f1+1
  4191  000BC2  C0A8  F00A         	movff	efgtoa@l+2,___fltol@f1+2
  4192  000BC6  C0A9  F00B         	movff	efgtoa@l+3,___fltol@f1+3
  4193  000BCA  ECCC  F017         	call	___fltol	;wreg free
  4194  000BCE  C008  F098         	movff	?___fltol,efgtoa@d
  4195  000BD2  C009  F099         	movff	?___fltol+1,efgtoa@d+1
  4196  000BD6                     
  4197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4198  000BD6  C0A2  F02F         	movff	efgtoa@h,___flsub@b
  4199  000BDA  C0A3  F030         	movff	efgtoa@h+1,___flsub@b+1
  4200  000BDE  C0A4  F031         	movff	efgtoa@h+2,___flsub@b+2
  4201  000BE2  C0A5  F032         	movff	efgtoa@h+3,___flsub@b+3
  4202  000BE6  C0B4  F01A         	movff	efgtoa@u,___flmul@a
  4203  000BEA  C0B5  F01B         	movff	efgtoa@u+1,___flmul@a+1
  4204  000BEE  C0B6  F01C         	movff	efgtoa@u+2,___flmul@a+2
  4205  000BF2  C0B7  F01D         	movff	efgtoa@u+3,___flmul@a+3
  4206  000BF6  C0A6  F016         	movff	efgtoa@l,___flmul@b
  4207  000BFA  C0A7  F017         	movff	efgtoa@l+1,___flmul@b+1
  4208  000BFE  C0A8  F018         	movff	efgtoa@l+2,___flmul@b+2
  4209  000C02  C0A9  F019         	movff	efgtoa@l+3,___flmul@b+3
  4210  000C06  EC27  F00F         	call	___flmul	;wreg free
  4211  000C0A  C016  F033         	movff	?___flmul,___flsub@a
  4212  000C0E  C017  F034         	movff	?___flmul+1,___flsub@a+1
  4213  000C12  C018  F035         	movff	?___flmul+2,___flsub@a+2
  4214  000C16  C019  F036         	movff	?___flmul+3,___flsub@a+3
  4215  000C1A  ECC3  F01C         	call	___flsub	;wreg free
  4216  000C1E  C02F  F0A2         	movff	?___flsub,efgtoa@h
  4217  000C22  C030  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4218  000C26  C031  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4219  000C2A  C032  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4220  000C2E                     
  4221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4222  000C2E  C0B4  F008         	movff	efgtoa@u,___fldiv@b
  4223  000C32  C0B5  F009         	movff	efgtoa@u+1,___fldiv@b+1
  4224  000C36  C0B6  F00A         	movff	efgtoa@u+2,___fldiv@b+2
  4225  000C3A  C0B7  F00B         	movff	efgtoa@u+3,___fldiv@b+3
  4226  000C3E  0E00               	movlw	0
  4227  000C40  6E0C               	movwf	___fldiv@a^0,c
  4228  000C42  0E00               	movlw	0
  4229  000C44  6E0D               	movwf	(___fldiv@a+1)^0,c
  4230  000C46  0E20               	movlw	32
  4231  000C48  6E0E               	movwf	(___fldiv@a+2)^0,c
  4232  000C4A  0E41               	movlw	65
  4233  000C4C  6E0F               	movwf	(___fldiv@a+3)^0,c
  4234  000C4E  EC3C  F011         	call	___fldiv	;wreg free
  4235  000C52  C008  F0B4         	movff	?___fldiv,efgtoa@u
  4236  000C56  C009  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4237  000C5A  C00A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4238  000C5E  C00B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4239  000C62                     
  4240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4241  000C62  0100               	movlb	0	; () banked
  4242  000C64  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4243  000C66  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4244  000C68                     l3777:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4248  000C68  5192               	movf	efgtoa@m& (0+255),w,b
  4249  000C6A  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4250  000C6C  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4251  000C6E  0A80               	xorlw	128
  4252  000C70  6E42               	movwf	??_efgtoa^0,c
  4253  000C72  5193               	movf	(efgtoa@m+1)& (0+255),w,b
  4254  000C74  0A80               	xorlw	128
  4255  000C76  5842               	subwfb	??_efgtoa^0,w,c
  4256  000C78  A0D8               	btfss	status,0,c
  4257  000C7A  EF41  F006         	goto	u4651
  4258  000C7E  EF43  F006         	goto	u4650
  4259  000C82                     u4651:
  4260  000C82  EFB9  F005         	goto	l3769
  4261  000C86                     u4650:
  4262  000C86                     
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4265  000C86  C0B4  F016         	movff	efgtoa@u,___flmul@b
  4266  000C8A  C0B5  F017         	movff	efgtoa@u+1,___flmul@b+1
  4267  000C8E  C0B6  F018         	movff	efgtoa@u+2,___flmul@b+2
  4268  000C92  C0B7  F019         	movff	efgtoa@u+3,___flmul@b+3
  4269  000C96  0E00               	movlw	0
  4270  000C98  6E1A               	movwf	___flmul@a^0,c
  4271  000C9A  0E00               	movlw	0
  4272  000C9C  6E1B               	movwf	(___flmul@a+1)^0,c
  4273  000C9E  0EA0               	movlw	160
  4274  000CA0  6E1C               	movwf	(___flmul@a+2)^0,c
  4275  000CA2  0E40               	movlw	64
  4276  000CA4  6E1D               	movwf	(___flmul@a+3)^0,c
  4277  000CA6  EC27  F00F         	call	___flmul	;wreg free
  4278  000CAA  C016  F0A6         	movff	?___flmul,efgtoa@l
  4279  000CAE  C017  F0A7         	movff	?___flmul+1,efgtoa@l+1
  4280  000CB2  C018  F0A8         	movff	?___flmul+2,efgtoa@l+2
  4281  000CB6  C019  F0A9         	movff	?___flmul+3,efgtoa@l+3
  4282  000CBA                     
  4283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4284  000CBA  C0A2  F02F         	movff	efgtoa@h,___flge@ff1
  4285  000CBE  C0A3  F030         	movff	efgtoa@h+1,___flge@ff1+1
  4286  000CC2  C0A4  F031         	movff	efgtoa@h+2,___flge@ff1+2
  4287  000CC6  C0A5  F032         	movff	efgtoa@h+3,___flge@ff1+3
  4288  000CCA  C0A6  F033         	movff	efgtoa@l,___flge@ff2
  4289  000CCE  C0A7  F034         	movff	efgtoa@l+1,___flge@ff2+1
  4290  000CD2  C0A8  F035         	movff	efgtoa@l+2,___flge@ff2+2
  4291  000CD6  C0A9  F036         	movff	efgtoa@l+3,___flge@ff2+3
  4292  000CDA  EC4F  F018         	call	___flge	;wreg free
  4293  000CDE  B0D8               	btfsc	status,0,c
  4294  000CE0  EF74  F006         	goto	u4661
  4295  000CE4  EF76  F006         	goto	u4660
  4296  000CE8                     u4661:
  4297  000CE8  EF81  F006         	goto	l3785
  4298  000CEC                     u4660:
  4299  000CEC                     
  4300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4301  000CEC  0E00               	movlw	0
  4302  000CEE  0100               	movlb	0	; () banked
  4303  000CF0  6FA6               	movwf	efgtoa@l& (0+255),b
  4304  000CF2  0E00               	movlw	0
  4305  000CF4  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4306  000CF6  0E00               	movlw	0
  4307  000CF8  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4308  000CFA  0E00               	movlw	0
  4309  000CFC  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4312  000CFE  EFAA  F006         	goto	l3791
  4313  000D02                     l3785:
  4314                           
  4315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4316  000D02  C0A2  F008         	movff	efgtoa@h,___fleq@ff1
  4317  000D06  C0A3  F009         	movff	efgtoa@h+1,___fleq@ff1+1
  4318  000D0A  C0A4  F00A         	movff	efgtoa@h+2,___fleq@ff1+2
  4319  000D0E  C0A5  F00B         	movff	efgtoa@h+3,___fleq@ff1+3
  4320  000D12  C0A6  F00C         	movff	efgtoa@l,___fleq@ff2
  4321  000D16  C0A7  F00D         	movff	efgtoa@l+1,___fleq@ff2+1
  4322  000D1A  C0A8  F00E         	movff	efgtoa@l+2,___fleq@ff2+2
  4323  000D1E  C0A9  F00F         	movff	efgtoa@l+3,___fleq@ff2+3
  4324  000D22  EC3B  F01B         	call	___fleq	;wreg free
  4325  000D26  A0D8               	btfss	status,0,c
  4326  000D28  EF98  F006         	goto	u4671
  4327  000D2C  EF9A  F006         	goto	u4670
  4328  000D30                     u4671:
  4329  000D30  EFAA  F006         	goto	l3791
  4330  000D34                     u4670:
  4331  000D34  0100               	movlb	0	; () banked
  4332  000D36  B198               	btfsc	efgtoa@d& (0+255),0,b
  4333  000D38  EFA0  F006         	goto	u4681
  4334  000D3C  EFA2  F006         	goto	u4680
  4335  000D40                     u4681:
  4336  000D40  EFAA  F006         	goto	l3791
  4337  000D44                     u4680:
  4338  000D44                     
  4339                           ; BSR set to: 0
  4340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4341  000D44  0E00               	movlw	0
  4342  000D46  6FA6               	movwf	efgtoa@l& (0+255),b
  4343  000D48  0E00               	movlw	0
  4344  000D4A  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4345  000D4C  0E00               	movlw	0
  4346  000D4E  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4347  000D50  0E00               	movlw	0
  4348  000D52  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4349  000D54                     l3791:
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4352  000D54  C0AC  F008         	movff	efgtoa@g,___fladd@b
  4353  000D58  C0AD  F009         	movff	efgtoa@g+1,___fladd@b+1
  4354  000D5C  C0AE  F00A         	movff	efgtoa@g+2,___fladd@b+2
  4355  000D60  C0AF  F00B         	movff	efgtoa@g+3,___fladd@b+3
  4356  000D64  C0A6  F00C         	movff	efgtoa@l,___fladd@a
  4357  000D68  C0A7  F00D         	movff	efgtoa@l+1,___fladd@a+1
  4358  000D6C  C0A8  F00E         	movff	efgtoa@l+2,___fladd@a+2
  4359  000D70  C0A9  F00F         	movff	efgtoa@l+3,___fladd@a+3
  4360  000D74  ECC7  F00C         	call	___fladd	;wreg free
  4361  000D78  C008  F0A2         	movff	?___fladd,efgtoa@h
  4362  000D7C  C009  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4363  000D80  C00A  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4364  000D84  C00B  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4365  000D88                     
  4366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4367  000D88  C0A2  F02F         	movff	efgtoa@h,___flge@ff1
  4368  000D8C  C0A3  F030         	movff	efgtoa@h+1,___flge@ff1+1
  4369  000D90  C0A4  F031         	movff	efgtoa@h+2,___flge@ff1+2
  4370  000D94  C0A5  F032         	movff	efgtoa@h+3,___flge@ff1+3
  4371  000D98  0E00               	movlw	0
  4372  000D9A  6E1A               	movwf	___flmul@a^0,c
  4373  000D9C  0E00               	movlw	0
  4374  000D9E  6E1B               	movwf	(___flmul@a+1)^0,c
  4375  000DA0  0E20               	movlw	32
  4376  000DA2  6E1C               	movwf	(___flmul@a+2)^0,c
  4377  000DA4  0E41               	movlw	65
  4378  000DA6  6E1D               	movwf	(___flmul@a+3)^0,c
  4379  000DA8  C094  F016         	movff	efgtoa@ou,___flmul@b
  4380  000DAC  C095  F017         	movff	efgtoa@ou+1,___flmul@b+1
  4381  000DB0  C096  F018         	movff	efgtoa@ou+2,___flmul@b+2
  4382  000DB4  C097  F019         	movff	efgtoa@ou+3,___flmul@b+3
  4383  000DB8  EC27  F00F         	call	___flmul	;wreg free
  4384  000DBC  C016  F033         	movff	?___flmul,___flge@ff2
  4385  000DC0  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  4386  000DC4  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  4387  000DC8  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  4388  000DCC  EC4F  F018         	call	___flge	;wreg free
  4389  000DD0  A0D8               	btfss	status,0,c
  4390  000DD2  EFED  F006         	goto	u4691
  4391  000DD6  EFEF  F006         	goto	u4690
  4392  000DDA                     u4691:
  4393  000DDA  EF18  F007         	goto	l3803
  4394  000DDE                     u4690:
  4395  000DDE                     
  4396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4397  000DDE  0100               	movlb	0	; () banked
  4398  000DE0  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  4399  000DE2  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4400  000DE4                     
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4403  000DE4  C094  F016         	movff	efgtoa@ou,___flmul@b
  4404  000DE8  C095  F017         	movff	efgtoa@ou+1,___flmul@b+1
  4405  000DEC  C096  F018         	movff	efgtoa@ou+2,___flmul@b+2
  4406  000DF0  C097  F019         	movff	efgtoa@ou+3,___flmul@b+3
  4407  000DF4  0E00               	movlw	0
  4408  000DF6  6E1A               	movwf	___flmul@a^0,c
  4409  000DF8  0E00               	movlw	0
  4410  000DFA  6E1B               	movwf	(___flmul@a+1)^0,c
  4411  000DFC  0E20               	movlw	32
  4412  000DFE  6E1C               	movwf	(___flmul@a+2)^0,c
  4413  000E00  0E41               	movlw	65
  4414  000E02  6E1D               	movwf	(___flmul@a+3)^0,c
  4415  000E04  EC27  F00F         	call	___flmul	;wreg free
  4416  000E08  C016  F094         	movff	?___flmul,efgtoa@ou
  4417  000E0C  C017  F095         	movff	?___flmul+1,efgtoa@ou+1
  4418  000E10  C018  F096         	movff	?___flmul+2,efgtoa@ou+2
  4419  000E14  C019  F097         	movff	?___flmul+3,efgtoa@ou+3
  4420  000E18                     
  4421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4422  000E18  0E66               	movlw	102
  4423  000E1A  0100               	movlb	0	; () banked
  4424  000E1C  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  4425  000E1E  A4D8               	btfss	status,2,c
  4426  000E20  EF14  F007         	goto	u4701
  4427  000E24  EF16  F007         	goto	u4700
  4428  000E28                     u4701:
  4429  000E28  EF18  F007         	goto	l3803
  4430  000E2C                     u4700:
  4431  000E2C                     
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4434  000E2C  4B92               	infsnz	efgtoa@m& (0+255),f,b
  4435  000E2E  2B93               	incf	(efgtoa@m+1)& (0+255),f,b
  4436  000E30                     l3803:
  4437                           
  4438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4439  000E30  C094  F0B4         	movff	efgtoa@ou,efgtoa@u
  4440  000E34  C095  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4441  000E38  C096  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4442  000E3C  C097  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4443  000E40                     
  4444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4445  000E40  0E65               	movlw	101
  4446  000E42  0100               	movlb	0	; () banked
  4447  000E44  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  4448  000E46  B4D8               	btfsc	status,2,c
  4449  000E48  EF28  F007         	goto	u4711
  4450  000E4C  EF2A  F007         	goto	u4710
  4451  000E50                     u4711:
  4452  000E50  EF30  F007         	goto	l3809
  4453  000E54                     u4710:
  4454  000E54                     
  4455                           ; BSR set to: 0
  4456  000E54  C0B0  F090         	movff	efgtoa@e,efgtoa@ne
  4457  000E58  C0B1  F091         	movff	efgtoa@e+1,efgtoa@ne+1
  4458  000E5C  EF34  F007         	goto	l901
  4459  000E60                     l3809:
  4460                           
  4461                           ; BSR set to: 0
  4462  000E60  0E00               	movlw	0
  4463  000E62  6F91               	movwf	(efgtoa@ne+1)& (0+255),b
  4464  000E64  0E00               	movlw	0
  4465  000E66  6F90               	movwf	efgtoa@ne& (0+255),b
  4466  000E68                     l901:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4470  000E68  0E00               	movlw	0
  4471  000E6A  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
  4472  000E6C  0E00               	movlw	0
  4473  000E6E  6F8E               	movwf	efgtoa@pp& (0+255),b
  4474                           
  4475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4476  000E70  0E00               	movlw	0
  4477  000E72  6F8D               	movwf	(efgtoa@t+1)& (0+255),b
  4478  000E74  0E00               	movlw	0
  4479  000E76  6F8C               	movwf	efgtoa@t& (0+255),b
  4480                           
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4482  000E78  0E00               	movlw	0
  4483  000E7A  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4484  000E7C  0E00               	movlw	0
  4485  000E7E  6FAA               	movwf	efgtoa@i& (0+255),b
  4486                           
  4487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4488  000E80  EF30  F008         	goto	l3859
  4489  000E84                     l3811:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4493  000E84  C0A2  F008         	movff	efgtoa@h,___fldiv@b
  4494  000E88  C0A3  F009         	movff	efgtoa@h+1,___fldiv@b+1
  4495  000E8C  C0A4  F00A         	movff	efgtoa@h+2,___fldiv@b+2
  4496  000E90  C0A5  F00B         	movff	efgtoa@h+3,___fldiv@b+3
  4497  000E94  C0B4  F00C         	movff	efgtoa@u,___fldiv@a
  4498  000E98  C0B5  F00D         	movff	efgtoa@u+1,___fldiv@a+1
  4499  000E9C  C0B6  F00E         	movff	efgtoa@u+2,___fldiv@a+2
  4500  000EA0  C0B7  F00F         	movff	efgtoa@u+3,___fldiv@a+3
  4501  000EA4  EC3C  F011         	call	___fldiv	;wreg free
  4502  000EA8  C008  F021         	movff	?___fldiv,floorf@x
  4503  000EAC  C009  F022         	movff	?___fldiv+1,floorf@x+1
  4504  000EB0  C00A  F023         	movff	?___fldiv+2,floorf@x+2
  4505  000EB4  C00B  F024         	movff	?___fldiv+3,floorf@x+3
  4506  000EB8  EC73  F014         	call	_floorf	;wreg free
  4507  000EBC  C021  F0A6         	movff	?_floorf,efgtoa@l
  4508  000EC0  C022  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4509  000EC4  C023  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4510  000EC8  C024  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4513  000ECC  C0A6  F008         	movff	efgtoa@l,___fltol@f1
  4514  000ED0  C0A7  F009         	movff	efgtoa@l+1,___fltol@f1+1
  4515  000ED4  C0A8  F00A         	movff	efgtoa@l+2,___fltol@f1+2
  4516  000ED8  C0A9  F00B         	movff	efgtoa@l+3,___fltol@f1+3
  4517  000EDC  ECCC  F017         	call	___fltol	;wreg free
  4518  000EE0  C008  F098         	movff	?___fltol,efgtoa@d
  4519  000EE4  C009  F099         	movff	?___fltol+1,efgtoa@d+1
  4520  000EE8                     
  4521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4522  000EE8  B872               	btfsc	_flags^0,4,c
  4523  000EEA  EF79  F007         	goto	u4721
  4524  000EEE  EF7B  F007         	goto	u4720
  4525  000EF2                     u4721:
  4526  000EF2  EF99  F007         	goto	l3823
  4527  000EF6                     u4720:
  4528  000EF6  0100               	movlb	0	; () banked
  4529  000EF8  5198               	movf	efgtoa@d& (0+255),w,b
  4530  000EFA  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4531  000EFC  A4D8               	btfss	status,2,c
  4532  000EFE  EF83  F007         	goto	u4731
  4533  000F02  EF85  F007         	goto	u4730
  4534  000F06                     u4731:
  4535  000F06  EF99  F007         	goto	l3823
  4536  000F0A                     u4730:
  4537  000F0A                     
  4538                           ; BSR set to: 0
  4539  000F0A  0E67               	movlw	103
  4540  000F0C  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4541  000F0E  A4D8               	btfss	status,2,c
  4542  000F10  EF8C  F007         	goto	u4741
  4543  000F14  EF8E  F007         	goto	u4740
  4544  000F18                     u4741:
  4545  000F18  EF99  F007         	goto	l3823
  4546  000F1C                     u4740:
  4547  000F1C                     
  4548                           ; BSR set to: 0
  4549  000F1C  BF91               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4550  000F1E  EF95  F007         	goto	u4750
  4551  000F22  EF93  F007         	goto	u4751
  4552  000F26                     u4751:
  4553  000F26  EF99  F007         	goto	l3823
  4554  000F2A                     u4750:
  4555  000F2A                     
  4556                           ; BSR set to: 0
  4557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4558  000F2A  4B8C               	infsnz	efgtoa@t& (0+255),f,b
  4559  000F2C  2B8D               	incf	(efgtoa@t+1)& (0+255),f,b
  4560                           
  4561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4562  000F2E  EFE4  F007         	goto	l3851
  4563  000F32                     l3823:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4566  000F32  0100               	movlb	0	; () banked
  4567  000F34  518E               	movf	efgtoa@pp& (0+255),w,b
  4568  000F36  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4569  000F38  A4D8               	btfss	status,2,c
  4570  000F3A  EFA1  F007         	goto	u4761
  4571  000F3E  EFA3  F007         	goto	u4760
  4572  000F42                     u4761:
  4573  000F42  EFCD  F007         	goto	l3843
  4574  000F46                     u4760:
  4575  000F46                     
  4576                           ; BSR set to: 0
  4577  000F46  BF91               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4578  000F48  EFAA  F007         	goto	u4770
  4579  000F4C  EFA8  F007         	goto	u4771
  4580  000F50                     u4771:
  4581  000F50  EFCD  F007         	goto	l3843
  4582  000F54                     u4770:
  4583  000F54                     
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4586  000F54  0E00               	movlw	low _dbuf
  4587  000F56  25B2               	addwf	efgtoa@n& (0+255),w,b
  4588  000F58  6ED9               	movwf	fsr2l,c
  4589  000F5A  0E01               	movlw	high _dbuf
  4590  000F5C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4591  000F5E  6EDA               	movwf	fsr2h,c
  4592  000F60  0E2E               	movlw	46
  4593  000F62  6EDF               	movwf	indf2,c
  4594  000F64                     
  4595                           ; BSR set to: 0
  4596  000F64  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4597  000F66  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4598  000F68                     
  4599                           ; BSR set to: 0
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4601  000F68  079E               	decf	efgtoa@w& (0+255),f,b
  4602  000F6A  A0D8               	btfss	status,0,c
  4603  000F6C  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  4604  000F6E                     
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4607  000F6E  0E00               	movlw	0
  4608  000F70  6F8F               	movwf	(efgtoa@pp+1)& (0+255),b
  4609  000F72  0E01               	movlw	1
  4610  000F74  6F8E               	movwf	efgtoa@pp& (0+255),b
  4611  000F76  EFCD  F007         	goto	l3843
  4612  000F7A                     l3835:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4616  000F7A  0E00               	movlw	low _dbuf
  4617  000F7C  25B2               	addwf	efgtoa@n& (0+255),w,b
  4618  000F7E  6ED9               	movwf	fsr2l,c
  4619  000F80  0E01               	movlw	high _dbuf
  4620  000F82  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4621  000F84  6EDA               	movwf	fsr2h,c
  4622  000F86  0E30               	movlw	48
  4623  000F88  6EDF               	movwf	indf2,c
  4624  000F8A                     
  4625                           ; BSR set to: 0
  4626  000F8A  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4627  000F8C  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4628  000F8E                     
  4629                           ; BSR set to: 0
  4630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4631  000F8E  079E               	decf	efgtoa@w& (0+255),f,b
  4632  000F90  A0D8               	btfss	status,0,c
  4633  000F92  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  4634  000F94                     
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4637  000F94  078C               	decf	efgtoa@t& (0+255),f,b
  4638  000F96  A0D8               	btfss	status,0,c
  4639  000F98  078D               	decf	(efgtoa@t+1)& (0+255),f,b
  4640  000F9A                     l3843:
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4644  000F9A  518C               	movf	efgtoa@t& (0+255),w,b
  4645  000F9C  118D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4646  000F9E  A4D8               	btfss	status,2,c
  4647  000FA0  EFD4  F007         	goto	u4781
  4648  000FA4  EFD6  F007         	goto	u4780
  4649  000FA8                     u4781:
  4650  000FA8  EFBD  F007         	goto	l3835
  4651  000FAC                     u4780:
  4652  000FAC                     
  4653                           ; BSR set to: 0
  4654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4655  000FAC  0E00               	movlw	low _dbuf
  4656  000FAE  25B2               	addwf	efgtoa@n& (0+255),w,b
  4657  000FB0  6ED9               	movwf	fsr2l,c
  4658  000FB2  0E01               	movlw	high _dbuf
  4659  000FB4  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4660  000FB6  6EDA               	movwf	fsr2h,c
  4661  000FB8  5198               	movf	efgtoa@d& (0+255),w,b
  4662  000FBA  0F30               	addlw	48
  4663  000FBC  6EDF               	movwf	indf2,c
  4664  000FBE                     
  4665                           ; BSR set to: 0
  4666  000FBE  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4667  000FC0  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4668  000FC2                     
  4669                           ; BSR set to: 0
  4670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4671  000FC2  079E               	decf	efgtoa@w& (0+255),f,b
  4672  000FC4  A0D8               	btfss	status,0,c
  4673  000FC6  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  4674  000FC8                     l3851:
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4678  000FC8  C0A2  F02F         	movff	efgtoa@h,___flsub@b
  4679  000FCC  C0A3  F030         	movff	efgtoa@h+1,___flsub@b+1
  4680  000FD0  C0A4  F031         	movff	efgtoa@h+2,___flsub@b+2
  4681  000FD4  C0A5  F032         	movff	efgtoa@h+3,___flsub@b+3
  4682  000FD8  C0B4  F01A         	movff	efgtoa@u,___flmul@a
  4683  000FDC  C0B5  F01B         	movff	efgtoa@u+1,___flmul@a+1
  4684  000FE0  C0B6  F01C         	movff	efgtoa@u+2,___flmul@a+2
  4685  000FE4  C0B7  F01D         	movff	efgtoa@u+3,___flmul@a+3
  4686  000FE8  C0A6  F016         	movff	efgtoa@l,___flmul@b
  4687  000FEC  C0A7  F017         	movff	efgtoa@l+1,___flmul@b+1
  4688  000FF0  C0A8  F018         	movff	efgtoa@l+2,___flmul@b+2
  4689  000FF4  C0A9  F019         	movff	efgtoa@l+3,___flmul@b+3
  4690  000FF8  EC27  F00F         	call	___flmul	;wreg free
  4691  000FFC  C016  F033         	movff	?___flmul,___flsub@a
  4692  001000  C017  F034         	movff	?___flmul+1,___flsub@a+1
  4693  001004  C018  F035         	movff	?___flmul+2,___flsub@a+2
  4694  001008  C019  F036         	movff	?___flmul+3,___flsub@a+3
  4695  00100C  ECC3  F01C         	call	___flsub	;wreg free
  4696  001010  C02F  F0A2         	movff	?___flsub,efgtoa@h
  4697  001014  C030  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4698  001018  C031  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4699  00101C  C032  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4700  001020                     
  4701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4702  001020  C0B4  F008         	movff	efgtoa@u,___fldiv@b
  4703  001024  C0B5  F009         	movff	efgtoa@u+1,___fldiv@b+1
  4704  001028  C0B6  F00A         	movff	efgtoa@u+2,___fldiv@b+2
  4705  00102C  C0B7  F00B         	movff	efgtoa@u+3,___fldiv@b+3
  4706  001030  0E00               	movlw	0
  4707  001032  6E0C               	movwf	___fldiv@a^0,c
  4708  001034  0E00               	movlw	0
  4709  001036  6E0D               	movwf	(___fldiv@a+1)^0,c
  4710  001038  0E20               	movlw	32
  4711  00103A  6E0E               	movwf	(___fldiv@a+2)^0,c
  4712  00103C  0E41               	movlw	65
  4713  00103E  6E0F               	movwf	(___fldiv@a+3)^0,c
  4714  001040  EC3C  F011         	call	___fldiv	;wreg free
  4715  001044  C008  F0B4         	movff	?___fldiv,efgtoa@u
  4716  001048  C009  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4717  00104C  C00A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4718  001050  C00B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4719  001054                     
  4720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4721  001054  0100               	movlb	0	; () banked
  4722  001056  0790               	decf	efgtoa@ne& (0+255),f,b
  4723  001058  A0D8               	btfss	status,0,c
  4724  00105A  0791               	decf	(efgtoa@ne+1)& (0+255),f,b
  4725  00105C                     
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4728  00105C  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4729  00105E  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4730  001060                     l3859:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4734  001060  5192               	movf	efgtoa@m& (0+255),w,b
  4735  001062  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4736  001064  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4737  001066  0A80               	xorlw	128
  4738  001068  6E42               	movwf	??_efgtoa^0,c
  4739  00106A  5193               	movf	(efgtoa@m+1)& (0+255),w,b
  4740  00106C  0A80               	xorlw	128
  4741  00106E  5842               	subwfb	??_efgtoa^0,w,c
  4742  001070  B0D8               	btfsc	status,0,c
  4743  001072  EF3D  F008         	goto	u4791
  4744  001076  EF3F  F008         	goto	u4790
  4745  00107A                     u4791:
  4746  00107A  EF4D  F008         	goto	l3863
  4747  00107E                     u4790:
  4748  00107E                     
  4749                           ; BSR set to: 0
  4750  00107E  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4751  001080  EF4B  F008         	goto	u4801
  4752  001084  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  4753  001086  E109               	bnz	u4800
  4754  001088  0E4B               	movlw	75
  4755  00108A  5DB2               	subwf	efgtoa@n& (0+255),w,b
  4756  00108C  A0D8               	btfss	status,0,c
  4757  00108E  EF4B  F008         	goto	u4801
  4758  001092  EF4D  F008         	goto	u4800
  4759  001096                     u4801:
  4760  001096  EF42  F007         	goto	l3811
  4761  00109A                     u4800:
  4762  00109A                     l3863:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4766  00109A  518E               	movf	efgtoa@pp& (0+255),w,b
  4767  00109C  118F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4768  00109E  A4D8               	btfss	status,2,c
  4769  0010A0  EF54  F008         	goto	u4811
  4770  0010A4  EF56  F008         	goto	u4810
  4771  0010A8                     u4811:
  4772  0010A8  EF67  F008         	goto	l3871
  4773  0010AC                     u4810:
  4774  0010AC                     
  4775                           ; BSR set to: 0
  4776  0010AC  A872               	btfss	_flags^0,4,c
  4777  0010AE  EF5B  F008         	goto	u4821
  4778  0010B2  EF5D  F008         	goto	u4820
  4779  0010B6                     u4821:
  4780  0010B6  EF67  F008         	goto	l3871
  4781  0010BA                     u4820:
  4782  0010BA                     
  4783                           ; BSR set to: 0
  4784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4785  0010BA  0E00               	movlw	low _dbuf
  4786  0010BC  25B2               	addwf	efgtoa@n& (0+255),w,b
  4787  0010BE  6ED9               	movwf	fsr2l,c
  4788  0010C0  0E01               	movlw	high _dbuf
  4789  0010C2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4790  0010C4  6EDA               	movwf	fsr2h,c
  4791  0010C6  0E2E               	movlw	46
  4792  0010C8  6EDF               	movwf	indf2,c
  4793  0010CA                     
  4794                           ; BSR set to: 0
  4795  0010CA  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4796  0010CC  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4797  0010CE                     l3871:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4801  0010CE  0E00               	movlw	low _dbuf
  4802  0010D0  25B2               	addwf	efgtoa@n& (0+255),w,b
  4803  0010D2  6ED9               	movwf	fsr2l,c
  4804  0010D4  0E01               	movlw	high _dbuf
  4805  0010D6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4806  0010D8  6EDA               	movwf	fsr2h,c
  4807  0010DA  0E00               	movlw	0
  4808  0010DC  6EDF               	movwf	indf2,c
  4809  0010DE                     
  4810                           ; BSR set to: 0
  4811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4812  0010DE  0E65               	movlw	101
  4813  0010E0  19A0               	xorwf	efgtoa@nmode& (0+255),w,b
  4814  0010E2  A4D8               	btfss	status,2,c
  4815  0010E4  EF76  F008         	goto	u4831
  4816  0010E8  EF78  F008         	goto	u4830
  4817  0010EC                     u4831:
  4818  0010EC  EFD1  F003         	goto	l3673
  4819  0010F0                     u4830:
  4820  0010F0                     
  4821                           ; BSR set to: 0
  4822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4823  0010F0  0E00               	movlw	0
  4824  0010F2  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4825  0010F4  0E4F               	movlw	79
  4826  0010F6  6FAA               	movwf	efgtoa@i& (0+255),b
  4827  0010F8                     
  4828                           ; BSR set to: 0
  4829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4830  0010F8  0E00               	movlw	low _dbuf
  4831  0010FA  25AA               	addwf	efgtoa@i& (0+255),w,b
  4832  0010FC  6ED9               	movwf	fsr2l,c
  4833  0010FE  0E01               	movlw	high _dbuf
  4834  001100  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4835  001102  6EDA               	movwf	fsr2h,c
  4836  001104  0E00               	movlw	0
  4837  001106  6EDF               	movwf	indf2,c
  4838  001108                     
  4839                           ; BSR set to: 0
  4840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4841  001108  0E00               	movlw	0
  4842  00110A  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4843  00110C  0E00               	movlw	0
  4844  00110E  6F9A               	movwf	efgtoa@sign& (0+255),b
  4845  001110                     
  4846                           ; BSR set to: 0
  4847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4848  001110  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4849  001112  EF8F  F008         	goto	u4840
  4850  001116  EF8D  F008         	goto	u4841
  4851  00111A                     u4841:
  4852  00111A  EF97  F008         	goto	l3887
  4853  00111E                     u4840:
  4854  00111E                     
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4857  00111E  0E00               	movlw	0
  4858  001120  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4859  001122  0E01               	movlw	1
  4860  001124  6F9A               	movwf	efgtoa@sign& (0+255),b
  4861  001126                     
  4862                           ; BSR set to: 0
  4863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4864  001126  6DB0               	negf	efgtoa@e& (0+255),b
  4865  001128  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  4866  00112A  B0D8               	btfsc	status,0,c
  4867  00112C  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4868  00112E                     l3887:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4872  00112E  0E00               	movlw	0
  4873  001130  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4874  001132  0E02               	movlw	2
  4875  001134  6F9C               	movwf	efgtoa@p& (0+255),b
  4876                           
  4877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4878  001136  EFC8  F008         	goto	l3899
  4879  00113A                     l3889:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4883  00113A  07AA               	decf	efgtoa@i& (0+255),f,b
  4884  00113C  A0D8               	btfss	status,0,c
  4885  00113E  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4886  001140                     
  4887                           ; BSR set to: 0
  4888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4889  001140  0E00               	movlw	low _dbuf
  4890  001142  25AA               	addwf	efgtoa@i& (0+255),w,b
  4891  001144  6ED9               	movwf	fsr2l,c
  4892  001146  0E01               	movlw	high _dbuf
  4893  001148  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4894  00114A  6EDA               	movwf	fsr2h,c
  4895  00114C  C0B0  F008         	movff	efgtoa@e,___awmod@dividend
  4896  001150  C0B1  F009         	movff	efgtoa@e+1,___awmod@dividend+1
  4897  001154  0E00               	movlw	0
  4898  001156  6E0B               	movwf	(___awmod@divisor+1)^0,c
  4899  001158  0E0A               	movlw	10
  4900  00115A  6E0A               	movwf	___awmod@divisor^0,c
  4901  00115C  ECE3  F01A         	call	___awmod	;wreg free
  4902  001160  5008               	movf	?___awmod^0,w,c
  4903  001162  0F30               	addlw	48
  4904  001164  6EDF               	movwf	indf2,c
  4905  001166                     
  4906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4907  001166  C0B0  F008         	movff	efgtoa@e,___awdiv@dividend
  4908  00116A  C0B1  F009         	movff	efgtoa@e+1,___awdiv@dividend+1
  4909  00116E  0E00               	movlw	0
  4910  001170  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  4911  001172  0E0A               	movlw	10
  4912  001174  6E0A               	movwf	___awdiv@divisor^0,c
  4913  001176  EC20  F01A         	call	___awdiv	;wreg free
  4914  00117A  C008  F0B0         	movff	?___awdiv,efgtoa@e
  4915  00117E  C009  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  4916  001182                     
  4917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4918  001182  0100               	movlb	0	; () banked
  4919  001184  079C               	decf	efgtoa@p& (0+255),f,b
  4920  001186  A0D8               	btfss	status,0,c
  4921  001188  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  4922  00118A                     
  4923                           ; BSR set to: 0
  4924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4925  00118A  079E               	decf	efgtoa@w& (0+255),f,b
  4926  00118C  A0D8               	btfss	status,0,c
  4927  00118E  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  4928  001190                     l3899:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4932  001190  51B0               	movf	efgtoa@e& (0+255),w,b
  4933  001192  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4934  001194  A4D8               	btfss	status,2,c
  4935  001196  EFCF  F008         	goto	u4851
  4936  00119A  EFD1  F008         	goto	u4850
  4937  00119E                     u4851:
  4938  00119E  EF9D  F008         	goto	l3889
  4939  0011A2                     u4850:
  4940  0011A2                     
  4941                           ; BSR set to: 0
  4942  0011A2  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4943  0011A4  EFDE  F008         	goto	u4860
  4944  0011A8  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  4945  0011AA  E106               	bnz	u4861
  4946  0011AC  059C               	decf	efgtoa@p& (0+255),w,b
  4947  0011AE  B0D8               	btfsc	status,0,c
  4948  0011B0  EFDC  F008         	goto	u4861
  4949  0011B4  EFDE  F008         	goto	u4860
  4950  0011B8                     u4861:
  4951  0011B8  EF9D  F008         	goto	l3889
  4952  0011BC                     u4860:
  4953  0011BC                     
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4956  0011BC  07AA               	decf	efgtoa@i& (0+255),f,b
  4957  0011BE  A0D8               	btfss	status,0,c
  4958  0011C0  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4959  0011C2                     
  4960                           ; BSR set to: 0
  4961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4962  0011C2  519A               	movf	efgtoa@sign& (0+255),w,b
  4963  0011C4  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4964  0011C6  A4D8               	btfss	status,2,c
  4965  0011C8  EFE8  F008         	goto	u4871
  4966  0011CC  EFEA  F008         	goto	u4870
  4967  0011D0                     u4871:
  4968  0011D0  EFF0  F008         	goto	l3909
  4969  0011D4                     u4870:
  4970  0011D4                     
  4971                           ; BSR set to: 0
  4972  0011D4  0E00               	movlw	0
  4973  0011D6  6F87               	movwf	(_efgtoa$1329+1)& (0+255),b
  4974  0011D8  0E2B               	movlw	43
  4975  0011DA  6F86               	movwf	_efgtoa$1329& (0+255),b
  4976  0011DC  EFF4  F008         	goto	l3911
  4977  0011E0                     l3909:
  4978                           
  4979                           ; BSR set to: 0
  4980  0011E0  0E00               	movlw	0
  4981  0011E2  6F87               	movwf	(_efgtoa$1329+1)& (0+255),b
  4982  0011E4  0E2D               	movlw	45
  4983  0011E6  6F86               	movwf	_efgtoa$1329& (0+255),b
  4984  0011E8                     l3911:
  4985                           
  4986                           ; BSR set to: 0
  4987  0011E8  0E00               	movlw	low _dbuf
  4988  0011EA  25AA               	addwf	efgtoa@i& (0+255),w,b
  4989  0011EC  6ED9               	movwf	fsr2l,c
  4990  0011EE  0E01               	movlw	high _dbuf
  4991  0011F0  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4992  0011F2  6EDA               	movwf	fsr2h,c
  4993  0011F4  C086  FFDF         	movff	_efgtoa$1329,indf2
  4994  0011F8                     
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4997  0011F8  079E               	decf	efgtoa@w& (0+255),f,b
  4998  0011FA  A0D8               	btfss	status,0,c
  4999  0011FC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  5000  0011FE                     
  5001                           ; BSR set to: 0
  5002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5003  0011FE  07AA               	decf	efgtoa@i& (0+255),f,b
  5004  001200  A0D8               	btfss	status,0,c
  5005  001202  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5006  001204                     
  5007                           ; BSR set to: 0
  5008  001204  0EBF               	movlw	191
  5009  001206  6E42               	movwf	??_efgtoa^0,c
  5010  001208  0EFF               	movlw	255
  5011  00120A  6E43               	movwf	(??_efgtoa+1)^0,c
  5012  00120C  5041               	movf	efgtoa@c^0,w,c
  5013  00120E  6E44               	movwf	(??_efgtoa+2)^0,c
  5014  001210  6A45               	clrf	(??_efgtoa+3)^0,c
  5015  001212  5042               	movf	??_efgtoa^0,w,c
  5016  001214  2644               	addwf	(??_efgtoa+2)^0,f,c
  5017  001216  5043               	movf	(??_efgtoa+1)^0,w,c
  5018  001218  2245               	addwfc	(??_efgtoa+3)^0,f,c
  5019  00121A  5045               	movf	(??_efgtoa+3)^0,w,c
  5020  00121C  E10A               	bnz	u4880
  5021  00121E  0E1A               	movlw	26
  5022  001220  5C44               	subwf	(??_efgtoa+2)^0,w,c
  5023  001222  A0D8               	btfss	status,0,c
  5024  001224  EF16  F009         	goto	u4881
  5025  001228  EF19  F009         	goto	u4880
  5026  00122C                     u4881:
  5027  00122C  0E01               	movlw	1
  5028  00122E  EF1A  F009         	goto	u4890
  5029  001232                     u4880:
  5030  001232  0E00               	movlw	0
  5031  001234                     u4890:
  5032  001234  6F8A               	movwf	_efgtoa$1331& (0+255),b
  5033  001236  6B8B               	clrf	(_efgtoa$1331+1)& (0+255),b
  5034  001238                     
  5035                           ; BSR set to: 0
  5036  001238  518A               	movf	_efgtoa$1331& (0+255),w,b
  5037  00123A  118B               	iorwf	(_efgtoa$1331+1)& (0+255),w,b
  5038  00123C  A4D8               	btfss	status,2,c
  5039  00123E  EF23  F009         	goto	u4901
  5040  001242  EF25  F009         	goto	u4900
  5041  001246                     u4901:
  5042  001246  EF2B  F009         	goto	l3925
  5043  00124A                     u4900:
  5044  00124A                     
  5045                           ; BSR set to: 0
  5046  00124A  0E00               	movlw	0
  5047  00124C  6F89               	movwf	(_efgtoa$1330+1)& (0+255),b
  5048  00124E  0E65               	movlw	101
  5049  001250  6F88               	movwf	_efgtoa$1330& (0+255),b
  5050  001252  EF2F  F009         	goto	l3927
  5051  001256                     l3925:
  5052                           
  5053                           ; BSR set to: 0
  5054  001256  0E00               	movlw	0
  5055  001258  6F89               	movwf	(_efgtoa$1330+1)& (0+255),b
  5056  00125A  0E45               	movlw	69
  5057  00125C  6F88               	movwf	_efgtoa$1330& (0+255),b
  5058  00125E                     l3927:
  5059                           
  5060                           ; BSR set to: 0
  5061  00125E  0E00               	movlw	low _dbuf
  5062  001260  25AA               	addwf	efgtoa@i& (0+255),w,b
  5063  001262  6ED9               	movwf	fsr2l,c
  5064  001264  0E01               	movlw	high _dbuf
  5065  001266  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5066  001268  6EDA               	movwf	fsr2h,c
  5067  00126A  C088  FFDF         	movff	_efgtoa$1330,indf2
  5068  00126E                     
  5069                           ; BSR set to: 0
  5070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5071  00126E  079E               	decf	efgtoa@w& (0+255),f,b
  5072  001270  A0D8               	btfss	status,0,c
  5073  001272  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  5074  001274                     
  5075                           ; BSR set to: 0
  5076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5077  001274  0E00               	movlw	low _dbuf
  5078  001276  25B2               	addwf	efgtoa@n& (0+255),w,b
  5079  001278  6E08               	movwf	strcpy@dest^0,c
  5080  00127A  0E01               	movlw	high _dbuf
  5081  00127C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5082  00127E  6E09               	movwf	(strcpy@dest+1)^0,c
  5083  001280  0E00               	movlw	low _dbuf
  5084  001282  25AA               	addwf	efgtoa@i& (0+255),w,b
  5085  001284  6E0A               	movwf	strcpy@src^0,c
  5086  001286  0E01               	movlw	high _dbuf
  5087  001288  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5088  00128A  6E0B               	movwf	(strcpy@src+1)^0,c
  5089  00128C  EC20  F01C         	call	_strcpy	;wreg free
  5090  001290  EFD1  F003         	goto	l3673
  5091  001294                     l855:
  5092  001294  0012               	return		;funcret
  5093  001296                     __end_of_efgtoa:
  5094                           	callstack 0
  5095                           
  5096 ;; *************** function _tolower *****************
  5097 ;; Defined at:
  5098 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  c               2   13[COMRAM] int 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;		None
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2   13[COMRAM] int 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5112 ;;      Params:         2       0       0       0       0       0       0
  5113 ;;      Locals:         2       0       0       0       0       0       0
  5114 ;;      Temps:          4       0       0       0       0       0       0
  5115 ;;      Totals:         8       0       0       0       0       0       0
  5116 ;;Total ram usage:        8 bytes
  5117 ;; Hardware stack levels used: 1
  5118 ;; Hardware stack levels required when called: 4
  5119 ;; This function calls:
  5120 ;;		_isupper
  5121 ;; This function is called by:
  5122 ;;		_efgtoa
  5123 ;;		_vfpfcnvrt
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text13
  5128  003782                     __ptext13:
  5129                           	callstack 0
  5130  003782                     _tolower:
  5131                           	callstack 23
  5132  003782  0EBF               	movlw	191
  5133  003784  6E10               	movwf	??_tolower^0,c
  5134  003786  0EFF               	movlw	255
  5135  003788  6E11               	movwf	(??_tolower+1)^0,c
  5136  00378A  C00E  F012         	movff	tolower@c,??_tolower+2
  5137  00378E  C00F  F013         	movff	tolower@c+1,??_tolower+3
  5138  003792  5010               	movf	??_tolower^0,w,c
  5139  003794  2612               	addwf	(??_tolower+2)^0,f,c
  5140  003796  5011               	movf	(??_tolower+1)^0,w,c
  5141  003798  2213               	addwfc	(??_tolower+3)^0,f,c
  5142  00379A  5013               	movf	(??_tolower+3)^0,w,c
  5143  00379C  E10A               	bnz	u4150
  5144  00379E  0E1A               	movlw	26
  5145  0037A0  5C12               	subwf	(??_tolower+2)^0,w,c
  5146  0037A2  A0D8               	btfss	status,0,c
  5147  0037A4  EFD6  F01B         	goto	u4151
  5148  0037A8  EFD9  F01B         	goto	u4150
  5149  0037AC                     u4151:
  5150  0037AC  0E01               	movlw	1
  5151  0037AE  EFDA  F01B         	goto	u4160
  5152  0037B2                     u4150:
  5153  0037B2  0E00               	movlw	0
  5154  0037B4                     u4160:
  5155  0037B4  6E14               	movwf	_tolower$1500^0,c
  5156  0037B6  6A15               	clrf	(_tolower$1500+1)^0,c
  5157  0037B8  5014               	movf	_tolower$1500^0,w,c
  5158  0037BA  1015               	iorwf	(_tolower$1500+1)^0,w,c
  5159  0037BC  B4D8               	btfsc	status,2,c
  5160  0037BE  EFE3  F01B         	goto	u4171
  5161  0037C2  EFE5  F01B         	goto	u4170
  5162  0037C6                     u4171:
  5163  0037C6  EFEC  F01B         	goto	l1146
  5164  0037CA                     u4170:
  5165  0037CA  0E20               	movlw	32
  5166  0037CC  100E               	iorwf	tolower@c^0,w,c
  5167  0037CE  6E0E               	movwf	?_tolower^0,c
  5168  0037D0  500F               	movf	(tolower@c+1)^0,w,c
  5169  0037D2  6E0F               	movwf	(?_tolower+1)^0,c
  5170  0037D4  EFF0  F01B         	goto	l1151
  5171  0037D8                     l1146:
  5172  0037D8  C00E  F00E         	movff	tolower@c,?_tolower
  5173  0037DC  C00F  F00F         	movff	tolower@c+1,?_tolower+1
  5174  0037E0                     l1151:
  5175  0037E0  0012               	return		;funcret
  5176  0037E2                     __end_of_tolower:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _isupper *****************
  5180 ;; Defined at:
  5181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  c               2    7[COMRAM] int 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  2    7[COMRAM] int 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5195 ;;      Params:         2       0       0       0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0
  5197 ;;      Temps:          4       0       0       0       0       0       0
  5198 ;;      Totals:         6       0       0       0       0       0       0
  5199 ;;Total ram usage:        6 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 3
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_efgtoa
  5206 ;;		_xtoa
  5207 ;;		_vfpfcnvrt
  5208 ;;		_tolower
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text14
  5213  003B3A                     __ptext14:
  5214                           	callstack 0
  5215  003B3A                     _isupper:
  5216                           	callstack 23
  5217  003B3A  0EBF               	movlw	191
  5218  003B3C  6E0A               	movwf	??_isupper^0,c
  5219  003B3E  0EFF               	movlw	255
  5220  003B40  6E0B               	movwf	(??_isupper+1)^0,c
  5221  003B42  C008  F00C         	movff	isupper@c,??_isupper+2
  5222  003B46  C009  F00D         	movff	isupper@c+1,??_isupper+3
  5223  003B4A  500A               	movf	??_isupper^0,w,c
  5224  003B4C  260C               	addwf	(??_isupper+2)^0,f,c
  5225  003B4E  500B               	movf	(??_isupper+1)^0,w,c
  5226  003B50  220D               	addwfc	(??_isupper+3)^0,f,c
  5227  003B52  500D               	movf	(??_isupper+3)^0,w,c
  5228  003B54  E10A               	bnz	u3280
  5229  003B56  0E1A               	movlw	26
  5230  003B58  5C0C               	subwf	(??_isupper+2)^0,w,c
  5231  003B5A  A0D8               	btfss	status,0,c
  5232  003B5C  EFB2  F01D         	goto	u3281
  5233  003B60  EFB5  F01D         	goto	u3280
  5234  003B64                     u3281:
  5235  003B64  0E01               	movlw	1
  5236  003B66  EFB6  F01D         	goto	u3290
  5237  003B6A                     u3280:
  5238  003B6A  0E00               	movlw	0
  5239  003B6C                     u3290:
  5240  003B6C  6E08               	movwf	?_isupper^0,c
  5241  003B6E  6A09               	clrf	(?_isupper+1)^0,c
  5242  003B70  0012               	return		;funcret
  5243  003B72                     __end_of_isupper:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _strcpy *****************
  5247 ;; Defined at:
  5248 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  dest            2    7[COMRAM] PTR unsigned char 
  5251 ;;		 -> dbuf(80), 
  5252 ;;  src             2    9[COMRAM] PTR const unsigned char 
  5253 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5254 ;;		 -> dbuf(80), 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  d               2   15[COMRAM] PTR unsigned char 
  5257 ;;		 -> dbuf(80), 
  5258 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5259 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5260 ;;		 -> dbuf(80), 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  2    7[COMRAM] PTR unsigned char 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5270 ;;      Params:         4       0       0       0       0       0       0
  5271 ;;      Locals:         4       0       0       0       0       0       0
  5272 ;;      Temps:          2       0       0       0       0       0       0
  5273 ;;      Totals:        10       0       0       0       0       0       0
  5274 ;;Total ram usage:       10 bytes
  5275 ;; Hardware stack levels used: 1
  5276 ;; Hardware stack levels required when called: 3
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_efgtoa
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text15
  5285  003840                     __ptext15:
  5286                           	callstack 0
  5287  003840                     _strcpy:
  5288                           	callstack 23
  5289  003840  C00A  F00E         	movff	strcpy@src,strcpy@s
  5290  003844  C00B  F00F         	movff	strcpy@src+1,strcpy@s+1
  5291  003848  C008  F010         	movff	strcpy@dest,strcpy@d
  5292  00384C  C009  F011         	movff	strcpy@dest+1,strcpy@d+1
  5293  003850                     l3559:
  5294  003850  500E               	movf	strcpy@s^0,w,c
  5295  003852  6E0C               	movwf	??_strcpy^0,c
  5296  003854  500F               	movf	(strcpy@s+1)^0,w,c
  5297  003856  6E0D               	movwf	(??_strcpy+1)^0,c
  5298  003858  4A0E               	infsnz	strcpy@s^0,f,c
  5299  00385A  2A0F               	incf	(strcpy@s+1)^0,f,c
  5300  00385C  C00C  FFF6         	movff	??_strcpy,tblptrl
  5301  003860  C00D  FFF7         	movff	??_strcpy+1,tblptrh
  5302  003864  6AF8               	clrf	tblptru,c
  5303  003866  C010  FFD9         	movff	strcpy@d,fsr2l
  5304  00386A  C011  FFDA         	movff	strcpy@d+1,fsr2h
  5305  00386E  4A10               	infsnz	strcpy@d^0,f,c
  5306  003870  2A11               	incf	(strcpy@d+1)^0,f,c
  5307  003872  0E05               	movlw	(high __ramtop+-1)
  5308  003874  64F7               	cpfsgt	tblptrh,c
  5309  003876  D003               	bra	u4137
  5310  003878  0008               	tblrd		*
  5311  00387A  50F5               	movf	tablat,w,c
  5312  00387C  D005               	bra	u4130
  5313  00387E                     u4137:
  5314  00387E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5315  003882  CFF7 FFE2          	movff	tblptrh,fsr1h
  5316  003886  50E7               	movf	indf1,w,c
  5317  003888                     u4130:
  5318  003888  6EDF               	movwf	indf2,c
  5319  00388A  50DF               	movf	indf2,w,c
  5320  00388C  A4D8               	btfss	status,2,c
  5321  00388E  EF4B  F01C         	goto	u4141
  5322  003892  EF4D  F01C         	goto	u4140
  5323  003896                     u4141:
  5324  003896  EF28  F01C         	goto	l3559
  5325  00389A                     u4140:
  5326  00389A  0012               	return		;funcret
  5327  00389C                     __end_of_strcpy:
  5328                           	callstack 0
  5329                           
  5330 ;; *************** function _pad *****************
  5331 ;; Defined at:
  5332 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  5335 ;;		 -> sprintf@f(6), 
  5336 ;;  buf             2   25[COMRAM] PTR unsigned char 
  5337 ;;		 -> dbuf(80), 
  5338 ;;  p               2   27[COMRAM] int 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  w               2   32[COMRAM] int 
  5341 ;;  i               2   30[COMRAM] int 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;                  2   23[COMRAM] int 
  5344 ;; Registers used:
  5345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5351 ;;      Params:         6       0       0       0       0       0       0
  5352 ;;      Locals:         4       0       0       0       0       0       0
  5353 ;;      Temps:          1       0       0       0       0       0       0
  5354 ;;      Totals:        11       0       0       0       0       0       0
  5355 ;;Total ram usage:       11 bytes
  5356 ;; Hardware stack levels used: 1
  5357 ;; Hardware stack levels required when called: 6
  5358 ;; This function calls:
  5359 ;;		_fputc
  5360 ;;		_fputs
  5361 ;;		_strlen
  5362 ;; This function is called by:
  5363 ;;		_efgtoa
  5364 ;;		_xtoa
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text16
  5369  003504                     __ptext16:
  5370                           	callstack 0
  5371  003504                     _pad:
  5372                           	callstack 20
  5373  003504                     
  5374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5375  003504  A072               	btfss	_flags^0,0,c
  5376  003506  EF87  F01A         	goto	u4021
  5377  00350A  EF89  F01A         	goto	u4020
  5378  00350E                     u4021:
  5379  00350E  EF93  F01A         	goto	l3517
  5380  003512                     u4020:
  5381  003512                     
  5382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5383  003512  C01A  F011         	movff	pad@buf,fputs@s
  5384  003516  C01B  F012         	movff	pad@buf+1,fputs@s+1
  5385  00351A  C018  F013         	movff	pad@fp,fputs@fp
  5386  00351E  C019  F014         	movff	pad@fp+1,fputs@fp+1
  5387  003522  ECE6  F01C         	call	_fputs	;wreg free
  5388  003526                     l3517:
  5389                           
  5390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5391  003526  BE1D               	btfsc	(pad@p+1)^0,7,c
  5392  003528  EF98  F01A         	goto	u4031
  5393  00352C  EF9A  F01A         	goto	u4030
  5394  003530                     u4031:
  5395  003530  EFA0  F01A         	goto	l3521
  5396  003534                     u4030:
  5397  003534  C01C  F021         	movff	pad@p,pad@w
  5398  003538  C01D  F022         	movff	pad@p+1,pad@w+1
  5399  00353C  EFA4  F01A         	goto	l832
  5400  003540                     l3521:
  5401  003540  0E00               	movlw	0
  5402  003542  6E22               	movwf	(pad@w+1)^0,c
  5403  003544  0E00               	movlw	0
  5404  003546  6E21               	movwf	pad@w^0,c
  5405  003548                     l832:
  5406                           
  5407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5408  003548  0E00               	movlw	0
  5409  00354A  6E20               	movwf	(pad@i+1)^0,c
  5410  00354C  0E00               	movlw	0
  5411  00354E  6E1F               	movwf	pad@i^0,c
  5412                           
  5413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5414  003550  EFB6  F01A         	goto	l3527
  5415  003554                     l3523:
  5416                           
  5417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5418  003554  0E00               	movlw	0
  5419  003556  6E09               	movwf	(fputc@c+1)^0,c
  5420  003558  0E20               	movlw	32
  5421  00355A  6E08               	movwf	fputc@c^0,c
  5422  00355C  C018  F00A         	movff	pad@fp,fputc@fp
  5423  003560  C019  F00B         	movff	pad@fp+1,fputc@fp+1
  5424  003564  ECBB  F019         	call	_fputc	;wreg free
  5425  003568                     
  5426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5427  003568  4A1F               	infsnz	pad@i^0,f,c
  5428  00356A  2A20               	incf	(pad@i+1)^0,f,c
  5429  00356C                     l3527:
  5430                           
  5431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5432  00356C  5021               	movf	pad@w^0,w,c
  5433  00356E  5C1F               	subwf	pad@i^0,w,c
  5434  003570  5020               	movf	(pad@i+1)^0,w,c
  5435  003572  0A80               	xorlw	128
  5436  003574  6E1E               	movwf	??_pad^0,c
  5437  003576  5022               	movf	(pad@w+1)^0,w,c
  5438  003578  0A80               	xorlw	128
  5439  00357A  581E               	subwfb	??_pad^0,w,c
  5440  00357C  A0D8               	btfss	status,0,c
  5441  00357E  EFC3  F01A         	goto	u4041
  5442  003582  EFC5  F01A         	goto	u4040
  5443  003586                     u4041:
  5444  003586  EFAA  F01A         	goto	l3523
  5445  00358A                     u4040:
  5446  00358A                     
  5447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5448  00358A  B072               	btfsc	_flags^0,0,c
  5449  00358C  EFCA  F01A         	goto	u4051
  5450  003590  EFCC  F01A         	goto	u4050
  5451  003594                     u4051:
  5452  003594  EFD6  F01A         	goto	l3531
  5453  003598                     u4050:
  5454  003598                     
  5455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5456  003598  C01A  F011         	movff	pad@buf,fputs@s
  5457  00359C  C01B  F012         	movff	pad@buf+1,fputs@s+1
  5458  0035A0  C018  F013         	movff	pad@fp,fputs@fp
  5459  0035A4  C019  F014         	movff	pad@fp+1,fputs@fp+1
  5460  0035A8  ECE6  F01C         	call	_fputs	;wreg free
  5461  0035AC                     l3531:
  5462                           
  5463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5464  0035AC  C01A  F008         	movff	pad@buf,strlen@s
  5465  0035B0  C01B  F009         	movff	pad@buf+1,strlen@s+1
  5466  0035B4  EC0C  F01E         	call	_strlen	;wreg free
  5467  0035B8  5021               	movf	pad@w^0,w,c
  5468  0035BA  2408               	addwf	?_strlen^0,w,c
  5469  0035BC  6E18               	movwf	?_pad^0,c
  5470  0035BE  5022               	movf	(pad@w+1)^0,w,c
  5471  0035C0  2009               	addwfc	(?_strlen+1)^0,w,c
  5472  0035C2  6E19               	movwf	(?_pad+1)^0,c
  5473  0035C4  0012               	return		;funcret
  5474  0035C6                     __end_of_pad:
  5475                           	callstack 0
  5476                           
  5477 ;; *************** function _strlen *****************
  5478 ;; Defined at:
  5479 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5482 ;;		 -> dbuf(80), 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  a               2    9[COMRAM] PTR const unsigned char 
  5485 ;;		 -> dbuf(80), 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  2    7[COMRAM] unsigned int 
  5488 ;; Registers used:
  5489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5495 ;;      Params:         2       0       0       0       0       0       0
  5496 ;;      Locals:         2       0       0       0       0       0       0
  5497 ;;      Temps:          0       0       0       0       0       0       0
  5498 ;;      Totals:         4       0       0       0       0       0       0
  5499 ;;Total ram usage:        4 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 3
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_pad
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text17
  5510  003C18                     __ptext17:
  5511                           	callstack 0
  5512  003C18                     _strlen:
  5513                           	callstack 22
  5514  003C18  C008  F00A         	movff	strlen@s,strlen@a
  5515  003C1C  C009  F00B         	movff	strlen@s+1,strlen@a+1
  5516  003C20  EF14  F01E         	goto	l3049
  5517  003C24                     l3047:
  5518  003C24  4A08               	infsnz	strlen@s^0,f,c
  5519  003C26  2A09               	incf	(strlen@s+1)^0,f,c
  5520  003C28                     l3049:
  5521  003C28  C008  FFD9         	movff	strlen@s,fsr2l
  5522  003C2C  C009  FFDA         	movff	strlen@s+1,fsr2h
  5523  003C30  50DF               	movf	indf2,w,c
  5524  003C32  A4D8               	btfss	status,2,c
  5525  003C34  EF1E  F01E         	goto	u3271
  5526  003C38  EF20  F01E         	goto	u3270
  5527  003C3C                     u3271:
  5528  003C3C  EF12  F01E         	goto	l3047
  5529  003C40                     u3270:
  5530  003C40  500A               	movf	strlen@a^0,w,c
  5531  003C42  5C08               	subwf	strlen@s^0,w,c
  5532  003C44  6E08               	movwf	?_strlen^0,c
  5533  003C46  500B               	movf	(strlen@a+1)^0,w,c
  5534  003C48  5809               	subwfb	(strlen@s+1)^0,w,c
  5535  003C4A  6E09               	movwf	(?_strlen+1)^0,c
  5536  003C4C  0012               	return		;funcret
  5537  003C4E                     __end_of_strlen:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _fputs *****************
  5541 ;; Defined at:
  5542 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  s               2   16[COMRAM] PTR const unsigned char 
  5545 ;;		 -> dbuf(80), 
  5546 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5547 ;;		 -> sprintf@f(6), 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;  i               2   21[COMRAM] int 
  5550 ;;  c               1   20[COMRAM] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  2   16[COMRAM] int 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5560 ;;      Params:         4       0       0       0       0       0       0
  5561 ;;      Locals:         3       0       0       0       0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0
  5563 ;;      Totals:         7       0       0       0       0       0       0
  5564 ;;Total ram usage:        7 bytes
  5565 ;; Hardware stack levels used: 1
  5566 ;; Hardware stack levels required when called: 5
  5567 ;; This function calls:
  5568 ;;		_fputc
  5569 ;; This function is called by:
  5570 ;;		_pad
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text18
  5575  0039CC                     __ptext18:
  5576                           	callstack 0
  5577  0039CC                     _fputs:
  5578                           	callstack 20
  5579  0039CC  0E00               	movlw	0
  5580  0039CE  6E17               	movwf	(fputs@i+1)^0,c
  5581  0039D0  0E00               	movlw	0
  5582  0039D2  6E16               	movwf	fputs@i^0,c
  5583  0039D4  EFF7  F01C         	goto	l3043
  5584  0039D8                     l3039:
  5585  0039D8  C015  F008         	movff	fputs@c,fputc@c
  5586  0039DC  6A09               	clrf	(fputc@c+1)^0,c
  5587  0039DE  C013  F00A         	movff	fputs@fp,fputc@fp
  5588  0039E2  C014  F00B         	movff	fputs@fp+1,fputc@fp+1
  5589  0039E6  ECBB  F019         	call	_fputc	;wreg free
  5590  0039EA  4A16               	infsnz	fputs@i^0,f,c
  5591  0039EC  2A17               	incf	(fputs@i+1)^0,f,c
  5592  0039EE                     l3043:
  5593  0039EE  5016               	movf	fputs@i^0,w,c
  5594  0039F0  2411               	addwf	fputs@s^0,w,c
  5595  0039F2  6ED9               	movwf	fsr2l,c
  5596  0039F4  5017               	movf	(fputs@i+1)^0,w,c
  5597  0039F6  2012               	addwfc	(fputs@s+1)^0,w,c
  5598  0039F8  6EDA               	movwf	fsr2h,c
  5599  0039FA  50DF               	movf	indf2,w,c
  5600  0039FC  6E15               	movwf	fputs@c^0,c
  5601  0039FE  5015               	movf	fputs@c^0,w,c
  5602  003A00  A4D8               	btfss	status,2,c
  5603  003A02  EF05  F01D         	goto	u3261
  5604  003A06  EF07  F01D         	goto	u3260
  5605  003A0A                     u3261:
  5606  003A0A  EFEC  F01C         	goto	l3039
  5607  003A0E                     u3260:
  5608  003A0E  0012               	return		;funcret
  5609  003A10                     __end_of_fputs:
  5610                           	callstack 0
  5611                           
  5612 ;; *************** function _fputc *****************
  5613 ;; Defined at:
  5614 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  c               2    7[COMRAM] int 
  5617 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5618 ;;		 -> sprintf@f(6), 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  2    7[COMRAM] int 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5630 ;;      Params:         4       0       0       0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0       0       0
  5632 ;;      Temps:          5       0       0       0       0       0       0
  5633 ;;      Totals:         9       0       0       0       0       0       0
  5634 ;;Total ram usage:        9 bytes
  5635 ;; Hardware stack levels used: 1
  5636 ;; Hardware stack levels required when called: 4
  5637 ;; This function calls:
  5638 ;;		_putch
  5639 ;; This function is called by:
  5640 ;;		_pad
  5641 ;;		_vfpfcnvrt
  5642 ;;		_fputs
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text19
  5647  003376                     __ptext19:
  5648                           	callstack 0
  5649  003376                     _fputc:
  5650                           	callstack 20
  5651  003376  500A               	movf	fputc@fp^0,w,c
  5652  003378  100B               	iorwf	(fputc@fp+1)^0,w,c
  5653  00337A  B4D8               	btfsc	status,2,c
  5654  00337C  EFC2  F019         	goto	u2831
  5655  003380  EFC4  F019         	goto	u2830
  5656  003384                     u2831:
  5657  003384  EFCD  F019         	goto	l2825
  5658  003388                     u2830:
  5659  003388  500A               	movf	fputc@fp^0,w,c
  5660  00338A  100B               	iorwf	(fputc@fp+1)^0,w,c
  5661  00338C  A4D8               	btfss	status,2,c
  5662  00338E  EFCB  F019         	goto	u2841
  5663  003392  EFCD  F019         	goto	u2840
  5664  003396                     u2841:
  5665  003396  EFD2  F019         	goto	l2827
  5666  00339A                     u2840:
  5667  00339A                     l2825:
  5668  00339A  5008               	movf	fputc@c^0,w,c
  5669  00339C  EC4B  F01E         	call	_putch
  5670  0033A0  EF1F  F01A         	goto	l1109
  5671  0033A4                     l2827:
  5672  0033A4  EE20 F004          	lfsr	2,4
  5673  0033A8  500A               	movf	fputc@fp^0,w,c
  5674  0033AA  26D9               	addwf	fsr2l,f,c
  5675  0033AC  500B               	movf	(fputc@fp+1)^0,w,c
  5676  0033AE  22DA               	addwfc	fsr2h,f,c
  5677  0033B0  50DE               	movf	postinc2,w,c
  5678  0033B2  10DE               	iorwf	postinc2,w,c
  5679  0033B4  B4D8               	btfsc	status,2,c
  5680  0033B6  EFDF  F019         	goto	u2851
  5681  0033BA  EFE1  F019         	goto	u2850
  5682  0033BE                     u2851:
  5683  0033BE  EFFC  F019         	goto	l2831
  5684  0033C2                     u2850:
  5685  0033C2  EE20 F004          	lfsr	2,4
  5686  0033C6  500A               	movf	fputc@fp^0,w,c
  5687  0033C8  26D9               	addwf	fsr2l,f,c
  5688  0033CA  500B               	movf	(fputc@fp+1)^0,w,c
  5689  0033CC  22DA               	addwfc	fsr2h,f,c
  5690  0033CE  EE10 F002          	lfsr	1,2
  5691  0033D2  500A               	movf	fputc@fp^0,w,c
  5692  0033D4  26E1               	addwf	fsr1l,f,c
  5693  0033D6  500B               	movf	(fputc@fp+1)^0,w,c
  5694  0033D8  22E2               	addwfc	fsr1h,f,c
  5695  0033DA  50DE               	movf	postinc2,w,c
  5696  0033DC  5CE6               	subwf	postinc1,w,c
  5697  0033DE  50E6               	movf	postinc1,w,c
  5698  0033E0  0A80               	xorlw	128
  5699  0033E2  6E10               	movwf	(??_fputc+4)^0,c
  5700  0033E4  50DE               	movf	postinc2,w,c
  5701  0033E6  0A80               	xorlw	128
  5702  0033E8  5810               	subwfb	(??_fputc+4)^0,w,c
  5703  0033EA  B0D8               	btfsc	status,0,c
  5704  0033EC  EFFA  F019         	goto	u2861
  5705  0033F0  EFFC  F019         	goto	u2860
  5706  0033F4                     u2861:
  5707  0033F4  EF1F  F01A         	goto	l1109
  5708  0033F8                     u2860:
  5709  0033F8                     l2831:
  5710  0033F8  EE20 F002          	lfsr	2,2
  5711  0033FC  500A               	movf	fputc@fp^0,w,c
  5712  0033FE  26D9               	addwf	fsr2l,f,c
  5713  003400  500B               	movf	(fputc@fp+1)^0,w,c
  5714  003402  22DA               	addwfc	fsr2h,f,c
  5715  003404  CFDE F00C          	movff	postinc2,??_fputc
  5716  003408  CFDD F00D          	movff	postdec2,??_fputc+1
  5717  00340C  C00A  FFD9         	movff	fputc@fp,fsr2l
  5718  003410  C00B  FFDA         	movff	fputc@fp+1,fsr2h
  5719  003414  CFDE F00E          	movff	postinc2,??_fputc+2
  5720  003418  CFDD F00F          	movff	postdec2,??_fputc+3
  5721  00341C  500C               	movf	??_fputc^0,w,c
  5722  00341E  240E               	addwf	(??_fputc+2)^0,w,c
  5723  003420  6ED9               	movwf	fsr2l,c
  5724  003422  500D               	movf	(??_fputc+1)^0,w,c
  5725  003424  200F               	addwfc	(??_fputc+3)^0,w,c
  5726  003426  6EDA               	movwf	fsr2h,c
  5727  003428  C008  FFDF         	movff	fputc@c,indf2
  5728  00342C  EE20 F002          	lfsr	2,2
  5729  003430  500A               	movf	fputc@fp^0,w,c
  5730  003432  26D9               	addwf	fsr2l,f,c
  5731  003434  500B               	movf	(fputc@fp+1)^0,w,c
  5732  003436  22DA               	addwfc	fsr2h,f,c
  5733  003438  2ADE               	incf	postinc2,f,c
  5734  00343A  0E00               	movlw	0
  5735  00343C  22DD               	addwfc	postdec2,f,c
  5736  00343E                     l1109:
  5737  00343E  0012               	return		;funcret
  5738  003440                     __end_of_fputc:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _putch *****************
  5742 ;; Defined at:
  5743 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  c               1    wreg     unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  c               1    0[COMRAM] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5757 ;;      Params:         0       0       0       0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0
  5760 ;;      Totals:         0       0       0       0       0       0       0
  5761 ;;Total ram usage:        0 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 3
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_fputc
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text20
  5772  003C96                     __ptext20:
  5773                           	callstack 0
  5774  003C96                     _putch:
  5775                           	callstack 20
  5776  003C96  0012               	return		;funcret
  5777  003C98                     __end_of_putch:
  5778                           	callstack 0
  5779                           
  5780 ;; *************** function _floorf *****************
  5781 ;; Defined at:
  5782 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  x               4   32[COMRAM] float 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  u               4   48[COMRAM] struct .
  5787 ;;  m               4   42[COMRAM] unsigned long 
  5788 ;;  e               2   46[COMRAM] int 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4   32[COMRAM] float 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5798 ;;      Params:         4       0       0       0       0       0       0
  5799 ;;      Locals:        10       0       0       0       0       0       0
  5800 ;;      Temps:          6       0       0       0       0       0       0
  5801 ;;      Totals:        20       0       0       0       0       0       0
  5802 ;;Total ram usage:       20 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; Hardware stack levels required when called: 3
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_efgtoa
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text21
  5813  0028E6                     __ptext21:
  5814                           	callstack 0
  5815  0028E6                     _floorf:
  5816                           	callstack 23
  5817  0028E6  C0D1  F031         	movff	floorf@F527,floorf@u
  5818  0028EA  C0D2  F032         	movff	floorf@F527+1,floorf@u+1
  5819  0028EE  C0D3  F033         	movff	floorf@F527+2,floorf@u+2
  5820  0028F2  C0D4  F034         	movff	floorf@F527+3,floorf@u+3
  5821  0028F6  C021  F031         	movff	floorf@x,floorf@u
  5822  0028FA  C022  F032         	movff	floorf@x+1,floorf@u+1
  5823  0028FE  C023  F033         	movff	floorf@x+2,floorf@u+2
  5824  002902  C024  F034         	movff	floorf@x+3,floorf@u+3
  5825  002906  0E81               	movlw	129
  5826  002908  6E25               	movwf	??_floorf^0,c
  5827  00290A  0EFF               	movlw	255
  5828  00290C  6E26               	movwf	(??_floorf+1)^0,c
  5829  00290E  C031  F027         	movff	floorf@u,??_floorf+2
  5830  002912  C032  F028         	movff	floorf@u+1,??_floorf+3
  5831  002916  C033  F029         	movff	floorf@u+2,??_floorf+4
  5832  00291A  C034  F02A         	movff	floorf@u+3,??_floorf+5
  5833  00291E  0E18               	movlw	24
  5834  002920  EF97  F014         	goto	u4180
  5835  002924                     u4185:
  5836  002924  90D8               	bcf	status,0,c
  5837  002926  322A               	rrcf	(??_floorf+5)^0,f,c
  5838  002928  3229               	rrcf	(??_floorf+4)^0,f,c
  5839  00292A  3228               	rrcf	(??_floorf+3)^0,f,c
  5840  00292C  3227               	rrcf	(??_floorf+2)^0,f,c
  5841  00292E                     u4180:
  5842  00292E  2EE8               	decfsz	wreg,f,c
  5843  002930  EF92  F014         	goto	u4185
  5844  002934  5027               	movf	(??_floorf+2)^0,w,c
  5845  002936  2425               	addwf	??_floorf^0,w,c
  5846  002938  6E2F               	movwf	floorf@e^0,c
  5847  00293A  0E00               	movlw	0
  5848  00293C  2026               	addwfc	(??_floorf+1)^0,w,c
  5849  00293E  6E30               	movwf	(floorf@e+1)^0,c
  5850  002940  BE30               	btfsc	(floorf@e+1)^0,7,c
  5851  002942  EFAC  F014         	goto	u4191
  5852  002946  5030               	movf	(floorf@e+1)^0,w,c
  5853  002948  E109               	bnz	u4190
  5854  00294A  0E17               	movlw	23
  5855  00294C  5C2F               	subwf	floorf@e^0,w,c
  5856  00294E  A0D8               	btfss	status,0,c
  5857  002950  EFAC  F014         	goto	u4191
  5858  002954  EFAE  F014         	goto	u4190
  5859  002958                     u4191:
  5860  002958  EFB8  F014         	goto	l3577
  5861  00295C                     u4190:
  5862  00295C                     l3575:
  5863  00295C  C021  F021         	movff	floorf@x,?_floorf
  5864  002960  C022  F022         	movff	floorf@x+1,?_floorf+1
  5865  002964  C023  F023         	movff	floorf@x+2,?_floorf+2
  5866  002968  C024  F024         	movff	floorf@x+3,?_floorf+3
  5867  00296C  EF7B  F015         	goto	l1064
  5868  002970                     l3577:
  5869  002970  BE30               	btfsc	(floorf@e+1)^0,7,c
  5870  002972  EFBD  F014         	goto	u4201
  5871  002976  EFBF  F014         	goto	u4200
  5872  00297A                     u4201:
  5873  00297A  EF2F  F015         	goto	l3587
  5874  00297E                     u4200:
  5875  00297E  C02F  F025         	movff	floorf@e,??_floorf
  5876  002982  0EFF               	movlw	255
  5877  002984  6E26               	movwf	(??_floorf+1)^0,c
  5878  002986  0EFF               	movlw	255
  5879  002988  6E27               	movwf	(??_floorf+2)^0,c
  5880  00298A  0E7F               	movlw	127
  5881  00298C  6E28               	movwf	(??_floorf+3)^0,c
  5882  00298E  0E00               	movlw	0
  5883  002990  6E29               	movwf	(??_floorf+4)^0,c
  5884  002992                     u4215:
  5885  002992  6625               	tstfsz	??_floorf^0,c
  5886  002994  EFCE  F014         	goto	u4216
  5887  002998  EFD6  F014         	goto	u4217
  5888  00299C                     u4216:
  5889  00299C  3429               	rlcf	(??_floorf+4)^0,w,c
  5890  00299E  3229               	rrcf	(??_floorf+4)^0,f,c
  5891  0029A0  3228               	rrcf	(??_floorf+3)^0,f,c
  5892  0029A2  3227               	rrcf	(??_floorf+2)^0,f,c
  5893  0029A4  3226               	rrcf	(??_floorf+1)^0,f,c
  5894  0029A6  2E25               	decfsz	??_floorf^0,f,c
  5895  0029A8  EFC9  F014         	goto	u4215
  5896  0029AC                     u4217:
  5897  0029AC  C026  F02B         	movff	??_floorf+1,floorf@m
  5898  0029B0  C027  F02C         	movff	??_floorf+2,floorf@m+1
  5899  0029B4  C028  F02D         	movff	??_floorf+3,floorf@m+2
  5900  0029B8  C029  F02E         	movff	??_floorf+4,floorf@m+3
  5901  0029BC  502B               	movf	floorf@m^0,w,c
  5902  0029BE  1431               	andwf	floorf@u^0,w,c
  5903  0029C0  6E25               	movwf	??_floorf^0,c
  5904  0029C2  502C               	movf	(floorf@m+1)^0,w,c
  5905  0029C4  1432               	andwf	(floorf@u+1)^0,w,c
  5906  0029C6  6E26               	movwf	(??_floorf+1)^0,c
  5907  0029C8  502D               	movf	(floorf@m+2)^0,w,c
  5908  0029CA  1433               	andwf	(floorf@u+2)^0,w,c
  5909  0029CC  6E27               	movwf	(??_floorf+2)^0,c
  5910  0029CE  502E               	movf	(floorf@m+3)^0,w,c
  5911  0029D0  1434               	andwf	(floorf@u+3)^0,w,c
  5912  0029D2  6E28               	movwf	(??_floorf+3)^0,c
  5913  0029D4  5025               	movf	??_floorf^0,w,c
  5914  0029D6  1026               	iorwf	(??_floorf+1)^0,w,c
  5915  0029D8  1027               	iorwf	(??_floorf+2)^0,w,c
  5916  0029DA  1028               	iorwf	(??_floorf+3)^0,w,c
  5917  0029DC  A4D8               	btfss	status,2,c
  5918  0029DE  EFF3  F014         	goto	u4221
  5919  0029E2  EFF5  F014         	goto	u4220
  5920  0029E6                     u4221:
  5921  0029E6  EFF7  F014         	goto	l3583
  5922  0029EA                     u4220:
  5923  0029EA  EFAE  F014         	goto	l3575
  5924  0029EE                     l3583:
  5925  0029EE  C031  F025         	movff	floorf@u,??_floorf
  5926  0029F2  C032  F026         	movff	floorf@u+1,??_floorf+1
  5927  0029F6  C033  F027         	movff	floorf@u+2,??_floorf+2
  5928  0029FA  C034  F028         	movff	floorf@u+3,??_floorf+3
  5929  0029FE  0E20               	movlw	32
  5930  002A00  EF07  F015         	goto	u4230
  5931  002A04                     u4235:
  5932  002A04  90D8               	bcf	status,0,c
  5933  002A06  3228               	rrcf	(??_floorf+3)^0,f,c
  5934  002A08  3227               	rrcf	(??_floorf+2)^0,f,c
  5935  002A0A  3226               	rrcf	(??_floorf+1)^0,f,c
  5936  002A0C  3225               	rrcf	??_floorf^0,f,c
  5937  002A0E                     u4230:
  5938  002A0E  2EE8               	decfsz	wreg,f,c
  5939  002A10  EF02  F015         	goto	u4235
  5940  002A14  5025               	movf	??_floorf^0,w,c
  5941  002A16  1026               	iorwf	(??_floorf+1)^0,w,c
  5942  002A18  1027               	iorwf	(??_floorf+2)^0,w,c
  5943  002A1A  1028               	iorwf	(??_floorf+3)^0,w,c
  5944  002A1C  B4D8               	btfsc	status,2,c
  5945  002A1E  EF13  F015         	goto	u4241
  5946  002A22  EF15  F015         	goto	u4240
  5947  002A26                     u4241:
  5948  002A26  EF1D  F015         	goto	l1067
  5949  002A2A                     u4240:
  5950  002A2A  502B               	movf	floorf@m^0,w,c
  5951  002A2C  2631               	addwf	floorf@u^0,f,c
  5952  002A2E  502C               	movf	(floorf@m+1)^0,w,c
  5953  002A30  2232               	addwfc	(floorf@u+1)^0,f,c
  5954  002A32  502D               	movf	(floorf@m+2)^0,w,c
  5955  002A34  2233               	addwfc	(floorf@u+2)^0,f,c
  5956  002A36  502E               	movf	(floorf@m+3)^0,w,c
  5957  002A38  2234               	addwfc	(floorf@u+3)^0,f,c
  5958  002A3A                     l1067:
  5959  002A3A  1C2B               	comf	floorf@m^0,w,c
  5960  002A3C  6E25               	movwf	??_floorf^0,c
  5961  002A3E  1C2C               	comf	(floorf@m+1)^0,w,c
  5962  002A40  6E26               	movwf	(??_floorf+1)^0,c
  5963  002A42  1C2D               	comf	(floorf@m+2)^0,w,c
  5964  002A44  6E27               	movwf	(??_floorf+2)^0,c
  5965  002A46  1C2E               	comf	(floorf@m+3)^0,w,c
  5966  002A48  6E28               	movwf	(??_floorf+3)^0,c
  5967  002A4A  5025               	movf	??_floorf^0,w,c
  5968  002A4C  1631               	andwf	floorf@u^0,f,c
  5969  002A4E  5026               	movf	(??_floorf+1)^0,w,c
  5970  002A50  1632               	andwf	(floorf@u+1)^0,f,c
  5971  002A52  5027               	movf	(??_floorf+2)^0,w,c
  5972  002A54  1633               	andwf	(floorf@u+2)^0,f,c
  5973  002A56  5028               	movf	(??_floorf+3)^0,w,c
  5974  002A58  1634               	andwf	(floorf@u+3)^0,f,c
  5975  002A5A  EF73  F015         	goto	l3595
  5976  002A5E                     l3587:
  5977  002A5E  C031  F025         	movff	floorf@u,??_floorf
  5978  002A62  C032  F026         	movff	floorf@u+1,??_floorf+1
  5979  002A66  C033  F027         	movff	floorf@u+2,??_floorf+2
  5980  002A6A  C034  F028         	movff	floorf@u+3,??_floorf+3
  5981  002A6E  0E20               	movlw	32
  5982  002A70  EF3F  F015         	goto	u4250
  5983  002A74                     u4255:
  5984  002A74  90D8               	bcf	status,0,c
  5985  002A76  3228               	rrcf	(??_floorf+3)^0,f,c
  5986  002A78  3227               	rrcf	(??_floorf+2)^0,f,c
  5987  002A7A  3226               	rrcf	(??_floorf+1)^0,f,c
  5988  002A7C  3225               	rrcf	??_floorf^0,f,c
  5989  002A7E                     u4250:
  5990  002A7E  2EE8               	decfsz	wreg,f,c
  5991  002A80  EF3A  F015         	goto	u4255
  5992  002A84  5025               	movf	??_floorf^0,w,c
  5993  002A86  1026               	iorwf	(??_floorf+1)^0,w,c
  5994  002A88  1027               	iorwf	(??_floorf+2)^0,w,c
  5995  002A8A  1028               	iorwf	(??_floorf+3)^0,w,c
  5996  002A8C  A4D8               	btfss	status,2,c
  5997  002A8E  EF4B  F015         	goto	u4261
  5998  002A92  EF4D  F015         	goto	u4260
  5999  002A96                     u4261:
  6000  002A96  EF57  F015         	goto	l3591
  6001  002A9A                     u4260:
  6002  002A9A  0E00               	movlw	0
  6003  002A9C  6E31               	movwf	floorf@u^0,c
  6004  002A9E  0E00               	movlw	0
  6005  002AA0  6E32               	movwf	(floorf@u+1)^0,c
  6006  002AA2  0E00               	movlw	0
  6007  002AA4  6E33               	movwf	(floorf@u+2)^0,c
  6008  002AA6  0E00               	movlw	0
  6009  002AA8  6E34               	movwf	(floorf@u+3)^0,c
  6010  002AAA  EF73  F015         	goto	l3595
  6011  002AAE                     l3591:
  6012  002AAE  90D8               	bcf	status,0,c
  6013  002AB0  3431               	rlcf	floorf@u^0,w,c
  6014  002AB2  6E25               	movwf	??_floorf^0,c
  6015  002AB4  3432               	rlcf	(floorf@u+1)^0,w,c
  6016  002AB6  6E26               	movwf	(??_floorf+1)^0,c
  6017  002AB8  3433               	rlcf	(floorf@u+2)^0,w,c
  6018  002ABA  6E27               	movwf	(??_floorf+2)^0,c
  6019  002ABC  3434               	rlcf	(floorf@u+3)^0,w,c
  6020  002ABE  6E28               	movwf	(??_floorf+3)^0,c
  6021  002AC0  5025               	movf	??_floorf^0,w,c
  6022  002AC2  1026               	iorwf	(??_floorf+1)^0,w,c
  6023  002AC4  1027               	iorwf	(??_floorf+2)^0,w,c
  6024  002AC6  1028               	iorwf	(??_floorf+3)^0,w,c
  6025  002AC8  B4D8               	btfsc	status,2,c
  6026  002ACA  EF69  F015         	goto	u4271
  6027  002ACE  EF6B  F015         	goto	u4270
  6028  002AD2                     u4271:
  6029  002AD2  EF73  F015         	goto	l3595
  6030  002AD6                     u4270:
  6031  002AD6  0E00               	movlw	0
  6032  002AD8  6E31               	movwf	floorf@u^0,c
  6033  002ADA  0E00               	movlw	0
  6034  002ADC  6E32               	movwf	(floorf@u+1)^0,c
  6035  002ADE  0E80               	movlw	128
  6036  002AE0  6E33               	movwf	(floorf@u+2)^0,c
  6037  002AE2  0EBF               	movlw	191
  6038  002AE4  6E34               	movwf	(floorf@u+3)^0,c
  6039  002AE6                     l3595:
  6040  002AE6  C031  F021         	movff	floorf@u,?_floorf
  6041  002AEA  C032  F022         	movff	floorf@u+1,?_floorf+1
  6042  002AEE  C033  F023         	movff	floorf@u+2,?_floorf+2
  6043  002AF2  C034  F024         	movff	floorf@u+3,?_floorf+3
  6044  002AF6                     l1064:
  6045  002AF6  0012               	return		;funcret
  6046  002AF8                     __end_of_floorf:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function ___fpclassifyf *****************
  6050 ;; Defined at:
  6051 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  x               4    7[COMRAM] float 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  u               4   17[COMRAM] struct .
  6056 ;;  e               2   15[COMRAM] int 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  2    7[COMRAM] int 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6066 ;;      Params:         4       0       0       0       0       0       0
  6067 ;;      Locals:         6       0       0       0       0       0       0
  6068 ;;      Temps:          4       0       0       0       0       0       0
  6069 ;;      Totals:        14       0       0       0       0       0       0
  6070 ;;Total ram usage:       14 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 3
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_efgtoa
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text22
  6081  0031A2                     __ptext22:
  6082                           	callstack 0
  6083  0031A2                     ___fpclassifyf:
  6084                           	callstack 23
  6085  0031A2  C0D5  F012         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6086  0031A6  C0D6  F013         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6087  0031AA  C0D7  F014         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6088  0031AE  C0D8  F015         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6089  0031B2  C008  F012         	movff	___fpclassifyf@x,___fpclassifyf@u
  6090  0031B6  C009  F013         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6091  0031BA  C00A  F014         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6092  0031BE  C00B  F015         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6093  0031C2  C012  F00C         	movff	___fpclassifyf@u,??___fpclassifyf
  6094  0031C6  C013  F00D         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6095  0031CA  C014  F00E         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6096  0031CE  C015  F00F         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6097  0031D2  0E18               	movlw	24
  6098  0031D4  EFF1  F018         	goto	u4060
  6099  0031D8                     u4065:
  6100  0031D8  90D8               	bcf	status,0,c
  6101  0031DA  320F               	rrcf	(??___fpclassifyf+3)^0,f,c
  6102  0031DC  320E               	rrcf	(??___fpclassifyf+2)^0,f,c
  6103  0031DE  320D               	rrcf	(??___fpclassifyf+1)^0,f,c
  6104  0031E0  320C               	rrcf	??___fpclassifyf^0,f,c
  6105  0031E2                     u4060:
  6106  0031E2  2EE8               	decfsz	wreg,f,c
  6107  0031E4  EFEC  F018         	goto	u4065
  6108  0031E8  500C               	movf	??___fpclassifyf^0,w,c
  6109  0031EA  6E10               	movwf	___fpclassifyf@e^0,c
  6110  0031EC  6A11               	clrf	(___fpclassifyf@e+1)^0,c
  6111  0031EE  5010               	movf	___fpclassifyf@e^0,w,c
  6112  0031F0  1011               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6113  0031F2  A4D8               	btfss	status,2,c
  6114  0031F4  EFFE  F018         	goto	u4071
  6115  0031F8  EF00  F019         	goto	u4070
  6116  0031FC                     u4071:
  6117  0031FC  EF20  F019         	goto	l3547
  6118  003200                     u4070:
  6119  003200  90D8               	bcf	status,0,c
  6120  003202  3412               	rlcf	___fpclassifyf@u^0,w,c
  6121  003204  6E0C               	movwf	??___fpclassifyf^0,c
  6122  003206  3413               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6123  003208  6E0D               	movwf	(??___fpclassifyf+1)^0,c
  6124  00320A  3414               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6125  00320C  6E0E               	movwf	(??___fpclassifyf+2)^0,c
  6126  00320E  3415               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6127  003210  6E0F               	movwf	(??___fpclassifyf+3)^0,c
  6128  003212  500C               	movf	??___fpclassifyf^0,w,c
  6129  003214  100D               	iorwf	(??___fpclassifyf+1)^0,w,c
  6130  003216  100E               	iorwf	(??___fpclassifyf+2)^0,w,c
  6131  003218  100F               	iorwf	(??___fpclassifyf+3)^0,w,c
  6132  00321A  A4D8               	btfss	status,2,c
  6133  00321C  EF12  F019         	goto	u4081
  6134  003220  EF14  F019         	goto	u4080
  6135  003224                     u4081:
  6136  003224  EF1A  F019         	goto	l3543
  6137  003228                     u4080:
  6138  003228  0E00               	movlw	0
  6139  00322A  6E09               	movwf	(?___fpclassifyf+1)^0,c
  6140  00322C  0E02               	movlw	2
  6141  00322E  6E08               	movwf	?___fpclassifyf^0,c
  6142  003230  EF4F  F019         	goto	l1026
  6143  003234                     l3543:
  6144  003234  0E00               	movlw	0
  6145  003236  6E09               	movwf	(?___fpclassifyf+1)^0,c
  6146  003238  0E03               	movlw	3
  6147  00323A  6E08               	movwf	?___fpclassifyf^0,c
  6148  00323C  EF4F  F019         	goto	l1026
  6149  003240                     l3547:
  6150  003240  2810               	incf	___fpclassifyf@e^0,w,c
  6151  003242  1011               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6152  003244  A4D8               	btfss	status,2,c
  6153  003246  EF27  F019         	goto	u4091
  6154  00324A  EF29  F019         	goto	u4090
  6155  00324E                     u4091:
  6156  00324E  EF4B  F019         	goto	l3553
  6157  003252                     u4090:
  6158  003252  C012  F00C         	movff	___fpclassifyf@u,??___fpclassifyf
  6159  003256  C013  F00D         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6160  00325A  C014  F00E         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6161  00325E  C015  F00F         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6162  003262  0E09               	movlw	9
  6163  003264                     u4105:
  6164  003264  90D8               	bcf	status,0,c
  6165  003266  360C               	rlcf	??___fpclassifyf^0,f,c
  6166  003268  360D               	rlcf	(??___fpclassifyf+1)^0,f,c
  6167  00326A  360E               	rlcf	(??___fpclassifyf+2)^0,f,c
  6168  00326C  360F               	rlcf	(??___fpclassifyf+3)^0,f,c
  6169  00326E  2EE8               	decfsz	wreg,f,c
  6170  003270  EF32  F019         	goto	u4105
  6171  003274  500C               	movf	??___fpclassifyf^0,w,c
  6172  003276  100D               	iorwf	(??___fpclassifyf+1)^0,w,c
  6173  003278  100E               	iorwf	(??___fpclassifyf+2)^0,w,c
  6174  00327A  100F               	iorwf	(??___fpclassifyf+3)^0,w,c
  6175  00327C  B4D8               	btfsc	status,2,c
  6176  00327E  EF43  F019         	goto	u4111
  6177  003282  EF46  F019         	goto	u4110
  6178  003286                     u4111:
  6179  003286  0E01               	movlw	1
  6180  003288  EF47  F019         	goto	u4120
  6181  00328C                     u4110:
  6182  00328C  0E00               	movlw	0
  6183  00328E                     u4120:
  6184  00328E  6E08               	movwf	?___fpclassifyf^0,c
  6185  003290  6A09               	clrf	(?___fpclassifyf+1)^0,c
  6186  003292  EF4F  F019         	goto	l1026
  6187  003296                     l3553:
  6188  003296  0E00               	movlw	0
  6189  003298  6E09               	movwf	(?___fpclassifyf+1)^0,c
  6190  00329A  0E04               	movlw	4
  6191  00329C  6E08               	movwf	?___fpclassifyf^0,c
  6192  00329E                     l1026:
  6193  00329E  0012               	return		;funcret
  6194  0032A0                     __end_of___fpclassifyf:
  6195                           	callstack 0
  6196                           
  6197 ;; *************** function ___fltol *****************
  6198 ;; Defined at:
  6199 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  f1              4    7[COMRAM] int 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  exp1            1   16[COMRAM] unsigned char 
  6204 ;;  sign1           1   15[COMRAM] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  4    7[COMRAM] long 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6214 ;;      Params:         4       0       0       0       0       0       0
  6215 ;;      Locals:         2       0       0       0       0       0       0
  6216 ;;      Temps:          4       0       0       0       0       0       0
  6217 ;;      Totals:        10       0       0       0       0       0       0
  6218 ;;Total ram usage:       10 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; Hardware stack levels required when called: 3
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		_efgtoa
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text23
  6229  002F98                     __ptext23:
  6230                           	callstack 0
  6231  002F98                     ___fltol:
  6232                           	callstack 23
  6233  002F98  340A               	rlcf	(___fltol@f1+2)^0,w,c
  6234  002F9A  340B               	rlcf	(___fltol@f1+3)^0,w,c
  6235  002F9C  6E11               	movwf	___fltol@exp1^0,c
  6236  002F9E  5011               	movf	___fltol@exp1^0,w,c
  6237  002FA0  A4D8               	btfss	status,2,c
  6238  002FA2  EFD5  F017         	goto	u3951
  6239  002FA6  EFD7  F017         	goto	u3950
  6240  002FAA                     u3951:
  6241  002FAA  EFE1  F017         	goto	l3475
  6242  002FAE                     u3950:
  6243  002FAE                     l3471:
  6244  002FAE  0E00               	movlw	0
  6245  002FB0  6E08               	movwf	?___fltol^0,c
  6246  002FB2  0E00               	movlw	0
  6247  002FB4  6E09               	movwf	(?___fltol+1)^0,c
  6248  002FB6  0E00               	movlw	0
  6249  002FB8  6E0A               	movwf	(?___fltol+2)^0,c
  6250  002FBA  0E00               	movlw	0
  6251  002FBC  6E0B               	movwf	(?___fltol+3)^0,c
  6252  002FBE  EF4E  F018         	goto	l406
  6253  002FC2                     l3475:
  6254  002FC2  C008  F00C         	movff	___fltol@f1,??___fltol
  6255  002FC6  C009  F00D         	movff	___fltol@f1+1,??___fltol+1
  6256  002FCA  C00A  F00E         	movff	___fltol@f1+2,??___fltol+2
  6257  002FCE  C00B  F00F         	movff	___fltol@f1+3,??___fltol+3
  6258  002FD2  0E20               	movlw	32
  6259  002FD4  EFF1  F017         	goto	u3960
  6260  002FD8                     u3965:
  6261  002FD8  90D8               	bcf	status,0,c
  6262  002FDA  320F               	rrcf	(??___fltol+3)^0,f,c
  6263  002FDC  320E               	rrcf	(??___fltol+2)^0,f,c
  6264  002FDE  320D               	rrcf	(??___fltol+1)^0,f,c
  6265  002FE0  320C               	rrcf	??___fltol^0,f,c
  6266  002FE2                     u3960:
  6267  002FE2  2EE8               	decfsz	wreg,f,c
  6268  002FE4  EFEC  F017         	goto	u3965
  6269  002FE8  500C               	movf	??___fltol^0,w,c
  6270  002FEA  6E10               	movwf	___fltol@sign1^0,c
  6271  002FEC  8E0A               	bsf	(___fltol@f1+2)^0,7,c
  6272  002FEE  0EFF               	movlw	255
  6273  002FF0  1608               	andwf	___fltol@f1^0,f,c
  6274  002FF2  0EFF               	movlw	255
  6275  002FF4  1609               	andwf	(___fltol@f1+1)^0,f,c
  6276  002FF6  0EFF               	movlw	255
  6277  002FF8  160A               	andwf	(___fltol@f1+2)^0,f,c
  6278  002FFA  0E00               	movlw	0
  6279  002FFC  160B               	andwf	(___fltol@f1+3)^0,f,c
  6280  002FFE  0E96               	movlw	150
  6281  003000  5E11               	subwf	___fltol@exp1^0,f,c
  6282  003002  BE11               	btfsc	___fltol@exp1^0,7,c
  6283  003004  EF08  F018         	goto	u3970
  6284  003008  EF06  F018         	goto	u3971
  6285  00300C                     u3971:
  6286  00300C  EF1E  F018         	goto	l3495
  6287  003010                     u3970:
  6288  003010  5011               	movf	___fltol@exp1^0,w,c
  6289  003012  0A80               	xorlw	128
  6290  003014  0F97               	addlw	151
  6291  003016  B0D8               	btfsc	status,0,c
  6292  003018  EF10  F018         	goto	u3981
  6293  00301C  EF12  F018         	goto	u3980
  6294  003020                     u3981:
  6295  003020  EF14  F018         	goto	l3491
  6296  003024                     u3980:
  6297  003024  EFD7  F017         	goto	l3471
  6298  003028                     l3491:
  6299  003028  90D8               	bcf	status,0,c
  6300  00302A  320B               	rrcf	(___fltol@f1+3)^0,f,c
  6301  00302C  320A               	rrcf	(___fltol@f1+2)^0,f,c
  6302  00302E  3209               	rrcf	(___fltol@f1+1)^0,f,c
  6303  003030  3208               	rrcf	___fltol@f1^0,f,c
  6304  003032  3E11               	incfsz	___fltol@exp1^0,f,c
  6305  003034  EF14  F018         	goto	l3491
  6306  003038  EF36  F018         	goto	l3505
  6307  00303C                     l3495:
  6308  00303C  0E1F               	movlw	31
  6309  00303E  6411               	cpfsgt	___fltol@exp1^0,c
  6310  003040  EF24  F018         	goto	u3991
  6311  003044  EF26  F018         	goto	u3990
  6312  003048                     u3991:
  6313  003048  EF2E  F018         	goto	l3503
  6314  00304C                     u3990:
  6315  00304C  EFD7  F017         	goto	l3471
  6316  003050                     l3501:
  6317  003050  90D8               	bcf	status,0,c
  6318  003052  3608               	rlcf	___fltol@f1^0,f,c
  6319  003054  3609               	rlcf	(___fltol@f1+1)^0,f,c
  6320  003056  360A               	rlcf	(___fltol@f1+2)^0,f,c
  6321  003058  360B               	rlcf	(___fltol@f1+3)^0,f,c
  6322  00305A  0611               	decf	___fltol@exp1^0,f,c
  6323  00305C                     l3503:
  6324  00305C  5011               	movf	___fltol@exp1^0,w,c
  6325  00305E  A4D8               	btfss	status,2,c
  6326  003060  EF34  F018         	goto	u4001
  6327  003064  EF36  F018         	goto	u4000
  6328  003068                     u4001:
  6329  003068  EF28  F018         	goto	l3501
  6330  00306C                     u4000:
  6331  00306C                     l3505:
  6332  00306C  5010               	movf	___fltol@sign1^0,w,c
  6333  00306E  B4D8               	btfsc	status,2,c
  6334  003070  EF3C  F018         	goto	u4011
  6335  003074  EF3E  F018         	goto	u4010
  6336  003078                     u4011:
  6337  003078  EF46  F018         	goto	l3509
  6338  00307C                     u4010:
  6339  00307C  1E0B               	comf	(___fltol@f1+3)^0,f,c
  6340  00307E  1E0A               	comf	(___fltol@f1+2)^0,f,c
  6341  003080  1E09               	comf	(___fltol@f1+1)^0,f,c
  6342  003082  6C08               	negf	___fltol@f1^0,c
  6343  003084  0E00               	movlw	0
  6344  003086  2209               	addwfc	(___fltol@f1+1)^0,f,c
  6345  003088  220A               	addwfc	(___fltol@f1+2)^0,f,c
  6346  00308A  220B               	addwfc	(___fltol@f1+3)^0,f,c
  6347  00308C                     l3509:
  6348  00308C  C008  F008         	movff	___fltol@f1,?___fltol
  6349  003090  C009  F009         	movff	___fltol@f1+1,?___fltol+1
  6350  003094  C00A  F00A         	movff	___fltol@f1+2,?___fltol+2
  6351  003098  C00B  F00B         	movff	___fltol@f1+3,?___fltol+3
  6352  00309C                     l406:
  6353  00309C  0012               	return		;funcret
  6354  00309E                     __end_of___fltol:
  6355                           	callstack 0
  6356                           
  6357 ;; *************** function ___flsub *****************
  6358 ;; Defined at:
  6359 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  b               4   46[COMRAM] long 
  6362 ;;  a               4   50[COMRAM] long 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  4   46[COMRAM] long 
  6367 ;; Registers used:
  6368 ;;		wreg, status,2, status,0, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6374 ;;      Params:         8       0       0       0       0       0       0
  6375 ;;      Locals:         0       0       0       0       0       0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0
  6377 ;;      Totals:         8       0       0       0       0       0       0
  6378 ;;Total ram usage:        8 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; Hardware stack levels required when called: 4
  6381 ;; This function calls:
  6382 ;;		___fladd
  6383 ;; This function is called by:
  6384 ;;		_efgtoa
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text24
  6389  003986                     __ptext24:
  6390                           	callstack 0
  6391  003986                     ___flsub:
  6392                           	callstack 22
  6393  003986  0E00               	movlw	0
  6394  003988  1A33               	xorwf	___flsub@a^0,f,c
  6395  00398A  0E00               	movlw	0
  6396  00398C  1A34               	xorwf	(___flsub@a+1)^0,f,c
  6397  00398E  0E00               	movlw	0
  6398  003990  1A35               	xorwf	(___flsub@a+2)^0,f,c
  6399  003992  0E80               	movlw	128
  6400  003994  1A36               	xorwf	(___flsub@a+3)^0,f,c
  6401  003996  C02F  F008         	movff	___flsub@b,___fladd@b
  6402  00399A  C030  F009         	movff	___flsub@b+1,___fladd@b+1
  6403  00399E  C031  F00A         	movff	___flsub@b+2,___fladd@b+2
  6404  0039A2  C032  F00B         	movff	___flsub@b+3,___fladd@b+3
  6405  0039A6  C033  F00C         	movff	___flsub@a,___fladd@a
  6406  0039AA  C034  F00D         	movff	___flsub@a+1,___fladd@a+1
  6407  0039AE  C035  F00E         	movff	___flsub@a+2,___fladd@a+2
  6408  0039B2  C036  F00F         	movff	___flsub@a+3,___fladd@a+3
  6409  0039B6  ECC7  F00C         	call	___fladd	;wreg free
  6410  0039BA  C008  F02F         	movff	?___fladd,?___flsub
  6411  0039BE  C009  F030         	movff	?___fladd+1,?___flsub+1
  6412  0039C2  C00A  F031         	movff	?___fladd+2,?___flsub+2
  6413  0039C6  C00B  F032         	movff	?___fladd+3,?___flsub+3
  6414  0039CA  0012               	return		;funcret
  6415  0039CC                     __end_of___flsub:
  6416                           	callstack 0
  6417                           
  6418 ;; *************** function ___fladd *****************
  6419 ;; Defined at:
  6420 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  b               4    7[COMRAM] long 
  6423 ;;  a               4   11[COMRAM] long 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  grs             1   22[COMRAM] unsigned char 
  6426 ;;  bexp            1   21[COMRAM] unsigned char 
  6427 ;;  aexp            1   20[COMRAM] unsigned char 
  6428 ;;  signs           1   19[COMRAM] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  4    7[COMRAM] unsigned char 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6438 ;;      Params:         8       0       0       0       0       0       0
  6439 ;;      Locals:         4       0       0       0       0       0       0
  6440 ;;      Temps:          4       0       0       0       0       0       0
  6441 ;;      Totals:        16       0       0       0       0       0       0
  6442 ;;Total ram usage:       16 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; Hardware stack levels required when called: 3
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		___flsub
  6449 ;;		_efgtoa
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text25
  6454  00198E                     __ptext25:
  6455                           	callstack 0
  6456  00198E                     ___fladd:
  6457                           	callstack 22
  6458  00198E  500B               	movf	(___fladd@b+3)^0,w,c
  6459  001990  0B80               	andlw	128
  6460  001992  6E14               	movwf	___fladd@signs^0,c
  6461  001994  500B               	movf	(___fladd@b+3)^0,w,c
  6462  001996  240B               	addwf	(___fladd@b+3)^0,w,c
  6463  001998  6E16               	movwf	___fladd@bexp^0,c
  6464  00199A  AE0A               	btfss	(___fladd@b+2)^0,7,c
  6465  00199C  EFD2  F00C         	goto	u2871
  6466  0019A0  EFD4  F00C         	goto	u2870
  6467  0019A4                     u2871:
  6468  0019A4  EFD5  F00C         	goto	l2841
  6469  0019A8                     u2870:
  6470  0019A8  8016               	bsf	___fladd@bexp^0,0,c
  6471  0019AA                     l2841:
  6472  0019AA  5016               	movf	___fladd@bexp^0,w,c
  6473  0019AC  B4D8               	btfsc	status,2,c
  6474  0019AE  EFDB  F00C         	goto	u2881
  6475  0019B2  EFDD  F00C         	goto	u2880
  6476  0019B6                     u2881:
  6477  0019B6  EFF2  F00C         	goto	l2851
  6478  0019BA                     u2880:
  6479  0019BA  2816               	incf	___fladd@bexp^0,w,c
  6480  0019BC  A4D8               	btfss	status,2,c
  6481  0019BE  EFE3  F00C         	goto	u2891
  6482  0019C2  EFE5  F00C         	goto	u2890
  6483  0019C6                     u2891:
  6484  0019C6  EFED  F00C         	goto	l2847
  6485  0019CA                     u2890:
  6486  0019CA  0E00               	movlw	0
  6487  0019CC  6E08               	movwf	___fladd@b^0,c
  6488  0019CE  0E00               	movlw	0
  6489  0019D0  6E09               	movwf	(___fladd@b+1)^0,c
  6490  0019D2  0E00               	movlw	0
  6491  0019D4  6E0A               	movwf	(___fladd@b+2)^0,c
  6492  0019D6  0E00               	movlw	0
  6493  0019D8  6E0B               	movwf	(___fladd@b+3)^0,c
  6494  0019DA                     l2847:
  6495  0019DA  8E0A               	bsf	(___fladd@b+2)^0,7,c
  6496  0019DC  0E00               	movlw	0
  6497  0019DE  6E0B               	movwf	(___fladd@b+3)^0,c
  6498  0019E0  EFFA  F00C         	goto	l2853
  6499  0019E4                     l2851:
  6500  0019E4  0E00               	movlw	0
  6501  0019E6  6E08               	movwf	___fladd@b^0,c
  6502  0019E8  0E00               	movlw	0
  6503  0019EA  6E09               	movwf	(___fladd@b+1)^0,c
  6504  0019EC  0E00               	movlw	0
  6505  0019EE  6E0A               	movwf	(___fladd@b+2)^0,c
  6506  0019F0  0E00               	movlw	0
  6507  0019F2  6E0B               	movwf	(___fladd@b+3)^0,c
  6508  0019F4                     l2853:
  6509  0019F4  500F               	movf	(___fladd@a+3)^0,w,c
  6510  0019F6  0B80               	andlw	128
  6511  0019F8  6E15               	movwf	___fladd@aexp^0,c
  6512  0019FA  5014               	movf	___fladd@signs^0,w,c
  6513  0019FC  1815               	xorwf	___fladd@aexp^0,w,c
  6514  0019FE  B4D8               	btfsc	status,2,c
  6515  001A00  EF04  F00D         	goto	u2901
  6516  001A04  EF06  F00D         	goto	u2900
  6517  001A08                     u2901:
  6518  001A08  EF07  F00D         	goto	l2859
  6519  001A0C                     u2900:
  6520  001A0C  8C14               	bsf	___fladd@signs^0,6,c
  6521  001A0E                     l2859:
  6522  001A0E  500F               	movf	(___fladd@a+3)^0,w,c
  6523  001A10  240F               	addwf	(___fladd@a+3)^0,w,c
  6524  001A12  6E15               	movwf	___fladd@aexp^0,c
  6525  001A14  AE0E               	btfss	(___fladd@a+2)^0,7,c
  6526  001A16  EF0F  F00D         	goto	u2911
  6527  001A1A  EF11  F00D         	goto	u2910
  6528  001A1E                     u2911:
  6529  001A1E  EF12  F00D         	goto	l2865
  6530  001A22                     u2910:
  6531  001A22  8015               	bsf	___fladd@aexp^0,0,c
  6532  001A24                     l2865:
  6533  001A24  5015               	movf	___fladd@aexp^0,w,c
  6534  001A26  B4D8               	btfsc	status,2,c
  6535  001A28  EF18  F00D         	goto	u2921
  6536  001A2C  EF1A  F00D         	goto	u2920
  6537  001A30                     u2921:
  6538  001A30  EF2F  F00D         	goto	l2875
  6539  001A34                     u2920:
  6540  001A34  2815               	incf	___fladd@aexp^0,w,c
  6541  001A36  A4D8               	btfss	status,2,c
  6542  001A38  EF20  F00D         	goto	u2931
  6543  001A3C  EF22  F00D         	goto	u2930
  6544  001A40                     u2931:
  6545  001A40  EF2A  F00D         	goto	l2871
  6546  001A44                     u2930:
  6547  001A44  0E00               	movlw	0
  6548  001A46  6E0C               	movwf	___fladd@a^0,c
  6549  001A48  0E00               	movlw	0
  6550  001A4A  6E0D               	movwf	(___fladd@a+1)^0,c
  6551  001A4C  0E00               	movlw	0
  6552  001A4E  6E0E               	movwf	(___fladd@a+2)^0,c
  6553  001A50  0E00               	movlw	0
  6554  001A52  6E0F               	movwf	(___fladd@a+3)^0,c
  6555  001A54                     l2871:
  6556  001A54  8E0E               	bsf	(___fladd@a+2)^0,7,c
  6557  001A56  0E00               	movlw	0
  6558  001A58  6E0F               	movwf	(___fladd@a+3)^0,c
  6559  001A5A  EF37  F00D         	goto	l2877
  6560  001A5E                     l2875:
  6561  001A5E  0E00               	movlw	0
  6562  001A60  6E0C               	movwf	___fladd@a^0,c
  6563  001A62  0E00               	movlw	0
  6564  001A64  6E0D               	movwf	(___fladd@a+1)^0,c
  6565  001A66  0E00               	movlw	0
  6566  001A68  6E0E               	movwf	(___fladd@a+2)^0,c
  6567  001A6A  0E00               	movlw	0
  6568  001A6C  6E0F               	movwf	(___fladd@a+3)^0,c
  6569  001A6E                     l2877:
  6570  001A6E  5016               	movf	___fladd@bexp^0,w,c
  6571  001A70  5C15               	subwf	___fladd@aexp^0,w,c
  6572  001A72  B0D8               	btfsc	status,0,c
  6573  001A74  EF3E  F00D         	goto	u2941
  6574  001A78  EF40  F00D         	goto	u2940
  6575  001A7C                     u2941:
  6576  001A7C  EF67  F00D         	goto	l2913
  6577  001A80                     u2940:
  6578  001A80  AC14               	btfss	___fladd@signs^0,6,c
  6579  001A82  EF45  F00D         	goto	u2951
  6580  001A86  EF47  F00D         	goto	u2950
  6581  001A8A                     u2951:
  6582  001A8A  EF49  F00D         	goto	l2883
  6583  001A8E                     u2950:
  6584  001A8E  0E80               	movlw	128
  6585  001A90  1A14               	xorwf	___fladd@signs^0,f,c
  6586  001A92                     l2883:
  6587  001A92  C016  F017         	movff	___fladd@bexp,___fladd@grs
  6588  001A96  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6589  001A9A  C017  F015         	movff	___fladd@grs,___fladd@aexp
  6590  001A9E  C008  F017         	movff	___fladd@b,___fladd@grs
  6591  001AA2  C00C  F008         	movff	___fladd@a,___fladd@b
  6592  001AA6  C017  F00C         	movff	___fladd@grs,___fladd@a
  6593  001AAA  C009  F017         	movff	___fladd@b+1,___fladd@grs
  6594  001AAE  C00D  F009         	movff	___fladd@a+1,___fladd@b+1
  6595  001AB2  C017  F00D         	movff	___fladd@grs,___fladd@a+1
  6596  001AB6  C00A  F017         	movff	___fladd@b+2,___fladd@grs
  6597  001ABA  C00E  F00A         	movff	___fladd@a+2,___fladd@b+2
  6598  001ABE  C017  F00E         	movff	___fladd@grs,___fladd@a+2
  6599  001AC2  C00B  F017         	movff	___fladd@b+3,___fladd@grs
  6600  001AC6  C00F  F00B         	movff	___fladd@a+3,___fladd@b+3
  6601  001ACA  C017  F00F         	movff	___fladd@grs,___fladd@a+3
  6602  001ACE                     l2913:
  6603  001ACE  0E00               	movlw	0
  6604  001AD0  6E17               	movwf	___fladd@grs^0,c
  6605  001AD2  5016               	movf	___fladd@bexp^0,w,c
  6606  001AD4  C015  F010         	movff	___fladd@aexp,??___fladd
  6607  001AD8  6A11               	clrf	(??___fladd+1)^0,c
  6608  001ADA  5E10               	subwf	??___fladd^0,f,c
  6609  001ADC  0E00               	movlw	0
  6610  001ADE  5A11               	subwfb	(??___fladd+1)^0,f,c
  6611  001AE0  BE11               	btfsc	(??___fladd+1)^0,7,c
  6612  001AE2  EF7C  F00D         	goto	u2961
  6613  001AE6  5011               	movf	(??___fladd+1)^0,w,c
  6614  001AE8  E109               	bnz	u2960
  6615  001AEA  0E1A               	movlw	26
  6616  001AEC  5C10               	subwf	??___fladd^0,w,c
  6617  001AEE  A0D8               	btfss	status,0,c
  6618  001AF0  EF7C  F00D         	goto	u2961
  6619  001AF4  EF7E  F00D         	goto	u2960
  6620  001AF8                     u2961:
  6621  001AF8  EFB5  F00D         	goto	l638
  6622  001AFC                     u2960:
  6623  001AFC  5008               	movf	___fladd@b^0,w,c
  6624  001AFE  1009               	iorwf	(___fladd@b+1)^0,w,c
  6625  001B00  100A               	iorwf	(___fladd@b+2)^0,w,c
  6626  001B02  100B               	iorwf	(___fladd@b+3)^0,w,c
  6627  001B04  A4D8               	btfss	status,2,c
  6628  001B06  EF87  F00D         	goto	u2971
  6629  001B0A  EF8A  F00D         	goto	u2970
  6630  001B0E                     u2971:
  6631  001B0E  0E01               	movlw	1
  6632  001B10  EF8B  F00D         	goto	u2980
  6633  001B14                     u2970:
  6634  001B14  0E00               	movlw	0
  6635  001B16                     u2980:
  6636  001B16  6E17               	movwf	___fladd@grs^0,c
  6637  001B18  0E00               	movlw	0
  6638  001B1A  6E08               	movwf	___fladd@b^0,c
  6639  001B1C  0E00               	movlw	0
  6640  001B1E  6E09               	movwf	(___fladd@b+1)^0,c
  6641  001B20  0E00               	movlw	0
  6642  001B22  6E0A               	movwf	(___fladd@b+2)^0,c
  6643  001B24  0E00               	movlw	0
  6644  001B26  6E0B               	movwf	(___fladd@b+3)^0,c
  6645  001B28  C015  F016         	movff	___fladd@aexp,___fladd@bexp
  6646  001B2C  EFBE  F00D         	goto	l637
  6647  001B30                     l639:
  6648  001B30  A017               	btfss	___fladd@grs^0,0,c
  6649  001B32  EF9D  F00D         	goto	u2991
  6650  001B36  EF9F  F00D         	goto	u2990
  6651  001B3A                     u2991:
  6652  001B3A  EFA5  F00D         	goto	l2925
  6653  001B3E                     u2990:
  6654  001B3E  90D8               	bcf	status,0,c
  6655  001B40  3017               	rrcf	___fladd@grs^0,w,c
  6656  001B42  0901               	iorlw	1
  6657  001B44  6E17               	movwf	___fladd@grs^0,c
  6658  001B46  EFA7  F00D         	goto	l2927
  6659  001B4A                     l2925:
  6660  001B4A  90D8               	bcf	status,0,c
  6661  001B4C  3217               	rrcf	___fladd@grs^0,f,c
  6662  001B4E                     l2927:
  6663  001B4E  A008               	btfss	___fladd@b^0,0,c
  6664  001B50  EFAC  F00D         	goto	u3001
  6665  001B54  EFAE  F00D         	goto	u3000
  6666  001B58                     u3001:
  6667  001B58  EFAF  F00D         	goto	l2931
  6668  001B5C                     u3000:
  6669  001B5C  8E17               	bsf	___fladd@grs^0,7,c
  6670  001B5E                     l2931:
  6671  001B5E  340B               	rlcf	(___fladd@b+3)^0,w,c
  6672  001B60  320B               	rrcf	(___fladd@b+3)^0,f,c
  6673  001B62  320A               	rrcf	(___fladd@b+2)^0,f,c
  6674  001B64  3209               	rrcf	(___fladd@b+1)^0,f,c
  6675  001B66  3208               	rrcf	___fladd@b^0,f,c
  6676  001B68  2A16               	incf	___fladd@bexp^0,f,c
  6677  001B6A                     l638:
  6678  001B6A  5015               	movf	___fladd@aexp^0,w,c
  6679  001B6C  5C16               	subwf	___fladd@bexp^0,w,c
  6680  001B6E  A0D8               	btfss	status,0,c
  6681  001B70  EFBC  F00D         	goto	u3011
  6682  001B74  EFBE  F00D         	goto	u3010
  6683  001B78                     u3011:
  6684  001B78  EF98  F00D         	goto	l639
  6685  001B7C                     u3010:
  6686  001B7C                     l637:
  6687  001B7C  BC14               	btfsc	___fladd@signs^0,6,c
  6688  001B7E  EFC3  F00D         	goto	u3021
  6689  001B82  EFC5  F00D         	goto	u3020
  6690  001B86                     u3021:
  6691  001B86  EF05  F00E         	goto	l2959
  6692  001B8A                     u3020:
  6693  001B8A  5016               	movf	___fladd@bexp^0,w,c
  6694  001B8C  A4D8               	btfss	status,2,c
  6695  001B8E  EFCB  F00D         	goto	u3031
  6696  001B92  EFCD  F00D         	goto	u3030
  6697  001B96                     u3031:
  6698  001B96  EFD7  F00D         	goto	l2941
  6699  001B9A                     u3030:
  6700  001B9A  0E00               	movlw	0
  6701  001B9C  6E08               	movwf	?___fladd^0,c
  6702  001B9E  0E00               	movlw	0
  6703  001BA0  6E09               	movwf	(?___fladd+1)^0,c
  6704  001BA2  0E00               	movlw	0
  6705  001BA4  6E0A               	movwf	(?___fladd+2)^0,c
  6706  001BA6  0E00               	movlw	0
  6707  001BA8  6E0B               	movwf	(?___fladd+3)^0,c
  6708  001BAA  EF26  F00F         	goto	l646
  6709  001BAE                     l2941:
  6710  001BAE  500C               	movf	___fladd@a^0,w,c
  6711  001BB0  2608               	addwf	___fladd@b^0,f,c
  6712  001BB2  500D               	movf	(___fladd@a+1)^0,w,c
  6713  001BB4  2209               	addwfc	(___fladd@b+1)^0,f,c
  6714  001BB6  500E               	movf	(___fladd@a+2)^0,w,c
  6715  001BB8  220A               	addwfc	(___fladd@b+2)^0,f,c
  6716  001BBA  500F               	movf	(___fladd@a+3)^0,w,c
  6717  001BBC  220B               	addwfc	(___fladd@b+3)^0,f,c
  6718  001BBE  A00B               	btfss	(___fladd@b+3)^0,0,c
  6719  001BC0  EFE4  F00D         	goto	u3041
  6720  001BC4  EFE6  F00D         	goto	u3040
  6721  001BC8                     u3041:
  6722  001BC8  EF92  F00E         	goto	l2995
  6723  001BCC                     u3040:
  6724  001BCC  A017               	btfss	___fladd@grs^0,0,c
  6725  001BCE  EFEB  F00D         	goto	u3051
  6726  001BD2  EFED  F00D         	goto	u3050
  6727  001BD6                     u3051:
  6728  001BD6  EFF3  F00D         	goto	l2949
  6729  001BDA                     u3050:
  6730  001BDA  90D8               	bcf	status,0,c
  6731  001BDC  3017               	rrcf	___fladd@grs^0,w,c
  6732  001BDE  0901               	iorlw	1
  6733  001BE0  6E17               	movwf	___fladd@grs^0,c
  6734  001BE2  EFF5  F00D         	goto	l2951
  6735  001BE6                     l2949:
  6736  001BE6  90D8               	bcf	status,0,c
  6737  001BE8  3217               	rrcf	___fladd@grs^0,f,c
  6738  001BEA                     l2951:
  6739  001BEA  A008               	btfss	___fladd@b^0,0,c
  6740  001BEC  EFFA  F00D         	goto	u3061
  6741  001BF0  EFFC  F00D         	goto	u3060
  6742  001BF4                     u3061:
  6743  001BF4  EFFD  F00D         	goto	l2955
  6744  001BF8                     u3060:
  6745  001BF8  8E17               	bsf	___fladd@grs^0,7,c
  6746  001BFA                     l2955:
  6747  001BFA  340B               	rlcf	(___fladd@b+3)^0,w,c
  6748  001BFC  320B               	rrcf	(___fladd@b+3)^0,f,c
  6749  001BFE  320A               	rrcf	(___fladd@b+2)^0,f,c
  6750  001C00  3209               	rrcf	(___fladd@b+1)^0,f,c
  6751  001C02  3208               	rrcf	___fladd@b^0,f,c
  6752  001C04  2A16               	incf	___fladd@bexp^0,f,c
  6753  001C06  EF92  F00E         	goto	l2995
  6754  001C0A                     l2959:
  6755  001C0A  500C               	movf	___fladd@a^0,w,c
  6756  001C0C  5C08               	subwf	___fladd@b^0,w,c
  6757  001C0E  500D               	movf	(___fladd@a+1)^0,w,c
  6758  001C10  5809               	subwfb	(___fladd@b+1)^0,w,c
  6759  001C12  500E               	movf	(___fladd@a+2)^0,w,c
  6760  001C14  580A               	subwfb	(___fladd@b+2)^0,w,c
  6761  001C16  500B               	movf	(___fladd@b+3)^0,w,c
  6762  001C18  0A80               	xorlw	128
  6763  001C1A  6E10               	movwf	??___fladd^0,c
  6764  001C1C  500F               	movf	(___fladd@a+3)^0,w,c
  6765  001C1E  0A80               	xorlw	128
  6766  001C20  5810               	subwfb	??___fladd^0,w,c
  6767  001C22  B0D8               	btfsc	status,0,c
  6768  001C24  EF16  F00E         	goto	u3071
  6769  001C28  EF18  F00E         	goto	u3070
  6770  001C2C                     u3071:
  6771  001C2C  EF43  F00E         	goto	l2969
  6772  001C30                     u3070:
  6773  001C30  5008               	movf	___fladd@b^0,w,c
  6774  001C32  5C0C               	subwf	___fladd@a^0,w,c
  6775  001C34  6E10               	movwf	??___fladd^0,c
  6776  001C36  5009               	movf	(___fladd@b+1)^0,w,c
  6777  001C38  580D               	subwfb	(___fladd@a+1)^0,w,c
  6778  001C3A  6E11               	movwf	(??___fladd+1)^0,c
  6779  001C3C  500A               	movf	(___fladd@b+2)^0,w,c
  6780  001C3E  580E               	subwfb	(___fladd@a+2)^0,w,c
  6781  001C40  6E12               	movwf	(??___fladd+2)^0,c
  6782  001C42  500B               	movf	(___fladd@b+3)^0,w,c
  6783  001C44  580F               	subwfb	(___fladd@a+3)^0,w,c
  6784  001C46  6E13               	movwf	(??___fladd+3)^0,c
  6785  001C48  0EFF               	movlw	255
  6786  001C4A  2410               	addwf	??___fladd^0,w,c
  6787  001C4C  6E08               	movwf	___fladd@b^0,c
  6788  001C4E  0EFF               	movlw	255
  6789  001C50  2011               	addwfc	(??___fladd+1)^0,w,c
  6790  001C52  6E09               	movwf	(___fladd@b+1)^0,c
  6791  001C54  0EFF               	movlw	255
  6792  001C56  2012               	addwfc	(??___fladd+2)^0,w,c
  6793  001C58  6E0A               	movwf	(___fladd@b+2)^0,c
  6794  001C5A  0EFF               	movlw	255
  6795  001C5C  2013               	addwfc	(??___fladd+3)^0,w,c
  6796  001C5E  6E0B               	movwf	(___fladd@b+3)^0,c
  6797  001C60  0E80               	movlw	128
  6798  001C62  1A14               	xorwf	___fladd@signs^0,f,c
  6799  001C64  6C17               	negf	___fladd@grs^0,c
  6800  001C66  5017               	movf	___fladd@grs^0,w,c
  6801  001C68  A4D8               	btfss	status,2,c
  6802  001C6A  EF39  F00E         	goto	u3081
  6803  001C6E  EF3B  F00E         	goto	u3080
  6804  001C72                     u3081:
  6805  001C72  EF4B  F00E         	goto	l654
  6806  001C76                     u3080:
  6807  001C76  0E01               	movlw	1
  6808  001C78  2608               	addwf	___fladd@b^0,f,c
  6809  001C7A  0E00               	movlw	0
  6810  001C7C  2209               	addwfc	(___fladd@b+1)^0,f,c
  6811  001C7E  220A               	addwfc	(___fladd@b+2)^0,f,c
  6812  001C80  220B               	addwfc	(___fladd@b+3)^0,f,c
  6813  001C82  EF4B  F00E         	goto	l654
  6814  001C86                     l2969:
  6815  001C86  500C               	movf	___fladd@a^0,w,c
  6816  001C88  5E08               	subwf	___fladd@b^0,f,c
  6817  001C8A  500D               	movf	(___fladd@a+1)^0,w,c
  6818  001C8C  5A09               	subwfb	(___fladd@b+1)^0,f,c
  6819  001C8E  500E               	movf	(___fladd@a+2)^0,w,c
  6820  001C90  5A0A               	subwfb	(___fladd@b+2)^0,f,c
  6821  001C92  500F               	movf	(___fladd@a+3)^0,w,c
  6822  001C94  5A0B               	subwfb	(___fladd@b+3)^0,f,c
  6823  001C96                     l654:
  6824  001C96  5008               	movf	___fladd@b^0,w,c
  6825  001C98  1009               	iorwf	(___fladd@b+1)^0,w,c
  6826  001C9A  100A               	iorwf	(___fladd@b+2)^0,w,c
  6827  001C9C  100B               	iorwf	(___fladd@b+3)^0,w,c
  6828  001C9E  A4D8               	btfss	status,2,c
  6829  001CA0  EF54  F00E         	goto	u3091
  6830  001CA4  EF56  F00E         	goto	u3090
  6831  001CA8                     u3091:
  6832  001CA8  EF8B  F00E         	goto	l2993
  6833  001CAC                     u3090:
  6834  001CAC  5017               	movf	___fladd@grs^0,w,c
  6835  001CAE  A4D8               	btfss	status,2,c
  6836  001CB0  EF5C  F00E         	goto	u3101
  6837  001CB4  EF5E  F00E         	goto	u3100
  6838  001CB8                     u3101:
  6839  001CB8  EF8B  F00E         	goto	l2993
  6840  001CBC                     u3100:
  6841  001CBC  0E00               	movlw	0
  6842  001CBE  6E08               	movwf	?___fladd^0,c
  6843  001CC0  0E00               	movlw	0
  6844  001CC2  6E09               	movwf	(?___fladd+1)^0,c
  6845  001CC4  0E00               	movlw	0
  6846  001CC6  6E0A               	movwf	(?___fladd+2)^0,c
  6847  001CC8  0E00               	movlw	0
  6848  001CCA  6E0B               	movwf	(?___fladd+3)^0,c
  6849  001CCC  EF26  F00F         	goto	l646
  6850  001CD0                     l2977:
  6851  001CD0  90D8               	bcf	status,0,c
  6852  001CD2  3608               	rlcf	___fladd@b^0,f,c
  6853  001CD4  3609               	rlcf	(___fladd@b+1)^0,f,c
  6854  001CD6  360A               	rlcf	(___fladd@b+2)^0,f,c
  6855  001CD8  360B               	rlcf	(___fladd@b+3)^0,f,c
  6856  001CDA  AE17               	btfss	___fladd@grs^0,7,c
  6857  001CDC  EF72  F00E         	goto	u3111
  6858  001CE0  EF74  F00E         	goto	u3110
  6859  001CE4                     u3111:
  6860  001CE4  EF75  F00E         	goto	l2983
  6861  001CE8                     u3110:
  6862  001CE8  8008               	bsf	___fladd@b^0,0,c
  6863  001CEA                     l2983:
  6864  001CEA  A017               	btfss	___fladd@grs^0,0,c
  6865  001CEC  EF7A  F00E         	goto	u3121
  6866  001CF0  EF7C  F00E         	goto	u3120
  6867  001CF4                     u3121:
  6868  001CF4  EF80  F00E         	goto	l2987
  6869  001CF8                     u3120:
  6870  001CF8  80D8               	bsf	status,0,c
  6871  001CFA  3617               	rlcf	___fladd@grs^0,f,c
  6872  001CFC  EF82  F00E         	goto	l2989
  6873  001D00                     l2987:
  6874  001D00  90D8               	bcf	status,0,c
  6875  001D02  3617               	rlcf	___fladd@grs^0,f,c
  6876  001D04                     l2989:
  6877  001D04  5016               	movf	___fladd@bexp^0,w,c
  6878  001D06  B4D8               	btfsc	status,2,c
  6879  001D08  EF88  F00E         	goto	u3131
  6880  001D0C  EF8A  F00E         	goto	u3130
  6881  001D10                     u3131:
  6882  001D10  EF8B  F00E         	goto	l2993
  6883  001D14                     u3130:
  6884  001D14  0616               	decf	___fladd@bexp^0,f,c
  6885  001D16                     l2993:
  6886  001D16  AE0A               	btfss	(___fladd@b+2)^0,7,c
  6887  001D18  EF90  F00E         	goto	u3141
  6888  001D1C  EF92  F00E         	goto	u3140
  6889  001D20                     u3141:
  6890  001D20  EF68  F00E         	goto	l2977
  6891  001D24                     u3140:
  6892  001D24                     l2995:
  6893  001D24  0E00               	movlw	0
  6894  001D26  6E15               	movwf	___fladd@aexp^0,c
  6895  001D28  AE17               	btfss	___fladd@grs^0,7,c
  6896  001D2A  EF99  F00E         	goto	u3151
  6897  001D2E  EF9B  F00E         	goto	u3150
  6898  001D32                     u3151:
  6899  001D32  EFB3  F00E         	goto	l663
  6900  001D36                     u3150:
  6901  001D36  C017  F010         	movff	___fladd@grs,??___fladd
  6902  001D3A  0E7F               	movlw	127
  6903  001D3C  1610               	andwf	??___fladd^0,f,c
  6904  001D3E  B4D8               	btfsc	status,2,c
  6905  001D40  EFA4  F00E         	goto	u3161
  6906  001D44  EFA6  F00E         	goto	u3160
  6907  001D48                     u3161:
  6908  001D48  EFAA  F00E         	goto	l664
  6909  001D4C                     u3160:
  6910  001D4C                     l3001:
  6911  001D4C  0E01               	movlw	1
  6912  001D4E  6E15               	movwf	___fladd@aexp^0,c
  6913  001D50  EFB3  F00E         	goto	l663
  6914  001D54                     l664:
  6915  001D54  A008               	btfss	___fladd@b^0,0,c
  6916  001D56  EFAF  F00E         	goto	u3171
  6917  001D5A  EFB1  F00E         	goto	u3170
  6918  001D5E                     u3171:
  6919  001D5E  EFB3  F00E         	goto	l663
  6920  001D62                     u3170:
  6921  001D62  EFA6  F00E         	goto	l3001
  6922  001D66                     l663:
  6923  001D66  5015               	movf	___fladd@aexp^0,w,c
  6924  001D68  B4D8               	btfsc	status,2,c
  6925  001D6A  EFB9  F00E         	goto	u3181
  6926  001D6E  EFBB  F00E         	goto	u3180
  6927  001D72                     u3181:
  6928  001D72  EFE6  F00E         	goto	l3013
  6929  001D76                     u3180:
  6930  001D76  0E01               	movlw	1
  6931  001D78  2608               	addwf	___fladd@b^0,f,c
  6932  001D7A  0E00               	movlw	0
  6933  001D7C  2209               	addwfc	(___fladd@b+1)^0,f,c
  6934  001D7E  220A               	addwfc	(___fladd@b+2)^0,f,c
  6935  001D80  220B               	addwfc	(___fladd@b+3)^0,f,c
  6936  001D82  A00B               	btfss	(___fladd@b+3)^0,0,c
  6937  001D84  EFC6  F00E         	goto	u3191
  6938  001D88  EFC8  F00E         	goto	u3190
  6939  001D8C                     u3191:
  6940  001D8C  EFE6  F00E         	goto	l3013
  6941  001D90                     u3190:
  6942  001D90  C008  F010         	movff	___fladd@b,??___fladd
  6943  001D94  C009  F011         	movff	___fladd@b+1,??___fladd+1
  6944  001D98  C00A  F012         	movff	___fladd@b+2,??___fladd+2
  6945  001D9C  C00B  F013         	movff	___fladd@b+3,??___fladd+3
  6946  001DA0  3413               	rlcf	(??___fladd+3)^0,w,c
  6947  001DA2  3213               	rrcf	(??___fladd+3)^0,f,c
  6948  001DA4  3212               	rrcf	(??___fladd+2)^0,f,c
  6949  001DA6  3211               	rrcf	(??___fladd+1)^0,f,c
  6950  001DA8  3210               	rrcf	??___fladd^0,f,c
  6951  001DAA  C010  F008         	movff	??___fladd,___fladd@b
  6952  001DAE  C011  F009         	movff	??___fladd+1,___fladd@b+1
  6953  001DB2  C012  F00A         	movff	??___fladd+2,___fladd@b+2
  6954  001DB6  C013  F00B         	movff	??___fladd+3,___fladd@b+3
  6955  001DBA  2816               	incf	___fladd@bexp^0,w,c
  6956  001DBC  B4D8               	btfsc	status,2,c
  6957  001DBE  EFE3  F00E         	goto	u3201
  6958  001DC2  EFE5  F00E         	goto	u3200
  6959  001DC6                     u3201:
  6960  001DC6  EFE6  F00E         	goto	l3013
  6961  001DCA                     u3200:
  6962  001DCA  2A16               	incf	___fladd@bexp^0,f,c
  6963  001DCC                     l3013:
  6964  001DCC  2816               	incf	___fladd@bexp^0,w,c
  6965  001DCE  B4D8               	btfsc	status,2,c
  6966  001DD0  EFEC  F00E         	goto	u3211
  6967  001DD4  EFEE  F00E         	goto	u3210
  6968  001DD8                     u3211:
  6969  001DD8  EFF6  F00E         	goto	l3017
  6970  001DDC                     u3210:
  6971  001DDC  5016               	movf	___fladd@bexp^0,w,c
  6972  001DDE  A4D8               	btfss	status,2,c
  6973  001DE0  EFF4  F00E         	goto	u3221
  6974  001DE4  EFF6  F00E         	goto	u3220
  6975  001DE8                     u3221:
  6976  001DE8  EF08  F00F         	goto	l3021
  6977  001DEC                     u3220:
  6978  001DEC                     l3017:
  6979  001DEC  0E00               	movlw	0
  6980  001DEE  6E08               	movwf	___fladd@b^0,c
  6981  001DF0  0E00               	movlw	0
  6982  001DF2  6E09               	movwf	(___fladd@b+1)^0,c
  6983  001DF4  0E00               	movlw	0
  6984  001DF6  6E0A               	movwf	(___fladd@b+2)^0,c
  6985  001DF8  0E00               	movlw	0
  6986  001DFA  6E0B               	movwf	(___fladd@b+3)^0,c
  6987  001DFC  5016               	movf	___fladd@bexp^0,w,c
  6988  001DFE  A4D8               	btfss	status,2,c
  6989  001E00  EF04  F00F         	goto	u3231
  6990  001E04  EF06  F00F         	goto	u3230
  6991  001E08                     u3231:
  6992  001E08  EF08  F00F         	goto	l3021
  6993  001E0C                     u3230:
  6994  001E0C  0E00               	movlw	0
  6995  001E0E  6E14               	movwf	___fladd@signs^0,c
  6996  001E10                     l3021:
  6997  001E10  A016               	btfss	___fladd@bexp^0,0,c
  6998  001E12  EF0D  F00F         	goto	u3241
  6999  001E16  EF0F  F00F         	goto	u3240
  7000  001E1A                     u3241:
  7001  001E1A  EF12  F00F         	goto	l3025
  7002  001E1E                     u3240:
  7003  001E1E  8E0A               	bsf	(___fladd@b+2)^0,7,c
  7004  001E20  EF13  F00F         	goto	l3027
  7005  001E24                     l3025:
  7006  001E24  9E0A               	bcf	(___fladd@b+2)^0,7,c
  7007  001E26                     l3027:
  7008  001E26  90D8               	bcf	status,0,c
  7009  001E28  3016               	rrcf	___fladd@bexp^0,w,c
  7010  001E2A  6E0B               	movwf	(___fladd@b+3)^0,c
  7011  001E2C  AE14               	btfss	___fladd@signs^0,7,c
  7012  001E2E  EF1B  F00F         	goto	u3251
  7013  001E32  EF1D  F00F         	goto	u3250
  7014  001E36                     u3251:
  7015  001E36  EF1E  F00F         	goto	l3033
  7016  001E3A                     u3250:
  7017  001E3A  8E0B               	bsf	(___fladd@b+3)^0,7,c
  7018  001E3C                     l3033:
  7019  001E3C  C008  F008         	movff	___fladd@b,?___fladd
  7020  001E40  C009  F009         	movff	___fladd@b+1,?___fladd+1
  7021  001E44  C00A  F00A         	movff	___fladd@b+2,?___fladd+2
  7022  001E48  C00B  F00B         	movff	___fladd@b+3,?___fladd+3
  7023  001E4C                     l646:
  7024  001E4C  0012               	return		;funcret
  7025  001E4E                     __end_of___fladd:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function ___flneg *****************
  7029 ;; Defined at:
  7030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  f1              4    7[COMRAM] unsigned char 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  4    7[COMRAM] unsigned char 
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, status,0
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7044 ;;      Params:         4       0       0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0
  7047 ;;      Totals:         4       0       0       0       0       0       0
  7048 ;;Total ram usage:        4 bytes
  7049 ;; Hardware stack levels used: 1
  7050 ;; Hardware stack levels required when called: 3
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_efgtoa
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text26
  7059  003B72                     __ptext26:
  7060                           	callstack 0
  7061  003B72                     ___flneg:
  7062                           	callstack 23
  7063  003B72  5008               	movf	___flneg@f1^0,w,c
  7064  003B74  1009               	iorwf	(___flneg@f1+1)^0,w,c
  7065  003B76  100A               	iorwf	(___flneg@f1+2)^0,w,c
  7066  003B78  100B               	iorwf	(___flneg@f1+3)^0,w,c
  7067  003B7A  B4D8               	btfsc	status,2,c
  7068  003B7C  EFC2  F01D         	goto	u3941
  7069  003B80  EFC4  F01D         	goto	u3940
  7070  003B84                     u3941:
  7071  003B84  EFCC  F01D         	goto	l3465
  7072  003B88                     u3940:
  7073  003B88  0E00               	movlw	0
  7074  003B8A  1A08               	xorwf	___flneg@f1^0,f,c
  7075  003B8C  0E00               	movlw	0
  7076  003B8E  1A09               	xorwf	(___flneg@f1+1)^0,f,c
  7077  003B90  0E00               	movlw	0
  7078  003B92  1A0A               	xorwf	(___flneg@f1+2)^0,f,c
  7079  003B94  0E80               	movlw	128
  7080  003B96  1A0B               	xorwf	(___flneg@f1+3)^0,f,c
  7081  003B98                     l3465:
  7082  003B98  C008  F008         	movff	___flneg@f1,?___flneg
  7083  003B9C  C009  F009         	movff	___flneg@f1+1,?___flneg+1
  7084  003BA0  C00A  F00A         	movff	___flneg@f1+2,?___flneg+2
  7085  003BA4  C00B  F00B         	movff	___flneg@f1+3,?___flneg+3
  7086  003BA8  0012               	return		;funcret
  7087  003BAA                     __end_of___flneg:
  7088                           	callstack 0
  7089                           
  7090 ;; *************** function ___flmul *****************
  7091 ;; Defined at:
  7092 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  b               4   21[COMRAM] unsigned char 
  7095 ;;  a               4   25[COMRAM] unsigned char 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  prod            4   40[COMRAM] struct .
  7098 ;;  grs             4   34[COMRAM] unsigned long 
  7099 ;;  temp            2   44[COMRAM] struct .
  7100 ;;  bexp            1   39[COMRAM] unsigned char 
  7101 ;;  aexp            1   38[COMRAM] unsigned char 
  7102 ;;  sign            1   33[COMRAM] unsigned char 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  4   21[COMRAM] unsigned char 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0, prodl, prodh
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7112 ;;      Params:         8       0       0       0       0       0       0
  7113 ;;      Locals:        13       0       0       0       0       0       0
  7114 ;;      Temps:          4       0       0       0       0       0       0
  7115 ;;      Totals:        25       0       0       0       0       0       0
  7116 ;;Total ram usage:       25 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; Hardware stack levels required when called: 3
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_main
  7123 ;;		_efgtoa
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text27
  7128  001E4E                     __ptext27:
  7129                           	callstack 0
  7130  001E4E                     ___flmul:
  7131                           	callstack 23
  7132  001E4E  5019               	movf	(___flmul@b+3)^0,w,c
  7133  001E50  0B80               	andlw	128
  7134  001E52  6E22               	movwf	___flmul@sign^0,c
  7135  001E54  5019               	movf	(___flmul@b+3)^0,w,c
  7136  001E56  2419               	addwf	(___flmul@b+3)^0,w,c
  7137  001E58  6E28               	movwf	___flmul@bexp^0,c
  7138  001E5A  AE18               	btfss	(___flmul@b+2)^0,7,c
  7139  001E5C  EF32  F00F         	goto	u3551
  7140  001E60  EF34  F00F         	goto	u3550
  7141  001E64                     u3551:
  7142  001E64  EF35  F00F         	goto	l3213
  7143  001E68                     u3550:
  7144  001E68  8028               	bsf	___flmul@bexp^0,0,c
  7145  001E6A                     l3213:
  7146  001E6A  5028               	movf	___flmul@bexp^0,w,c
  7147  001E6C  B4D8               	btfsc	status,2,c
  7148  001E6E  EF3B  F00F         	goto	u3561
  7149  001E72  EF3D  F00F         	goto	u3560
  7150  001E76                     u3561:
  7151  001E76  EF50  F00F         	goto	l3221
  7152  001E7A                     u3560:
  7153  001E7A  2828               	incf	___flmul@bexp^0,w,c
  7154  001E7C  A4D8               	btfss	status,2,c
  7155  001E7E  EF43  F00F         	goto	u3571
  7156  001E82  EF45  F00F         	goto	u3570
  7157  001E86                     u3571:
  7158  001E86  EF4D  F00F         	goto	l3219
  7159  001E8A                     u3570:
  7160  001E8A  0E00               	movlw	0
  7161  001E8C  6E16               	movwf	___flmul@b^0,c
  7162  001E8E  0E00               	movlw	0
  7163  001E90  6E17               	movwf	(___flmul@b+1)^0,c
  7164  001E92  0E00               	movlw	0
  7165  001E94  6E18               	movwf	(___flmul@b+2)^0,c
  7166  001E96  0E00               	movlw	0
  7167  001E98  6E19               	movwf	(___flmul@b+3)^0,c
  7168  001E9A                     l3219:
  7169  001E9A  8E18               	bsf	(___flmul@b+2)^0,7,c
  7170  001E9C  EF58  F00F         	goto	l3223
  7171  001EA0                     l3221:
  7172  001EA0  0E00               	movlw	0
  7173  001EA2  6E16               	movwf	___flmul@b^0,c
  7174  001EA4  0E00               	movlw	0
  7175  001EA6  6E17               	movwf	(___flmul@b+1)^0,c
  7176  001EA8  0E00               	movlw	0
  7177  001EAA  6E18               	movwf	(___flmul@b+2)^0,c
  7178  001EAC  0E00               	movlw	0
  7179  001EAE  6E19               	movwf	(___flmul@b+3)^0,c
  7180  001EB0                     l3223:
  7181  001EB0  501D               	movf	(___flmul@a+3)^0,w,c
  7182  001EB2  0B80               	andlw	128
  7183  001EB4  1A22               	xorwf	___flmul@sign^0,f,c
  7184  001EB6  501D               	movf	(___flmul@a+3)^0,w,c
  7185  001EB8  241D               	addwf	(___flmul@a+3)^0,w,c
  7186  001EBA  6E27               	movwf	___flmul@aexp^0,c
  7187  001EBC  AE1C               	btfss	(___flmul@a+2)^0,7,c
  7188  001EBE  EF63  F00F         	goto	u3581
  7189  001EC2  EF65  F00F         	goto	u3580
  7190  001EC6                     u3581:
  7191  001EC6  EF66  F00F         	goto	l3231
  7192  001ECA                     u3580:
  7193  001ECA  8027               	bsf	___flmul@aexp^0,0,c
  7194  001ECC                     l3231:
  7195  001ECC  5027               	movf	___flmul@aexp^0,w,c
  7196  001ECE  B4D8               	btfsc	status,2,c
  7197  001ED0  EF6C  F00F         	goto	u3591
  7198  001ED4  EF6E  F00F         	goto	u3590
  7199  001ED8                     u3591:
  7200  001ED8  EF81  F00F         	goto	l3239
  7201  001EDC                     u3590:
  7202  001EDC  2827               	incf	___flmul@aexp^0,w,c
  7203  001EDE  A4D8               	btfss	status,2,c
  7204  001EE0  EF74  F00F         	goto	u3601
  7205  001EE4  EF76  F00F         	goto	u3600
  7206  001EE8                     u3601:
  7207  001EE8  EF7E  F00F         	goto	l3237
  7208  001EEC                     u3600:
  7209  001EEC  0E00               	movlw	0
  7210  001EEE  6E1A               	movwf	___flmul@a^0,c
  7211  001EF0  0E00               	movlw	0
  7212  001EF2  6E1B               	movwf	(___flmul@a+1)^0,c
  7213  001EF4  0E00               	movlw	0
  7214  001EF6  6E1C               	movwf	(___flmul@a+2)^0,c
  7215  001EF8  0E00               	movlw	0
  7216  001EFA  6E1D               	movwf	(___flmul@a+3)^0,c
  7217  001EFC                     l3237:
  7218  001EFC  8E1C               	bsf	(___flmul@a+2)^0,7,c
  7219  001EFE  EF89  F00F         	goto	l723
  7220  001F02                     l3239:
  7221  001F02  0E00               	movlw	0
  7222  001F04  6E1A               	movwf	___flmul@a^0,c
  7223  001F06  0E00               	movlw	0
  7224  001F08  6E1B               	movwf	(___flmul@a+1)^0,c
  7225  001F0A  0E00               	movlw	0
  7226  001F0C  6E1C               	movwf	(___flmul@a+2)^0,c
  7227  001F0E  0E00               	movlw	0
  7228  001F10  6E1D               	movwf	(___flmul@a+3)^0,c
  7229  001F12                     l723:
  7230  001F12  5027               	movf	___flmul@aexp^0,w,c
  7231  001F14  B4D8               	btfsc	status,2,c
  7232  001F16  EF8F  F00F         	goto	u3611
  7233  001F1A  EF91  F00F         	goto	u3610
  7234  001F1E                     u3611:
  7235  001F1E  EF99  F00F         	goto	l3243
  7236  001F22                     u3610:
  7237  001F22  5028               	movf	___flmul@bexp^0,w,c
  7238  001F24  A4D8               	btfss	status,2,c
  7239  001F26  EF97  F00F         	goto	u3621
  7240  001F2A  EF99  F00F         	goto	u3620
  7241  001F2E                     u3621:
  7242  001F2E  EFA3  F00F         	goto	l3247
  7243  001F32                     u3620:
  7244  001F32                     l3243:
  7245  001F32  0E00               	movlw	0
  7246  001F34  6E16               	movwf	?___flmul^0,c
  7247  001F36  0E00               	movlw	0
  7248  001F38  6E17               	movwf	(?___flmul+1)^0,c
  7249  001F3A  0E00               	movlw	0
  7250  001F3C  6E18               	movwf	(?___flmul+2)^0,c
  7251  001F3E  0E00               	movlw	0
  7252  001F40  6E19               	movwf	(?___flmul+3)^0,c
  7253  001F42  EF3B  F011         	goto	l727
  7254  001F46                     l3247:
  7255  001F46  501C               	movf	(___flmul@a+2)^0,w,c
  7256  001F48  0216               	mulwf	___flmul@b^0,c
  7257  001F4A  CFF3 F02D          	movff	prodl,___flmul@temp
  7258  001F4E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7259  001F52  502D               	movf	___flmul@temp^0,w,c
  7260  001F54  6E23               	movwf	___flmul@grs^0,c
  7261  001F56  6A24               	clrf	(___flmul@grs+1)^0,c
  7262  001F58  6A25               	clrf	(___flmul@grs+2)^0,c
  7263  001F5A  6A26               	clrf	(___flmul@grs+3)^0,c
  7264  001F5C  502E               	movf	(___flmul@temp+1)^0,w,c
  7265  001F5E  6E29               	movwf	___flmul@prod^0,c
  7266  001F60  6A2A               	clrf	(___flmul@prod+1)^0,c
  7267  001F62  6A2B               	clrf	(___flmul@prod+2)^0,c
  7268  001F64  6A2C               	clrf	(___flmul@prod+3)^0,c
  7269  001F66  501B               	movf	(___flmul@a+1)^0,w,c
  7270  001F68  0217               	mulwf	(___flmul@b+1)^0,c
  7271  001F6A  CFF3 F02D          	movff	prodl,___flmul@temp
  7272  001F6E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7273  001F72  502D               	movf	___flmul@temp^0,w,c
  7274  001F74  2623               	addwf	___flmul@grs^0,f,c
  7275  001F76  0E00               	movlw	0
  7276  001F78  2224               	addwfc	(___flmul@grs+1)^0,f,c
  7277  001F7A  2225               	addwfc	(___flmul@grs+2)^0,f,c
  7278  001F7C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  7279  001F7E  502E               	movf	(___flmul@temp+1)^0,w,c
  7280  001F80  2629               	addwf	___flmul@prod^0,f,c
  7281  001F82  0E00               	movlw	0
  7282  001F84  222A               	addwfc	(___flmul@prod+1)^0,f,c
  7283  001F86  222B               	addwfc	(___flmul@prod+2)^0,f,c
  7284  001F88  222C               	addwfc	(___flmul@prod+3)^0,f,c
  7285  001F8A  501A               	movf	___flmul@a^0,w,c
  7286  001F8C  0218               	mulwf	(___flmul@b+2)^0,c
  7287  001F8E  CFF3 F02D          	movff	prodl,___flmul@temp
  7288  001F92  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7289  001F96  502D               	movf	___flmul@temp^0,w,c
  7290  001F98  2623               	addwf	___flmul@grs^0,f,c
  7291  001F9A  0E00               	movlw	0
  7292  001F9C  2224               	addwfc	(___flmul@grs+1)^0,f,c
  7293  001F9E  2225               	addwfc	(___flmul@grs+2)^0,f,c
  7294  001FA0  2226               	addwfc	(___flmul@grs+3)^0,f,c
  7295  001FA2  502E               	movf	(___flmul@temp+1)^0,w,c
  7296  001FA4  2629               	addwf	___flmul@prod^0,f,c
  7297  001FA6  0E00               	movlw	0
  7298  001FA8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  7299  001FAA  222B               	addwfc	(___flmul@prod+2)^0,f,c
  7300  001FAC  222C               	addwfc	(___flmul@prod+3)^0,f,c
  7301  001FAE  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  7302  001FB2  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  7303  001FB6  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  7304  001FBA  6A23               	clrf	___flmul@grs^0,c
  7305  001FBC  501A               	movf	___flmul@a^0,w,c
  7306  001FBE  0217               	mulwf	(___flmul@b+1)^0,c
  7307  001FC0  CFF3 F02D          	movff	prodl,___flmul@temp
  7308  001FC4  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7309  001FC8  502D               	movf	___flmul@temp^0,w,c
  7310  001FCA  2623               	addwf	___flmul@grs^0,f,c
  7311  001FCC  502E               	movf	(___flmul@temp+1)^0,w,c
  7312  001FCE  2224               	addwfc	(___flmul@grs+1)^0,f,c
  7313  001FD0  0E00               	movlw	0
  7314  001FD2  2225               	addwfc	(___flmul@grs+2)^0,f,c
  7315  001FD4  0E00               	movlw	0
  7316  001FD6  2226               	addwfc	(___flmul@grs+3)^0,f,c
  7317  001FD8  501B               	movf	(___flmul@a+1)^0,w,c
  7318  001FDA  0216               	mulwf	___flmul@b^0,c
  7319  001FDC  CFF3 F02D          	movff	prodl,___flmul@temp
  7320  001FE0  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7321  001FE4  502D               	movf	___flmul@temp^0,w,c
  7322  001FE6  2623               	addwf	___flmul@grs^0,f,c
  7323  001FE8  502E               	movf	(___flmul@temp+1)^0,w,c
  7324  001FEA  2224               	addwfc	(___flmul@grs+1)^0,f,c
  7325  001FEC  0E00               	movlw	0
  7326  001FEE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  7327  001FF0  0E00               	movlw	0
  7328  001FF2  2226               	addwfc	(___flmul@grs+3)^0,f,c
  7329  001FF4  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  7330  001FF8  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  7331  001FFC  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  7332  002000  6A23               	clrf	___flmul@grs^0,c
  7333  002002  501A               	movf	___flmul@a^0,w,c
  7334  002004  0216               	mulwf	___flmul@b^0,c
  7335  002006  CFF3 F02D          	movff	prodl,___flmul@temp
  7336  00200A  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7337  00200E  502D               	movf	___flmul@temp^0,w,c
  7338  002010  2623               	addwf	___flmul@grs^0,f,c
  7339  002012  502E               	movf	(___flmul@temp+1)^0,w,c
  7340  002014  2224               	addwfc	(___flmul@grs+1)^0,f,c
  7341  002016  0E00               	movlw	0
  7342  002018  2225               	addwfc	(___flmul@grs+2)^0,f,c
  7343  00201A  0E00               	movlw	0
  7344  00201C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  7345  00201E  501C               	movf	(___flmul@a+2)^0,w,c
  7346  002020  0217               	mulwf	(___flmul@b+1)^0,c
  7347  002022  CFF3 F02D          	movff	prodl,___flmul@temp
  7348  002026  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7349  00202A  502D               	movf	___flmul@temp^0,w,c
  7350  00202C  2629               	addwf	___flmul@prod^0,f,c
  7351  00202E  502E               	movf	(___flmul@temp+1)^0,w,c
  7352  002030  222A               	addwfc	(___flmul@prod+1)^0,f,c
  7353  002032  0E00               	movlw	0
  7354  002034  222B               	addwfc	(___flmul@prod+2)^0,f,c
  7355  002036  0E00               	movlw	0
  7356  002038  222C               	addwfc	(___flmul@prod+3)^0,f,c
  7357  00203A  501B               	movf	(___flmul@a+1)^0,w,c
  7358  00203C  0218               	mulwf	(___flmul@b+2)^0,c
  7359  00203E  CFF3 F02D          	movff	prodl,___flmul@temp
  7360  002042  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7361  002046  502D               	movf	___flmul@temp^0,w,c
  7362  002048  2629               	addwf	___flmul@prod^0,f,c
  7363  00204A  502E               	movf	(___flmul@temp+1)^0,w,c
  7364  00204C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  7365  00204E  0E00               	movlw	0
  7366  002050  222B               	addwfc	(___flmul@prod+2)^0,f,c
  7367  002052  0E00               	movlw	0
  7368  002054  222C               	addwfc	(___flmul@prod+3)^0,f,c
  7369  002056  501C               	movf	(___flmul@a+2)^0,w,c
  7370  002058  0218               	mulwf	(___flmul@b+2)^0,c
  7371  00205A  CFF3 F02D          	movff	prodl,___flmul@temp
  7372  00205E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  7373  002062  502D               	movf	___flmul@temp^0,w,c
  7374  002064  6E1E               	movwf	??___flmul^0,c
  7375  002066  502E               	movf	(___flmul@temp+1)^0,w,c
  7376  002068  6E1F               	movwf	(??___flmul+1)^0,c
  7377  00206A  6A20               	clrf	(??___flmul+2)^0,c
  7378  00206C  6A21               	clrf	(??___flmul+3)^0,c
  7379  00206E  C020  F021         	movff	??___flmul+2,??___flmul+3
  7380  002072  C01F  F020         	movff	??___flmul+1,??___flmul+2
  7381  002076  C01E  F01F         	movff	??___flmul,??___flmul+1
  7382  00207A  6A1E               	clrf	??___flmul^0,c
  7383  00207C  501E               	movf	??___flmul^0,w,c
  7384  00207E  2629               	addwf	___flmul@prod^0,f,c
  7385  002080  501F               	movf	(??___flmul+1)^0,w,c
  7386  002082  222A               	addwfc	(___flmul@prod+1)^0,f,c
  7387  002084  5020               	movf	(??___flmul+2)^0,w,c
  7388  002086  222B               	addwfc	(___flmul@prod+2)^0,f,c
  7389  002088  5021               	movf	(??___flmul+3)^0,w,c
  7390  00208A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  7391  00208C  C023  F01E         	movff	___flmul@grs,??___flmul
  7392  002090  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  7393  002094  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  7394  002098  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  7395  00209C  0E19               	movlw	25
  7396  00209E  EF56  F010         	goto	u3630
  7397  0020A2                     u3635:
  7398  0020A2  90D8               	bcf	status,0,c
  7399  0020A4  3221               	rrcf	(??___flmul+3)^0,f,c
  7400  0020A6  3220               	rrcf	(??___flmul+2)^0,f,c
  7401  0020A8  321F               	rrcf	(??___flmul+1)^0,f,c
  7402  0020AA  321E               	rrcf	??___flmul^0,f,c
  7403  0020AC                     u3630:
  7404  0020AC  2EE8               	decfsz	wreg,f,c
  7405  0020AE  EF51  F010         	goto	u3635
  7406  0020B2  501E               	movf	??___flmul^0,w,c
  7407  0020B4  2629               	addwf	___flmul@prod^0,f,c
  7408  0020B6  501F               	movf	(??___flmul+1)^0,w,c
  7409  0020B8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  7410  0020BA  5020               	movf	(??___flmul+2)^0,w,c
  7411  0020BC  222B               	addwfc	(___flmul@prod+2)^0,f,c
  7412  0020BE  5021               	movf	(??___flmul+3)^0,w,c
  7413  0020C0  222C               	addwfc	(___flmul@prod+3)^0,f,c
  7414  0020C2  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  7415  0020C6  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  7416  0020CA  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  7417  0020CE  6A23               	clrf	___flmul@grs^0,c
  7418  0020D0  5027               	movf	___flmul@aexp^0,w,c
  7419  0020D2  C028  F01E         	movff	___flmul@bexp,??___flmul
  7420  0020D6  6A1F               	clrf	(??___flmul+1)^0,c
  7421  0020D8  261E               	addwf	??___flmul^0,f,c
  7422  0020DA  0E00               	movlw	0
  7423  0020DC  221F               	addwfc	(??___flmul+1)^0,f,c
  7424  0020DE  0E82               	movlw	130
  7425  0020E0  241E               	addwf	??___flmul^0,w,c
  7426  0020E2  6E2D               	movwf	___flmul@temp^0,c
  7427  0020E4  0EFF               	movlw	255
  7428  0020E6  201F               	addwfc	(??___flmul+1)^0,w,c
  7429  0020E8  6E2E               	movwf	(___flmul@temp+1)^0,c
  7430  0020EA  EF8C  F010         	goto	l3295
  7431  0020EE                     l3289:
  7432  0020EE  90D8               	bcf	status,0,c
  7433  0020F0  3629               	rlcf	___flmul@prod^0,f,c
  7434  0020F2  362A               	rlcf	(___flmul@prod+1)^0,f,c
  7435  0020F4  362B               	rlcf	(___flmul@prod+2)^0,f,c
  7436  0020F6  362C               	rlcf	(___flmul@prod+3)^0,f,c
  7437  0020F8  AE26               	btfss	(___flmul@grs+3)^0,7,c
  7438  0020FA  EF81  F010         	goto	u3641
  7439  0020FE  EF83  F010         	goto	u3640
  7440  002102                     u3641:
  7441  002102  EF84  F010         	goto	l730
  7442  002106                     u3640:
  7443  002106  8029               	bsf	___flmul@prod^0,0,c
  7444  002108                     l730:
  7445  002108  90D8               	bcf	status,0,c
  7446  00210A  3623               	rlcf	___flmul@grs^0,f,c
  7447  00210C  3624               	rlcf	(___flmul@grs+1)^0,f,c
  7448  00210E  3625               	rlcf	(___flmul@grs+2)^0,f,c
  7449  002110  3626               	rlcf	(___flmul@grs+3)^0,f,c
  7450  002112  062D               	decf	___flmul@temp^0,f,c
  7451  002114  A0D8               	btfss	status,0,c
  7452  002116  062E               	decf	(___flmul@temp+1)^0,f,c
  7453  002118                     l3295:
  7454  002118  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  7455  00211A  EF91  F010         	goto	u3651
  7456  00211E  EF93  F010         	goto	u3650
  7457  002122                     u3651:
  7458  002122  EF77  F010         	goto	l3289
  7459  002126                     u3650:
  7460  002126  0E00               	movlw	0
  7461  002128  6E27               	movwf	___flmul@aexp^0,c
  7462  00212A  AE26               	btfss	(___flmul@grs+3)^0,7,c
  7463  00212C  EF9A  F010         	goto	u3661
  7464  002130  EF9C  F010         	goto	u3660
  7465  002134                     u3661:
  7466  002134  EFC0  F010         	goto	l732
  7467  002138                     u3660:
  7468  002138  0EFF               	movlw	255
  7469  00213A  1423               	andwf	___flmul@grs^0,w,c
  7470  00213C  6E1E               	movwf	??___flmul^0,c
  7471  00213E  0EFF               	movlw	255
  7472  002140  1424               	andwf	(___flmul@grs+1)^0,w,c
  7473  002142  6E1F               	movwf	(??___flmul+1)^0,c
  7474  002144  0EFF               	movlw	255
  7475  002146  1425               	andwf	(___flmul@grs+2)^0,w,c
  7476  002148  6E20               	movwf	(??___flmul+2)^0,c
  7477  00214A  0E7F               	movlw	127
  7478  00214C  1426               	andwf	(___flmul@grs+3)^0,w,c
  7479  00214E  6E21               	movwf	(??___flmul+3)^0,c
  7480  002150  501E               	movf	??___flmul^0,w,c
  7481  002152  101F               	iorwf	(??___flmul+1)^0,w,c
  7482  002154  1020               	iorwf	(??___flmul+2)^0,w,c
  7483  002156  1021               	iorwf	(??___flmul+3)^0,w,c
  7484  002158  B4D8               	btfsc	status,2,c
  7485  00215A  EFB1  F010         	goto	u3671
  7486  00215E  EFB3  F010         	goto	u3670
  7487  002162                     u3671:
  7488  002162  EFB7  F010         	goto	l733
  7489  002166                     u3670:
  7490  002166                     l3303:
  7491  002166  0E01               	movlw	1
  7492  002168  6E27               	movwf	___flmul@aexp^0,c
  7493  00216A  EFC0  F010         	goto	l732
  7494  00216E                     l733:
  7495  00216E  A029               	btfss	___flmul@prod^0,0,c
  7496  002170  EFBC  F010         	goto	u3681
  7497  002174  EFBE  F010         	goto	u3680
  7498  002178                     u3681:
  7499  002178  EFC0  F010         	goto	l732
  7500  00217C                     u3680:
  7501  00217C  EFB3  F010         	goto	l3303
  7502  002180                     l732:
  7503  002180  5027               	movf	___flmul@aexp^0,w,c
  7504  002182  B4D8               	btfsc	status,2,c
  7505  002184  EFC6  F010         	goto	u3691
  7506  002188  EFC8  F010         	goto	u3690
  7507  00218C                     u3691:
  7508  00218C  EFEC  F010         	goto	l3315
  7509  002190                     u3690:
  7510  002190  0E01               	movlw	1
  7511  002192  2629               	addwf	___flmul@prod^0,f,c
  7512  002194  0E00               	movlw	0
  7513  002196  222A               	addwfc	(___flmul@prod+1)^0,f,c
  7514  002198  222B               	addwfc	(___flmul@prod+2)^0,f,c
  7515  00219A  222C               	addwfc	(___flmul@prod+3)^0,f,c
  7516  00219C  A02C               	btfss	(___flmul@prod+3)^0,0,c
  7517  00219E  EFD3  F010         	goto	u3701
  7518  0021A2  EFD5  F010         	goto	u3700
  7519  0021A6                     u3701:
  7520  0021A6  EFEC  F010         	goto	l3315
  7521  0021AA                     u3700:
  7522  0021AA  C029  F01E         	movff	___flmul@prod,??___flmul
  7523  0021AE  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  7524  0021B2  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  7525  0021B6  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  7526  0021BA  3421               	rlcf	(??___flmul+3)^0,w,c
  7527  0021BC  3221               	rrcf	(??___flmul+3)^0,f,c
  7528  0021BE  3220               	rrcf	(??___flmul+2)^0,f,c
  7529  0021C0  321F               	rrcf	(??___flmul+1)^0,f,c
  7530  0021C2  321E               	rrcf	??___flmul^0,f,c
  7531  0021C4  C01E  F029         	movff	??___flmul,___flmul@prod
  7532  0021C8  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  7533  0021CC  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  7534  0021D0  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  7535  0021D4  4A2D               	infsnz	___flmul@temp^0,f,c
  7536  0021D6  2A2E               	incf	(___flmul@temp+1)^0,f,c
  7537  0021D8                     l3315:
  7538  0021D8  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  7539  0021DA  EFF7  F010         	goto	u3711
  7540  0021DE  502E               	movf	(___flmul@temp+1)^0,w,c
  7541  0021E0  E108               	bnz	u3710
  7542  0021E2  282D               	incf	___flmul@temp^0,w,c
  7543  0021E4  A0D8               	btfss	status,0,c
  7544  0021E6  EFF7  F010         	goto	u3711
  7545  0021EA  EFF9  F010         	goto	u3710
  7546  0021EE                     u3711:
  7547  0021EE  EF03  F011         	goto	l3319
  7548  0021F2                     u3710:
  7549  0021F2  0E00               	movlw	0
  7550  0021F4  6E29               	movwf	___flmul@prod^0,c
  7551  0021F6  0E00               	movlw	0
  7552  0021F8  6E2A               	movwf	(___flmul@prod+1)^0,c
  7553  0021FA  0E80               	movlw	128
  7554  0021FC  6E2B               	movwf	(___flmul@prod+2)^0,c
  7555  0021FE  0E7F               	movlw	127
  7556  002200  6E2C               	movwf	(___flmul@prod+3)^0,c
  7557  002202  EF31  F011         	goto	l3331
  7558  002206                     l3319:
  7559  002206  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  7560  002208  EF10  F011         	goto	u3720
  7561  00220C  502E               	movf	(___flmul@temp+1)^0,w,c
  7562  00220E  E106               	bnz	u3721
  7563  002210  042D               	decf	___flmul@temp^0,w,c
  7564  002212  B0D8               	btfsc	status,0,c
  7565  002214  EF0E  F011         	goto	u3721
  7566  002218  EF10  F011         	goto	u3720
  7567  00221C                     u3721:
  7568  00221C  EF1C  F011         	goto	l740
  7569  002220                     u3720:
  7570  002220  0E00               	movlw	0
  7571  002222  6E29               	movwf	___flmul@prod^0,c
  7572  002224  0E00               	movlw	0
  7573  002226  6E2A               	movwf	(___flmul@prod+1)^0,c
  7574  002228  0E00               	movlw	0
  7575  00222A  6E2B               	movwf	(___flmul@prod+2)^0,c
  7576  00222C  0E00               	movlw	0
  7577  00222E  6E2C               	movwf	(___flmul@prod+3)^0,c
  7578  002230  0E00               	movlw	0
  7579  002232  6E22               	movwf	___flmul@sign^0,c
  7580  002234  EF31  F011         	goto	l3331
  7581  002238                     l740:
  7582  002238  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  7583  00223C  0EFF               	movlw	255
  7584  00223E  1629               	andwf	___flmul@prod^0,f,c
  7585  002240  0EFF               	movlw	255
  7586  002242  162A               	andwf	(___flmul@prod+1)^0,f,c
  7587  002244  0E7F               	movlw	127
  7588  002246  162B               	andwf	(___flmul@prod+2)^0,f,c
  7589  002248  0E00               	movlw	0
  7590  00224A  162C               	andwf	(___flmul@prod+3)^0,f,c
  7591  00224C  A028               	btfss	___flmul@bexp^0,0,c
  7592  00224E  EF2B  F011         	goto	u3731
  7593  002252  EF2D  F011         	goto	u3730
  7594  002256                     u3731:
  7595  002256  EF2E  F011         	goto	l3329
  7596  00225A                     u3730:
  7597  00225A  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  7598  00225C                     l3329:
  7599  00225C  90D8               	bcf	status,0,c
  7600  00225E  3028               	rrcf	___flmul@bexp^0,w,c
  7601  002260  6E2C               	movwf	(___flmul@prod+3)^0,c
  7602  002262                     l3331:
  7603  002262  5022               	movf	___flmul@sign^0,w,c
  7604  002264  122C               	iorwf	(___flmul@prod+3)^0,f,c
  7605  002266  C029  F016         	movff	___flmul@prod,?___flmul
  7606  00226A  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  7607  00226E  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  7608  002272  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  7609  002276                     l727:
  7610  002276  0012               	return		;funcret
  7611  002278                     __end_of___flmul:
  7612                           	callstack 0
  7613                           
  7614 ;; *************** function ___flge *****************
  7615 ;; Defined at:
  7616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  ff1             4   46[COMRAM] unsigned char 
  7619 ;;  ff2             4   50[COMRAM] unsigned char 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;		None               void
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7631 ;;      Params:         8       0       0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0
  7633 ;;      Temps:          4       0       0       0       0       0       0
  7634 ;;      Totals:        12       0       0       0       0       0       0
  7635 ;;Total ram usage:       12 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; Hardware stack levels required when called: 3
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_efgtoa
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text28
  7646  00309E                     __ptext28:
  7647                           	callstack 0
  7648  00309E                     ___flge:
  7649                           	callstack 23
  7650  00309E  0E00               	movlw	0
  7651  0030A0  142F               	andwf	___flge@ff1^0,w,c
  7652  0030A2  6E37               	movwf	??___flge^0,c
  7653  0030A4  0E00               	movlw	0
  7654  0030A6  1430               	andwf	(___flge@ff1+1)^0,w,c
  7655  0030A8  6E38               	movwf	(??___flge+1)^0,c
  7656  0030AA  0E80               	movlw	128
  7657  0030AC  1431               	andwf	(___flge@ff1+2)^0,w,c
  7658  0030AE  6E39               	movwf	(??___flge+2)^0,c
  7659  0030B0  0E7F               	movlw	127
  7660  0030B2  1432               	andwf	(___flge@ff1+3)^0,w,c
  7661  0030B4  6E3A               	movwf	(??___flge+3)^0,c
  7662  0030B6  5037               	movf	??___flge^0,w,c
  7663  0030B8  1038               	iorwf	(??___flge+1)^0,w,c
  7664  0030BA  1039               	iorwf	(??___flge+2)^0,w,c
  7665  0030BC  103A               	iorwf	(??___flge+3)^0,w,c
  7666  0030BE  A4D8               	btfss	status,2,c
  7667  0030C0  EF64  F018         	goto	u3891
  7668  0030C4  EF66  F018         	goto	u3890
  7669  0030C8                     u3891:
  7670  0030C8  EF6E  F018         	goto	l3443
  7671  0030CC                     u3890:
  7672  0030CC  0E00               	movlw	0
  7673  0030CE  6E2F               	movwf	___flge@ff1^0,c
  7674  0030D0  0E00               	movlw	0
  7675  0030D2  6E30               	movwf	(___flge@ff1+1)^0,c
  7676  0030D4  0E00               	movlw	0
  7677  0030D6  6E31               	movwf	(___flge@ff1+2)^0,c
  7678  0030D8  0E00               	movlw	0
  7679  0030DA  6E32               	movwf	(___flge@ff1+3)^0,c
  7680  0030DC                     l3443:
  7681  0030DC  0E00               	movlw	0
  7682  0030DE  1433               	andwf	___flge@ff2^0,w,c
  7683  0030E0  6E37               	movwf	??___flge^0,c
  7684  0030E2  0E00               	movlw	0
  7685  0030E4  1434               	andwf	(___flge@ff2+1)^0,w,c
  7686  0030E6  6E38               	movwf	(??___flge+1)^0,c
  7687  0030E8  0E80               	movlw	128
  7688  0030EA  1435               	andwf	(___flge@ff2+2)^0,w,c
  7689  0030EC  6E39               	movwf	(??___flge+2)^0,c
  7690  0030EE  0E7F               	movlw	127
  7691  0030F0  1436               	andwf	(___flge@ff2+3)^0,w,c
  7692  0030F2  6E3A               	movwf	(??___flge+3)^0,c
  7693  0030F4  5037               	movf	??___flge^0,w,c
  7694  0030F6  1038               	iorwf	(??___flge+1)^0,w,c
  7695  0030F8  1039               	iorwf	(??___flge+2)^0,w,c
  7696  0030FA  103A               	iorwf	(??___flge+3)^0,w,c
  7697  0030FC  A4D8               	btfss	status,2,c
  7698  0030FE  EF83  F018         	goto	u3901
  7699  003102  EF85  F018         	goto	u3900
  7700  003106                     u3901:
  7701  003106  EF8D  F018         	goto	l3447
  7702  00310A                     u3900:
  7703  00310A  0E00               	movlw	0
  7704  00310C  6E33               	movwf	___flge@ff2^0,c
  7705  00310E  0E00               	movlw	0
  7706  003110  6E34               	movwf	(___flge@ff2+1)^0,c
  7707  003112  0E00               	movlw	0
  7708  003114  6E35               	movwf	(___flge@ff2+2)^0,c
  7709  003116  0E00               	movlw	0
  7710  003118  6E36               	movwf	(___flge@ff2+3)^0,c
  7711  00311A                     l3447:
  7712  00311A  AE32               	btfss	(___flge@ff1+3)^0,7,c
  7713  00311C  EF92  F018         	goto	u3911
  7714  003120  EF94  F018         	goto	u3910
  7715  003124                     u3911:
  7716  003124  EF9D  F018         	goto	l3451
  7717  003128                     u3910:
  7718  003128  6C2F               	negf	___flge@ff1^0,c
  7719  00312A  1E30               	comf	(___flge@ff1+1)^0,f,c
  7720  00312C  B0D8               	btfsc	status,0,c
  7721  00312E  2A30               	incf	(___flge@ff1+1)^0,f,c
  7722  003130  1E31               	comf	(___flge@ff1+2)^0,f,c
  7723  003132  B0D8               	btfsc	status,0,c
  7724  003134  2A31               	incf	(___flge@ff1+2)^0,f,c
  7725  003136  0E80               	movlw	128
  7726  003138  5632               	subfwb	(___flge@ff1+3)^0,f,c
  7727  00313A                     l3451:
  7728  00313A  AE36               	btfss	(___flge@ff2+3)^0,7,c
  7729  00313C  EFA2  F018         	goto	u3921
  7730  003140  EFA4  F018         	goto	u3920
  7731  003144                     u3921:
  7732  003144  EFAD  F018         	goto	l374
  7733  003148                     u3920:
  7734  003148  6C33               	negf	___flge@ff2^0,c
  7735  00314A  1E34               	comf	(___flge@ff2+1)^0,f,c
  7736  00314C  B0D8               	btfsc	status,0,c
  7737  00314E  2A34               	incf	(___flge@ff2+1)^0,f,c
  7738  003150  1E35               	comf	(___flge@ff2+2)^0,f,c
  7739  003152  B0D8               	btfsc	status,0,c
  7740  003154  2A35               	incf	(___flge@ff2+2)^0,f,c
  7741  003156  0E80               	movlw	128
  7742  003158  5636               	subfwb	(___flge@ff2+3)^0,f,c
  7743  00315A                     l374:
  7744  00315A  0E00               	movlw	0
  7745  00315C  1A2F               	xorwf	___flge@ff1^0,f,c
  7746  00315E  0E00               	movlw	0
  7747  003160  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  7748  003162  0E00               	movlw	0
  7749  003164  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  7750  003166  0E80               	movlw	128
  7751  003168  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  7752  00316A  0E00               	movlw	0
  7753  00316C  1A33               	xorwf	___flge@ff2^0,f,c
  7754  00316E  0E00               	movlw	0
  7755  003170  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  7756  003172  0E00               	movlw	0
  7757  003174  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  7758  003176  0E80               	movlw	128
  7759  003178  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  7760  00317A  5033               	movf	___flge@ff2^0,w,c
  7761  00317C  5C2F               	subwf	___flge@ff1^0,w,c
  7762  00317E  5034               	movf	(___flge@ff2+1)^0,w,c
  7763  003180  5830               	subwfb	(___flge@ff1+1)^0,w,c
  7764  003182  5035               	movf	(___flge@ff2+2)^0,w,c
  7765  003184  5831               	subwfb	(___flge@ff1+2)^0,w,c
  7766  003186  5036               	movf	(___flge@ff2+3)^0,w,c
  7767  003188  5832               	subwfb	(___flge@ff1+3)^0,w,c
  7768  00318A  B0D8               	btfsc	status,0,c
  7769  00318C  EFCA  F018         	goto	u3931
  7770  003190  EFCC  F018         	goto	u3930
  7771  003194                     u3931:
  7772  003194  EFCF  F018         	goto	l3457
  7773  003198                     u3930:
  7774  003198  90D8               	bcf	status,0,c
  7775  00319A  EFD0  F018         	goto	l379
  7776  00319E                     l3457:
  7777  00319E  80D8               	bsf	status,0,c
  7778  0031A0                     l379:
  7779  0031A0  0012               	return		;funcret
  7780  0031A2                     __end_of___flge:
  7781                           	callstack 0
  7782                           
  7783 ;; *************** function ___fleq *****************
  7784 ;; Defined at:
  7785 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  ff1             4    7[COMRAM] unsigned char 
  7788 ;;  ff2             4   11[COMRAM] unsigned char 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;		None               void
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7800 ;;      Params:         8       0       0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0
  7802 ;;      Temps:          4       0       0       0       0       0       0
  7803 ;;      Totals:        12       0       0       0       0       0       0
  7804 ;;Total ram usage:       12 bytes
  7805 ;; Hardware stack levels used: 1
  7806 ;; Hardware stack levels required when called: 3
  7807 ;; This function calls:
  7808 ;;		Nothing
  7809 ;; This function is called by:
  7810 ;;		_efgtoa
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text29
  7815  003676                     __ptext29:
  7816                           	callstack 0
  7817  003676                     ___fleq:
  7818                           	callstack 23
  7819  003676  0E00               	movlw	0
  7820  003678  1408               	andwf	___fleq@ff1^0,w,c
  7821  00367A  6E10               	movwf	??___fleq^0,c
  7822  00367C  0E00               	movlw	0
  7823  00367E  1409               	andwf	(___fleq@ff1+1)^0,w,c
  7824  003680  6E11               	movwf	(??___fleq+1)^0,c
  7825  003682  0E80               	movlw	128
  7826  003684  140A               	andwf	(___fleq@ff1+2)^0,w,c
  7827  003686  6E12               	movwf	(??___fleq+2)^0,c
  7828  003688  0E7F               	movlw	127
  7829  00368A  140B               	andwf	(___fleq@ff1+3)^0,w,c
  7830  00368C  6E13               	movwf	(??___fleq+3)^0,c
  7831  00368E  5010               	movf	??___fleq^0,w,c
  7832  003690  1011               	iorwf	(??___fleq+1)^0,w,c
  7833  003692  1012               	iorwf	(??___fleq+2)^0,w,c
  7834  003694  1013               	iorwf	(??___fleq+3)^0,w,c
  7835  003696  A4D8               	btfss	status,2,c
  7836  003698  EF50  F01B         	goto	u3861
  7837  00369C  EF52  F01B         	goto	u3860
  7838  0036A0                     u3861:
  7839  0036A0  EF5A  F01B         	goto	l3427
  7840  0036A4                     u3860:
  7841  0036A4  0E00               	movlw	0
  7842  0036A6  6E08               	movwf	___fleq@ff1^0,c
  7843  0036A8  0E00               	movlw	0
  7844  0036AA  6E09               	movwf	(___fleq@ff1+1)^0,c
  7845  0036AC  0E00               	movlw	0
  7846  0036AE  6E0A               	movwf	(___fleq@ff1+2)^0,c
  7847  0036B0  0E00               	movlw	0
  7848  0036B2  6E0B               	movwf	(___fleq@ff1+3)^0,c
  7849  0036B4                     l3427:
  7850  0036B4  0E00               	movlw	0
  7851  0036B6  140C               	andwf	___fleq@ff2^0,w,c
  7852  0036B8  6E10               	movwf	??___fleq^0,c
  7853  0036BA  0E00               	movlw	0
  7854  0036BC  140D               	andwf	(___fleq@ff2+1)^0,w,c
  7855  0036BE  6E11               	movwf	(??___fleq+1)^0,c
  7856  0036C0  0E80               	movlw	128
  7857  0036C2  140E               	andwf	(___fleq@ff2+2)^0,w,c
  7858  0036C4  6E12               	movwf	(??___fleq+2)^0,c
  7859  0036C6  0E7F               	movlw	127
  7860  0036C8  140F               	andwf	(___fleq@ff2+3)^0,w,c
  7861  0036CA  6E13               	movwf	(??___fleq+3)^0,c
  7862  0036CC  5010               	movf	??___fleq^0,w,c
  7863  0036CE  1011               	iorwf	(??___fleq+1)^0,w,c
  7864  0036D0  1012               	iorwf	(??___fleq+2)^0,w,c
  7865  0036D2  1013               	iorwf	(??___fleq+3)^0,w,c
  7866  0036D4  A4D8               	btfss	status,2,c
  7867  0036D6  EF6F  F01B         	goto	u3871
  7868  0036DA  EF71  F01B         	goto	u3870
  7869  0036DE                     u3871:
  7870  0036DE  EF79  F01B         	goto	l3431
  7871  0036E2                     u3870:
  7872  0036E2  0E00               	movlw	0
  7873  0036E4  6E0C               	movwf	___fleq@ff2^0,c
  7874  0036E6  0E00               	movlw	0
  7875  0036E8  6E0D               	movwf	(___fleq@ff2+1)^0,c
  7876  0036EA  0E00               	movlw	0
  7877  0036EC  6E0E               	movwf	(___fleq@ff2+2)^0,c
  7878  0036EE  0E00               	movlw	0
  7879  0036F0  6E0F               	movwf	(___fleq@ff2+3)^0,c
  7880  0036F2                     l3431:
  7881  0036F2  500C               	movf	___fleq@ff2^0,w,c
  7882  0036F4  1808               	xorwf	___fleq@ff1^0,w,c
  7883  0036F6  E10F               	bnz	u3880
  7884  0036F8  500D               	movf	(___fleq@ff2+1)^0,w,c
  7885  0036FA  1809               	xorwf	(___fleq@ff1+1)^0,w,c
  7886  0036FC  E10C               	bnz	u3880
  7887  0036FE  500E               	movf	(___fleq@ff2+2)^0,w,c
  7888  003700  180A               	xorwf	(___fleq@ff1+2)^0,w,c
  7889  003702  E109               	bnz	u3880
  7890  003704  500F               	movf	(___fleq@ff2+3)^0,w,c
  7891  003706  180B               	xorwf	(___fleq@ff1+3)^0,w,c
  7892  003708  B4D8               	btfsc	status,2,c
  7893  00370A  EF89  F01B         	goto	u3881
  7894  00370E  EF8B  F01B         	goto	u3880
  7895  003712                     u3881:
  7896  003712  EF8E  F01B         	goto	l3435
  7897  003716                     u3880:
  7898  003716  90D8               	bcf	status,0,c
  7899  003718  EF8F  F01B         	goto	l368
  7900  00371C                     l3435:
  7901  00371C  80D8               	bsf	status,0,c
  7902  00371E                     l368:
  7903  00371E  0012               	return		;funcret
  7904  003720                     __end_of___fleq:
  7905                           	callstack 0
  7906                           
  7907 ;; *************** function ___fldiv *****************
  7908 ;; Defined at:
  7909 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  b               4    7[COMRAM] unsigned char 
  7912 ;;  a               4   11[COMRAM] unsigned char 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  grs             4   26[COMRAM] unsigned long 
  7915 ;;  rem             4   19[COMRAM] unsigned long 
  7916 ;;  new_exp         2   24[COMRAM] short 
  7917 ;;  aexp            1   31[COMRAM] unsigned char 
  7918 ;;  bexp            1   30[COMRAM] unsigned char 
  7919 ;;  sign            1   23[COMRAM] unsigned char 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  4    7[COMRAM] unsigned char 
  7922 ;; Registers used:
  7923 ;;		wreg, status,2, status,0
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7929 ;;      Params:         8       0       0       0       0       0       0
  7930 ;;      Locals:        13       0       0       0       0       0       0
  7931 ;;      Temps:          4       0       0       0       0       0       0
  7932 ;;      Totals:        25       0       0       0       0       0       0
  7933 ;;Total ram usage:       25 bytes
  7934 ;; Hardware stack levels used: 1
  7935 ;; Hardware stack levels required when called: 3
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_efgtoa
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text30
  7944  002278                     __ptext30:
  7945                           	callstack 0
  7946  002278                     ___fldiv:
  7947                           	callstack 23
  7948  002278  500B               	movf	(___fldiv@b+3)^0,w,c
  7949  00227A  0B80               	andlw	128
  7950  00227C  6E18               	movwf	___fldiv@sign^0,c
  7951  00227E  500B               	movf	(___fldiv@b+3)^0,w,c
  7952  002280  240B               	addwf	(___fldiv@b+3)^0,w,c
  7953  002282  6E1F               	movwf	___fldiv@bexp^0,c
  7954  002284  AE0A               	btfss	(___fldiv@b+2)^0,7,c
  7955  002286  EF47  F011         	goto	u3321
  7956  00228A  EF49  F011         	goto	u3320
  7957  00228E                     u3321:
  7958  00228E  EF4A  F011         	goto	l3075
  7959  002292                     u3320:
  7960  002292  801F               	bsf	___fldiv@bexp^0,0,c
  7961  002294                     l3075:
  7962  002294  501F               	movf	___fldiv@bexp^0,w,c
  7963  002296  B4D8               	btfsc	status,2,c
  7964  002298  EF50  F011         	goto	u3331
  7965  00229C  EF52  F011         	goto	u3330
  7966  0022A0                     u3331:
  7967  0022A0  EF67  F011         	goto	l3085
  7968  0022A4                     u3330:
  7969  0022A4  281F               	incf	___fldiv@bexp^0,w,c
  7970  0022A6  A4D8               	btfss	status,2,c
  7971  0022A8  EF58  F011         	goto	u3341
  7972  0022AC  EF5A  F011         	goto	u3340
  7973  0022B0                     u3341:
  7974  0022B0  EF62  F011         	goto	l3081
  7975  0022B4                     u3340:
  7976  0022B4  0E00               	movlw	0
  7977  0022B6  6E08               	movwf	___fldiv@b^0,c
  7978  0022B8  0E00               	movlw	0
  7979  0022BA  6E09               	movwf	(___fldiv@b+1)^0,c
  7980  0022BC  0E00               	movlw	0
  7981  0022BE  6E0A               	movwf	(___fldiv@b+2)^0,c
  7982  0022C0  0E00               	movlw	0
  7983  0022C2  6E0B               	movwf	(___fldiv@b+3)^0,c
  7984  0022C4                     l3081:
  7985  0022C4  8E0A               	bsf	(___fldiv@b+2)^0,7,c
  7986  0022C6  0E00               	movlw	0
  7987  0022C8  6E0B               	movwf	(___fldiv@b+3)^0,c
  7988  0022CA  EF6F  F011         	goto	l3087
  7989  0022CE                     l3085:
  7990  0022CE  0E00               	movlw	0
  7991  0022D0  6E08               	movwf	___fldiv@b^0,c
  7992  0022D2  0E00               	movlw	0
  7993  0022D4  6E09               	movwf	(___fldiv@b+1)^0,c
  7994  0022D6  0E00               	movlw	0
  7995  0022D8  6E0A               	movwf	(___fldiv@b+2)^0,c
  7996  0022DA  0E00               	movlw	0
  7997  0022DC  6E0B               	movwf	(___fldiv@b+3)^0,c
  7998  0022DE                     l3087:
  7999  0022DE  500F               	movf	(___fldiv@a+3)^0,w,c
  8000  0022E0  0B80               	andlw	128
  8001  0022E2  1A18               	xorwf	___fldiv@sign^0,f,c
  8002  0022E4  500F               	movf	(___fldiv@a+3)^0,w,c
  8003  0022E6  240F               	addwf	(___fldiv@a+3)^0,w,c
  8004  0022E8  6E20               	movwf	___fldiv@aexp^0,c
  8005  0022EA  AE0E               	btfss	(___fldiv@a+2)^0,7,c
  8006  0022EC  EF7A  F011         	goto	u3351
  8007  0022F0  EF7C  F011         	goto	u3350
  8008  0022F4                     u3351:
  8009  0022F4  EF7D  F011         	goto	l3095
  8010  0022F8                     u3350:
  8011  0022F8  8020               	bsf	___fldiv@aexp^0,0,c
  8012  0022FA                     l3095:
  8013  0022FA  5020               	movf	___fldiv@aexp^0,w,c
  8014  0022FC  B4D8               	btfsc	status,2,c
  8015  0022FE  EF83  F011         	goto	u3361
  8016  002302  EF85  F011         	goto	u3360
  8017  002306                     u3361:
  8018  002306  EF9A  F011         	goto	l3105
  8019  00230A                     u3360:
  8020  00230A  2820               	incf	___fldiv@aexp^0,w,c
  8021  00230C  A4D8               	btfss	status,2,c
  8022  00230E  EF8B  F011         	goto	u3371
  8023  002312  EF8D  F011         	goto	u3370
  8024  002316                     u3371:
  8025  002316  EF95  F011         	goto	l3101
  8026  00231A                     u3370:
  8027  00231A  0E00               	movlw	0
  8028  00231C  6E0C               	movwf	___fldiv@a^0,c
  8029  00231E  0E00               	movlw	0
  8030  002320  6E0D               	movwf	(___fldiv@a+1)^0,c
  8031  002322  0E00               	movlw	0
  8032  002324  6E0E               	movwf	(___fldiv@a+2)^0,c
  8033  002326  0E00               	movlw	0
  8034  002328  6E0F               	movwf	(___fldiv@a+3)^0,c
  8035  00232A                     l3101:
  8036  00232A  8E0E               	bsf	(___fldiv@a+2)^0,7,c
  8037  00232C  0E00               	movlw	0
  8038  00232E  6E0F               	movwf	(___fldiv@a+3)^0,c
  8039  002330  EFA2  F011         	goto	l3107
  8040  002334                     l3105:
  8041  002334  0E00               	movlw	0
  8042  002336  6E0C               	movwf	___fldiv@a^0,c
  8043  002338  0E00               	movlw	0
  8044  00233A  6E0D               	movwf	(___fldiv@a+1)^0,c
  8045  00233C  0E00               	movlw	0
  8046  00233E  6E0E               	movwf	(___fldiv@a+2)^0,c
  8047  002340  0E00               	movlw	0
  8048  002342  6E0F               	movwf	(___fldiv@a+3)^0,c
  8049  002344                     l3107:
  8050  002344  500C               	movf	___fldiv@a^0,w,c
  8051  002346  100D               	iorwf	(___fldiv@a+1)^0,w,c
  8052  002348  100E               	iorwf	(___fldiv@a+2)^0,w,c
  8053  00234A  100F               	iorwf	(___fldiv@a+3)^0,w,c
  8054  00234C  A4D8               	btfss	status,2,c
  8055  00234E  EFAB  F011         	goto	u3381
  8056  002352  EFAD  F011         	goto	u3380
  8057  002356                     u3381:
  8058  002356  EFC5  F011         	goto	l3119
  8059  00235A                     u3380:
  8060  00235A  0E00               	movlw	0
  8061  00235C  6E08               	movwf	___fldiv@b^0,c
  8062  00235E  0E00               	movlw	0
  8063  002360  6E09               	movwf	(___fldiv@b+1)^0,c
  8064  002362  0E00               	movlw	0
  8065  002364  6E0A               	movwf	(___fldiv@b+2)^0,c
  8066  002366  0E00               	movlw	0
  8067  002368  6E0B               	movwf	(___fldiv@b+3)^0,c
  8068  00236A  0E80               	movlw	128
  8069  00236C  120A               	iorwf	(___fldiv@b+2)^0,f,c
  8070  00236E  0E7F               	movlw	127
  8071  002370  120B               	iorwf	(___fldiv@b+3)^0,f,c
  8072  002372                     l3113:
  8073  002372  5018               	movf	___fldiv@sign^0,w,c
  8074  002374  120B               	iorwf	(___fldiv@b+3)^0,f,c
  8075  002376  C008  F008         	movff	___fldiv@b,?___fldiv
  8076  00237A  C009  F009         	movff	___fldiv@b+1,?___fldiv+1
  8077  00237E  C00A  F00A         	movff	___fldiv@b+2,?___fldiv+2
  8078  002382  C00B  F00B         	movff	___fldiv@b+3,?___fldiv+3
  8079  002386  EF08  F013         	goto	l691
  8080  00238A                     l3119:
  8081  00238A  501F               	movf	___fldiv@bexp^0,w,c
  8082  00238C  A4D8               	btfss	status,2,c
  8083  00238E  EFCB  F011         	goto	u3391
  8084  002392  EFCD  F011         	goto	u3390
  8085  002396                     u3391:
  8086  002396  EFD7  F011         	goto	l3127
  8087  00239A                     u3390:
  8088  00239A  0E00               	movlw	0
  8089  00239C  6E08               	movwf	?___fldiv^0,c
  8090  00239E  0E00               	movlw	0
  8091  0023A0  6E09               	movwf	(?___fldiv+1)^0,c
  8092  0023A2  0E00               	movlw	0
  8093  0023A4  6E0A               	movwf	(?___fldiv+2)^0,c
  8094  0023A6  0E00               	movlw	0
  8095  0023A8  6E0B               	movwf	(?___fldiv+3)^0,c
  8096  0023AA  EF08  F013         	goto	l691
  8097  0023AE                     l3127:
  8098  0023AE  5020               	movf	___fldiv@aexp^0,w,c
  8099  0023B0  C01F  F010         	movff	___fldiv@bexp,??___fldiv
  8100  0023B4  6A11               	clrf	(??___fldiv+1)^0,c
  8101  0023B6  5E10               	subwf	??___fldiv^0,f,c
  8102  0023B8  0E00               	movlw	0
  8103  0023BA  5A11               	subwfb	(??___fldiv+1)^0,f,c
  8104  0023BC  0E7F               	movlw	127
  8105  0023BE  2410               	addwf	??___fldiv^0,w,c
  8106  0023C0  6E19               	movwf	___fldiv@new_exp^0,c
  8107  0023C2  0E00               	movlw	0
  8108  0023C4  2011               	addwfc	(??___fldiv+1)^0,w,c
  8109  0023C6  6E1A               	movwf	(___fldiv@new_exp+1)^0,c
  8110  0023C8  C008  F014         	movff	___fldiv@b,___fldiv@rem
  8111  0023CC  C009  F015         	movff	___fldiv@b+1,___fldiv@rem+1
  8112  0023D0  C00A  F016         	movff	___fldiv@b+2,___fldiv@rem+2
  8113  0023D4  C00B  F017         	movff	___fldiv@b+3,___fldiv@rem+3
  8114  0023D8  0E00               	movlw	0
  8115  0023DA  6E08               	movwf	___fldiv@b^0,c
  8116  0023DC  0E00               	movlw	0
  8117  0023DE  6E09               	movwf	(___fldiv@b+1)^0,c
  8118  0023E0  0E00               	movlw	0
  8119  0023E2  6E0A               	movwf	(___fldiv@b+2)^0,c
  8120  0023E4  0E00               	movlw	0
  8121  0023E6  6E0B               	movwf	(___fldiv@b+3)^0,c
  8122  0023E8  0E00               	movlw	0
  8123  0023EA  6E1B               	movwf	___fldiv@grs^0,c
  8124  0023EC  0E00               	movlw	0
  8125  0023EE  6E1C               	movwf	(___fldiv@grs+1)^0,c
  8126  0023F0  0E00               	movlw	0
  8127  0023F2  6E1D               	movwf	(___fldiv@grs+2)^0,c
  8128  0023F4  0E00               	movlw	0
  8129  0023F6  6E1E               	movwf	(___fldiv@grs+3)^0,c
  8130  0023F8  0E00               	movlw	0
  8131  0023FA  6E20               	movwf	___fldiv@aexp^0,c
  8132  0023FC  EF38  F012         	goto	l693
  8133  002400                     l3137:
  8134  002400  5020               	movf	___fldiv@aexp^0,w,c
  8135  002402  B4D8               	btfsc	status,2,c
  8136  002404  EF06  F012         	goto	u3401
  8137  002408  EF08  F012         	goto	u3400
  8138  00240C                     u3401:
  8139  00240C  EF1F  F012         	goto	l3145
  8140  002410                     u3400:
  8141  002410  90D8               	bcf	status,0,c
  8142  002412  3614               	rlcf	___fldiv@rem^0,f,c
  8143  002414  3615               	rlcf	(___fldiv@rem+1)^0,f,c
  8144  002416  3616               	rlcf	(___fldiv@rem+2)^0,f,c
  8145  002418  3617               	rlcf	(___fldiv@rem+3)^0,f,c
  8146  00241A  90D8               	bcf	status,0,c
  8147  00241C  3608               	rlcf	___fldiv@b^0,f,c
  8148  00241E  3609               	rlcf	(___fldiv@b+1)^0,f,c
  8149  002420  360A               	rlcf	(___fldiv@b+2)^0,f,c
  8150  002422  360B               	rlcf	(___fldiv@b+3)^0,f,c
  8151  002424  AE1E               	btfss	(___fldiv@grs+3)^0,7,c
  8152  002426  EF17  F012         	goto	u3411
  8153  00242A  EF19  F012         	goto	u3410
  8154  00242E                     u3411:
  8155  00242E  EF1A  F012         	goto	l696
  8156  002432                     u3410:
  8157  002432  8008               	bsf	___fldiv@b^0,0,c
  8158  002434                     l696:
  8159  002434  90D8               	bcf	status,0,c
  8160  002436  361B               	rlcf	___fldiv@grs^0,f,c
  8161  002438  361C               	rlcf	(___fldiv@grs+1)^0,f,c
  8162  00243A  361D               	rlcf	(___fldiv@grs+2)^0,f,c
  8163  00243C  361E               	rlcf	(___fldiv@grs+3)^0,f,c
  8164  00243E                     l3145:
  8165  00243E  500C               	movf	___fldiv@a^0,w,c
  8166  002440  5C14               	subwf	___fldiv@rem^0,w,c
  8167  002442  500D               	movf	(___fldiv@a+1)^0,w,c
  8168  002444  5815               	subwfb	(___fldiv@rem+1)^0,w,c
  8169  002446  500E               	movf	(___fldiv@a+2)^0,w,c
  8170  002448  5816               	subwfb	(___fldiv@rem+2)^0,w,c
  8171  00244A  500F               	movf	(___fldiv@a+3)^0,w,c
  8172  00244C  5817               	subwfb	(___fldiv@rem+3)^0,w,c
  8173  00244E  A0D8               	btfss	status,0,c
  8174  002450  EF2C  F012         	goto	u3421
  8175  002454  EF2E  F012         	goto	u3420
  8176  002458                     u3421:
  8177  002458  EF37  F012         	goto	l3151
  8178  00245C                     u3420:
  8179  00245C  8C1E               	bsf	(___fldiv@grs+3)^0,6,c
  8180  00245E  500C               	movf	___fldiv@a^0,w,c
  8181  002460  5E14               	subwf	___fldiv@rem^0,f,c
  8182  002462  500D               	movf	(___fldiv@a+1)^0,w,c
  8183  002464  5A15               	subwfb	(___fldiv@rem+1)^0,f,c
  8184  002466  500E               	movf	(___fldiv@a+2)^0,w,c
  8185  002468  5A16               	subwfb	(___fldiv@rem+2)^0,f,c
  8186  00246A  500F               	movf	(___fldiv@a+3)^0,w,c
  8187  00246C  5A17               	subwfb	(___fldiv@rem+3)^0,f,c
  8188  00246E                     l3151:
  8189  00246E  2A20               	incf	___fldiv@aexp^0,f,c
  8190  002470                     l693:
  8191  002470  0E19               	movlw	25
  8192  002472  6420               	cpfsgt	___fldiv@aexp^0,c
  8193  002474  EF3E  F012         	goto	u3431
  8194  002478  EF40  F012         	goto	u3430
  8195  00247C                     u3431:
  8196  00247C  EF00  F012         	goto	l3137
  8197  002480                     u3430:
  8198  002480  5014               	movf	___fldiv@rem^0,w,c
  8199  002482  1015               	iorwf	(___fldiv@rem+1)^0,w,c
  8200  002484  1016               	iorwf	(___fldiv@rem+2)^0,w,c
  8201  002486  1017               	iorwf	(___fldiv@rem+3)^0,w,c
  8202  002488  B4D8               	btfsc	status,2,c
  8203  00248A  EF49  F012         	goto	u3441
  8204  00248E  EF4B  F012         	goto	u3440
  8205  002492                     u3441:
  8206  002492  EF63  F012         	goto	l3163
  8207  002496                     u3440:
  8208  002496  801B               	bsf	___fldiv@grs^0,0,c
  8209  002498  EF63  F012         	goto	l3163
  8210  00249C                     l3157:
  8211  00249C  90D8               	bcf	status,0,c
  8212  00249E  3608               	rlcf	___fldiv@b^0,f,c
  8213  0024A0  3609               	rlcf	(___fldiv@b+1)^0,f,c
  8214  0024A2  360A               	rlcf	(___fldiv@b+2)^0,f,c
  8215  0024A4  360B               	rlcf	(___fldiv@b+3)^0,f,c
  8216  0024A6  AE1E               	btfss	(___fldiv@grs+3)^0,7,c
  8217  0024A8  EF58  F012         	goto	u3451
  8218  0024AC  EF5A  F012         	goto	u3450
  8219  0024B0                     u3451:
  8220  0024B0  EF5B  F012         	goto	l702
  8221  0024B4                     u3450:
  8222  0024B4  8008               	bsf	___fldiv@b^0,0,c
  8223  0024B6                     l702:
  8224  0024B6  90D8               	bcf	status,0,c
  8225  0024B8  361B               	rlcf	___fldiv@grs^0,f,c
  8226  0024BA  361C               	rlcf	(___fldiv@grs+1)^0,f,c
  8227  0024BC  361D               	rlcf	(___fldiv@grs+2)^0,f,c
  8228  0024BE  361E               	rlcf	(___fldiv@grs+3)^0,f,c
  8229  0024C0  0619               	decf	___fldiv@new_exp^0,f,c
  8230  0024C2  A0D8               	btfss	status,0,c
  8231  0024C4  061A               	decf	(___fldiv@new_exp+1)^0,f,c
  8232  0024C6                     l3163:
  8233  0024C6  AE0A               	btfss	(___fldiv@b+2)^0,7,c
  8234  0024C8  EF68  F012         	goto	u3461
  8235  0024CC  EF6A  F012         	goto	u3460
  8236  0024D0                     u3461:
  8237  0024D0  EF4E  F012         	goto	l3157
  8238  0024D4                     u3460:
  8239  0024D4  0E00               	movlw	0
  8240  0024D6  6E20               	movwf	___fldiv@aexp^0,c
  8241  0024D8  AE1E               	btfss	(___fldiv@grs+3)^0,7,c
  8242  0024DA  EF71  F012         	goto	u3471
  8243  0024DE  EF73  F012         	goto	u3470
  8244  0024E2                     u3471:
  8245  0024E2  EF97  F012         	goto	l704
  8246  0024E6                     u3470:
  8247  0024E6  0EFF               	movlw	255
  8248  0024E8  141B               	andwf	___fldiv@grs^0,w,c
  8249  0024EA  6E10               	movwf	??___fldiv^0,c
  8250  0024EC  0EFF               	movlw	255
  8251  0024EE  141C               	andwf	(___fldiv@grs+1)^0,w,c
  8252  0024F0  6E11               	movwf	(??___fldiv+1)^0,c
  8253  0024F2  0EFF               	movlw	255
  8254  0024F4  141D               	andwf	(___fldiv@grs+2)^0,w,c
  8255  0024F6  6E12               	movwf	(??___fldiv+2)^0,c
  8256  0024F8  0E7F               	movlw	127
  8257  0024FA  141E               	andwf	(___fldiv@grs+3)^0,w,c
  8258  0024FC  6E13               	movwf	(??___fldiv+3)^0,c
  8259  0024FE  5010               	movf	??___fldiv^0,w,c
  8260  002500  1011               	iorwf	(??___fldiv+1)^0,w,c
  8261  002502  1012               	iorwf	(??___fldiv+2)^0,w,c
  8262  002504  1013               	iorwf	(??___fldiv+3)^0,w,c
  8263  002506  B4D8               	btfsc	status,2,c
  8264  002508  EF88  F012         	goto	u3481
  8265  00250C  EF8A  F012         	goto	u3480
  8266  002510                     u3481:
  8267  002510  EF8E  F012         	goto	l705
  8268  002514                     u3480:
  8269  002514                     l3171:
  8270  002514  0E01               	movlw	1
  8271  002516  6E20               	movwf	___fldiv@aexp^0,c
  8272  002518  EF97  F012         	goto	l704
  8273  00251C                     l705:
  8274  00251C  A008               	btfss	___fldiv@b^0,0,c
  8275  00251E  EF93  F012         	goto	u3491
  8276  002522  EF95  F012         	goto	u3490
  8277  002526                     u3491:
  8278  002526  EF97  F012         	goto	l704
  8279  00252A                     u3490:
  8280  00252A  EF8A  F012         	goto	l3171
  8281  00252E                     l704:
  8282  00252E  5020               	movf	___fldiv@aexp^0,w,c
  8283  002530  B4D8               	btfsc	status,2,c
  8284  002532  EF9D  F012         	goto	u3501
  8285  002536  EF9F  F012         	goto	u3500
  8286  00253A                     u3501:
  8287  00253A  EFC3  F012         	goto	l3183
  8288  00253E                     u3500:
  8289  00253E  0E01               	movlw	1
  8290  002540  2608               	addwf	___fldiv@b^0,f,c
  8291  002542  0E00               	movlw	0
  8292  002544  2209               	addwfc	(___fldiv@b+1)^0,f,c
  8293  002546  220A               	addwfc	(___fldiv@b+2)^0,f,c
  8294  002548  220B               	addwfc	(___fldiv@b+3)^0,f,c
  8295  00254A  A00B               	btfss	(___fldiv@b+3)^0,0,c
  8296  00254C  EFAA  F012         	goto	u3511
  8297  002550  EFAC  F012         	goto	u3510
  8298  002554                     u3511:
  8299  002554  EFC3  F012         	goto	l3183
  8300  002558                     u3510:
  8301  002558  C008  F010         	movff	___fldiv@b,??___fldiv
  8302  00255C  C009  F011         	movff	___fldiv@b+1,??___fldiv+1
  8303  002560  C00A  F012         	movff	___fldiv@b+2,??___fldiv+2
  8304  002564  C00B  F013         	movff	___fldiv@b+3,??___fldiv+3
  8305  002568  3413               	rlcf	(??___fldiv+3)^0,w,c
  8306  00256A  3213               	rrcf	(??___fldiv+3)^0,f,c
  8307  00256C  3212               	rrcf	(??___fldiv+2)^0,f,c
  8308  00256E  3211               	rrcf	(??___fldiv+1)^0,f,c
  8309  002570  3210               	rrcf	??___fldiv^0,f,c
  8310  002572  C010  F008         	movff	??___fldiv,___fldiv@b
  8311  002576  C011  F009         	movff	??___fldiv+1,___fldiv@b+1
  8312  00257A  C012  F00A         	movff	??___fldiv+2,___fldiv@b+2
  8313  00257E  C013  F00B         	movff	??___fldiv+3,___fldiv@b+3
  8314  002582  4A19               	infsnz	___fldiv@new_exp^0,f,c
  8315  002584  2A1A               	incf	(___fldiv@new_exp+1)^0,f,c
  8316  002586                     l3183:
  8317  002586  BE1A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8318  002588  EFCE  F012         	goto	u3521
  8319  00258C  501A               	movf	(___fldiv@new_exp+1)^0,w,c
  8320  00258E  E108               	bnz	u3520
  8321  002590  2819               	incf	___fldiv@new_exp^0,w,c
  8322  002592  A0D8               	btfss	status,0,c
  8323  002594  EFCE  F012         	goto	u3521
  8324  002598  EFD0  F012         	goto	u3520
  8325  00259C                     u3521:
  8326  00259C  EFDB  F012         	goto	l3187
  8327  0025A0                     u3520:
  8328  0025A0  0E00               	movlw	0
  8329  0025A2  6E1A               	movwf	(___fldiv@new_exp+1)^0,c
  8330  0025A4  6819               	setf	___fldiv@new_exp^0,c
  8331  0025A6  0E00               	movlw	0
  8332  0025A8  6E08               	movwf	___fldiv@b^0,c
  8333  0025AA  0E00               	movlw	0
  8334  0025AC  6E09               	movwf	(___fldiv@b+1)^0,c
  8335  0025AE  0E00               	movlw	0
  8336  0025B0  6E0A               	movwf	(___fldiv@b+2)^0,c
  8337  0025B2  0E00               	movlw	0
  8338  0025B4  6E0B               	movwf	(___fldiv@b+3)^0,c
  8339  0025B6                     l3187:
  8340  0025B6  BE1A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8341  0025B8  EFE8  F012         	goto	u3530
  8342  0025BC  501A               	movf	(___fldiv@new_exp+1)^0,w,c
  8343  0025BE  E106               	bnz	u3531
  8344  0025C0  0419               	decf	___fldiv@new_exp^0,w,c
  8345  0025C2  B0D8               	btfsc	status,0,c
  8346  0025C4  EFE6  F012         	goto	u3531
  8347  0025C8  EFE8  F012         	goto	u3530
  8348  0025CC                     u3531:
  8349  0025CC  EFF6  F012         	goto	l3191
  8350  0025D0                     u3530:
  8351  0025D0  0E00               	movlw	0
  8352  0025D2  6E1A               	movwf	(___fldiv@new_exp+1)^0,c
  8353  0025D4  0E00               	movlw	0
  8354  0025D6  6E19               	movwf	___fldiv@new_exp^0,c
  8355  0025D8  0E00               	movlw	0
  8356  0025DA  6E08               	movwf	___fldiv@b^0,c
  8357  0025DC  0E00               	movlw	0
  8358  0025DE  6E09               	movwf	(___fldiv@b+1)^0,c
  8359  0025E0  0E00               	movlw	0
  8360  0025E2  6E0A               	movwf	(___fldiv@b+2)^0,c
  8361  0025E4  0E00               	movlw	0
  8362  0025E6  6E0B               	movwf	(___fldiv@b+3)^0,c
  8363  0025E8  0E00               	movlw	0
  8364  0025EA  6E18               	movwf	___fldiv@sign^0,c
  8365  0025EC                     l3191:
  8366  0025EC  C019  F01F         	movff	___fldiv@new_exp,___fldiv@bexp
  8367  0025F0  A01F               	btfss	___fldiv@bexp^0,0,c
  8368  0025F2  EFFD  F012         	goto	u3541
  8369  0025F6  EFFF  F012         	goto	u3540
  8370  0025FA                     u3541:
  8371  0025FA  EF02  F013         	goto	l3197
  8372  0025FE                     u3540:
  8373  0025FE  8E0A               	bsf	(___fldiv@b+2)^0,7,c
  8374  002600  EF03  F013         	goto	l3199
  8375  002604                     l3197:
  8376  002604  9E0A               	bcf	(___fldiv@b+2)^0,7,c
  8377  002606                     l3199:
  8378  002606  90D8               	bcf	status,0,c
  8379  002608  301F               	rrcf	___fldiv@bexp^0,w,c
  8380  00260A  6E0B               	movwf	(___fldiv@b+3)^0,c
  8381  00260C  EFB9  F011         	goto	l3113
  8382  002610                     l691:
  8383  002610  0012               	return		;funcret
  8384  002612                     __end_of___fldiv:
  8385                           	callstack 0
  8386                           
  8387 ;; *************** function ___awmod *****************
  8388 ;; Defined at:
  8389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  dividend        2    7[COMRAM] int 
  8392 ;;  divisor         2    9[COMRAM] int 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  sign            1   12[COMRAM] unsigned char 
  8395 ;;  counter         1   11[COMRAM] unsigned char 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  2    7[COMRAM] int 
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8405 ;;      Params:         4       0       0       0       0       0       0
  8406 ;;      Locals:         2       0       0       0       0       0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0
  8408 ;;      Totals:         6       0       0       0       0       0       0
  8409 ;;Total ram usage:        6 bytes
  8410 ;; Hardware stack levels used: 1
  8411 ;; Hardware stack levels required when called: 3
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_efgtoa
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text31
  8420  0035C6                     __ptext31:
  8421                           	callstack 0
  8422  0035C6                     ___awmod:
  8423                           	callstack 23
  8424  0035C6  0E00               	movlw	0
  8425  0035C8  6E0D               	movwf	___awmod@sign^0,c
  8426  0035CA  BE09               	btfsc	(___awmod@dividend+1)^0,7,c
  8427  0035CC  EFEC  F01A         	goto	u3800
  8428  0035D0  EFEA  F01A         	goto	u3801
  8429  0035D4                     u3801:
  8430  0035D4  EFF2  F01A         	goto	l3395
  8431  0035D8                     u3800:
  8432  0035D8  6C08               	negf	___awmod@dividend^0,c
  8433  0035DA  1E09               	comf	(___awmod@dividend+1)^0,f,c
  8434  0035DC  B0D8               	btfsc	status,0,c
  8435  0035DE  2A09               	incf	(___awmod@dividend+1)^0,f,c
  8436  0035E0  0E01               	movlw	1
  8437  0035E2  6E0D               	movwf	___awmod@sign^0,c
  8438  0035E4                     l3395:
  8439  0035E4  BE0B               	btfsc	(___awmod@divisor+1)^0,7,c
  8440  0035E6  EFF9  F01A         	goto	u3810
  8441  0035EA  EFF7  F01A         	goto	u3811
  8442  0035EE                     u3811:
  8443  0035EE  EFFD  F01A         	goto	l3399
  8444  0035F2                     u3810:
  8445  0035F2  6C0A               	negf	___awmod@divisor^0,c
  8446  0035F4  1E0B               	comf	(___awmod@divisor+1)^0,f,c
  8447  0035F6  B0D8               	btfsc	status,0,c
  8448  0035F8  2A0B               	incf	(___awmod@divisor+1)^0,f,c
  8449  0035FA                     l3399:
  8450  0035FA  500A               	movf	___awmod@divisor^0,w,c
  8451  0035FC  100B               	iorwf	(___awmod@divisor+1)^0,w,c
  8452  0035FE  B4D8               	btfsc	status,2,c
  8453  003600  EF04  F01B         	goto	u3821
  8454  003604  EF06  F01B         	goto	u3820
  8455  003608                     u3821:
  8456  003608  EF2A  F01B         	goto	l3415
  8457  00360C                     u3820:
  8458  00360C  0E01               	movlw	1
  8459  00360E  6E0C               	movwf	___awmod@counter^0,c
  8460  003610  EF0E  F01B         	goto	l3405
  8461  003614                     l3403:
  8462  003614  90D8               	bcf	status,0,c
  8463  003616  360A               	rlcf	___awmod@divisor^0,f,c
  8464  003618  360B               	rlcf	(___awmod@divisor+1)^0,f,c
  8465  00361A  2A0C               	incf	___awmod@counter^0,f,c
  8466  00361C                     l3405:
  8467  00361C  AE0B               	btfss	(___awmod@divisor+1)^0,7,c
  8468  00361E  EF13  F01B         	goto	u3831
  8469  003622  EF15  F01B         	goto	u3830
  8470  003626                     u3831:
  8471  003626  EF0A  F01B         	goto	l3403
  8472  00362A                     u3830:
  8473  00362A                     l3407:
  8474  00362A  500A               	movf	___awmod@divisor^0,w,c
  8475  00362C  5C08               	subwf	___awmod@dividend^0,w,c
  8476  00362E  500B               	movf	(___awmod@divisor+1)^0,w,c
  8477  003630  5809               	subwfb	(___awmod@dividend+1)^0,w,c
  8478  003632  A0D8               	btfss	status,0,c
  8479  003634  EF1E  F01B         	goto	u3841
  8480  003638  EF20  F01B         	goto	u3840
  8481  00363C                     u3841:
  8482  00363C  EF24  F01B         	goto	l3411
  8483  003640                     u3840:
  8484  003640  500A               	movf	___awmod@divisor^0,w,c
  8485  003642  5E08               	subwf	___awmod@dividend^0,f,c
  8486  003644  500B               	movf	(___awmod@divisor+1)^0,w,c
  8487  003646  5A09               	subwfb	(___awmod@dividend+1)^0,f,c
  8488  003648                     l3411:
  8489  003648  90D8               	bcf	status,0,c
  8490  00364A  320B               	rrcf	(___awmod@divisor+1)^0,f,c
  8491  00364C  320A               	rrcf	___awmod@divisor^0,f,c
  8492  00364E  2E0C               	decfsz	___awmod@counter^0,f,c
  8493  003650  EF15  F01B         	goto	l3407
  8494  003654                     l3415:
  8495  003654  500D               	movf	___awmod@sign^0,w,c
  8496  003656  B4D8               	btfsc	status,2,c
  8497  003658  EF30  F01B         	goto	u3851
  8498  00365C  EF32  F01B         	goto	u3850
  8499  003660                     u3851:
  8500  003660  EF36  F01B         	goto	l3419
  8501  003664                     u3850:
  8502  003664  6C08               	negf	___awmod@dividend^0,c
  8503  003666  1E09               	comf	(___awmod@dividend+1)^0,f,c
  8504  003668  B0D8               	btfsc	status,0,c
  8505  00366A  2A09               	incf	(___awmod@dividend+1)^0,f,c
  8506  00366C                     l3419:
  8507  00366C  C008  F008         	movff	___awmod@dividend,?___awmod
  8508  003670  C009  F009         	movff	___awmod@dividend+1,?___awmod+1
  8509  003674  0012               	return		;funcret
  8510  003676                     __end_of___awmod:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function ___awdiv *****************
  8514 ;; Defined at:
  8515 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  dividend        2    7[COMRAM] int 
  8518 ;;  divisor         2    9[COMRAM] int 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  quotient        2   13[COMRAM] int 
  8521 ;;  sign            1   12[COMRAM] unsigned char 
  8522 ;;  counter         1   11[COMRAM] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  2    7[COMRAM] int 
  8525 ;; Registers used:
  8526 ;;		wreg, status,2, status,0
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8532 ;;      Params:         4       0       0       0       0       0       0
  8533 ;;      Locals:         4       0       0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0
  8535 ;;      Totals:         8       0       0       0       0       0       0
  8536 ;;Total ram usage:        8 bytes
  8537 ;; Hardware stack levels used: 1
  8538 ;; Hardware stack levels required when called: 3
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_efgtoa
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text32
  8547  003440                     __ptext32:
  8548                           	callstack 0
  8549  003440                     ___awdiv:
  8550                           	callstack 23
  8551  003440  0E00               	movlw	0
  8552  003442  6E0D               	movwf	___awdiv@sign^0,c
  8553  003444  BE0B               	btfsc	(___awdiv@divisor+1)^0,7,c
  8554  003446  EF29  F01A         	goto	u3740
  8555  00344A  EF27  F01A         	goto	u3741
  8556  00344E                     u3741:
  8557  00344E  EF2F  F01A         	goto	l3351
  8558  003452                     u3740:
  8559  003452  6C0A               	negf	___awdiv@divisor^0,c
  8560  003454  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  8561  003456  B0D8               	btfsc	status,0,c
  8562  003458  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  8563  00345A  0E01               	movlw	1
  8564  00345C  6E0D               	movwf	___awdiv@sign^0,c
  8565  00345E                     l3351:
  8566  00345E  BE09               	btfsc	(___awdiv@dividend+1)^0,7,c
  8567  003460  EF36  F01A         	goto	u3750
  8568  003464  EF34  F01A         	goto	u3751
  8569  003468                     u3751:
  8570  003468  EF3C  F01A         	goto	l3357
  8571  00346C                     u3750:
  8572  00346C  6C08               	negf	___awdiv@dividend^0,c
  8573  00346E  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  8574  003470  B0D8               	btfsc	status,0,c
  8575  003472  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  8576  003474  0E01               	movlw	1
  8577  003476  1A0D               	xorwf	___awdiv@sign^0,f,c
  8578  003478                     l3357:
  8579  003478  0E00               	movlw	0
  8580  00347A  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  8581  00347C  0E00               	movlw	0
  8582  00347E  6E0E               	movwf	___awdiv@quotient^0,c
  8583  003480  500A               	movf	___awdiv@divisor^0,w,c
  8584  003482  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  8585  003484  B4D8               	btfsc	status,2,c
  8586  003486  EF47  F01A         	goto	u3761
  8587  00348A  EF49  F01A         	goto	u3760
  8588  00348E                     u3761:
  8589  00348E  EF71  F01A         	goto	l3379
  8590  003492                     u3760:
  8591  003492  0E01               	movlw	1
  8592  003494  6E0C               	movwf	___awdiv@counter^0,c
  8593  003496  EF51  F01A         	goto	l3365
  8594  00349A                     l3363:
  8595  00349A  90D8               	bcf	status,0,c
  8596  00349C  360A               	rlcf	___awdiv@divisor^0,f,c
  8597  00349E  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  8598  0034A0  2A0C               	incf	___awdiv@counter^0,f,c
  8599  0034A2                     l3365:
  8600  0034A2  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  8601  0034A4  EF56  F01A         	goto	u3771
  8602  0034A8  EF58  F01A         	goto	u3770
  8603  0034AC                     u3771:
  8604  0034AC  EF4D  F01A         	goto	l3363
  8605  0034B0                     u3770:
  8606  0034B0                     l3367:
  8607  0034B0  90D8               	bcf	status,0,c
  8608  0034B2  360E               	rlcf	___awdiv@quotient^0,f,c
  8609  0034B4  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  8610  0034B6  500A               	movf	___awdiv@divisor^0,w,c
  8611  0034B8  5C08               	subwf	___awdiv@dividend^0,w,c
  8612  0034BA  500B               	movf	(___awdiv@divisor+1)^0,w,c
  8613  0034BC  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  8614  0034BE  A0D8               	btfss	status,0,c
  8615  0034C0  EF64  F01A         	goto	u3781
  8616  0034C4  EF66  F01A         	goto	u3780
  8617  0034C8                     u3781:
  8618  0034C8  EF6B  F01A         	goto	l3375
  8619  0034CC                     u3780:
  8620  0034CC  500A               	movf	___awdiv@divisor^0,w,c
  8621  0034CE  5E08               	subwf	___awdiv@dividend^0,f,c
  8622  0034D0  500B               	movf	(___awdiv@divisor+1)^0,w,c
  8623  0034D2  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  8624  0034D4  800E               	bsf	___awdiv@quotient^0,0,c
  8625  0034D6                     l3375:
  8626  0034D6  90D8               	bcf	status,0,c
  8627  0034D8  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  8628  0034DA  320A               	rrcf	___awdiv@divisor^0,f,c
  8629  0034DC  2E0C               	decfsz	___awdiv@counter^0,f,c
  8630  0034DE  EF58  F01A         	goto	l3367
  8631  0034E2                     l3379:
  8632  0034E2  500D               	movf	___awdiv@sign^0,w,c
  8633  0034E4  B4D8               	btfsc	status,2,c
  8634  0034E6  EF77  F01A         	goto	u3791
  8635  0034EA  EF79  F01A         	goto	u3790
  8636  0034EE                     u3791:
  8637  0034EE  EF7D  F01A         	goto	l3383
  8638  0034F2                     u3790:
  8639  0034F2  6C0E               	negf	___awdiv@quotient^0,c
  8640  0034F4  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  8641  0034F6  B0D8               	btfsc	status,0,c
  8642  0034F8  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  8643  0034FA                     l3383:
  8644  0034FA  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  8645  0034FE  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  8646  003502  0012               	return		;funcret
  8647  003504                     __end_of___awdiv:
  8648                           	callstack 0
  8649                           
  8650 ;; *************** function _atoi *****************
  8651 ;; Defined at:
  8652 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8655 ;;		 -> STR_2(16), STR_1(23), 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  n               2   27[COMRAM] int 
  8658 ;;  neg             2   20[COMRAM] int 
  8659 ;; Return value:  Size  Location     Type
  8660 ;;                  2   14[COMRAM] int 
  8661 ;; Registers used:
  8662 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 0/0
  8665 ;;		On exit  : 0/0
  8666 ;;		Unchanged: 0/0
  8667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8668 ;;      Params:         2       0       0       0       0       0       0
  8669 ;;      Locals:         9       0       0       0       0       0       0
  8670 ;;      Temps:          4       0       0       0       0       0       0
  8671 ;;      Totals:        15       0       0       0       0       0       0
  8672 ;;Total ram usage:       15 bytes
  8673 ;; Hardware stack levels used: 1
  8674 ;; Hardware stack levels required when called: 4
  8675 ;; This function calls:
  8676 ;;		___wmul
  8677 ;;		_isdigit
  8678 ;;		_isspace
  8679 ;; This function is called by:
  8680 ;;		_vfpfcnvrt
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text33
  8685  002CAC                     __ptext33:
  8686                           	callstack 0
  8687  002CAC                     _atoi:
  8688                           	callstack 23
  8689  002CAC  0E00               	movlw	0
  8690  002CAE  6E1D               	movwf	(atoi@n+1)^0,c
  8691  002CB0  0E00               	movlw	0
  8692  002CB2  6E1C               	movwf	atoi@n^0,c
  8693  002CB4  0E00               	movlw	0
  8694  002CB6  6E16               	movwf	(atoi@neg+1)^0,c
  8695  002CB8  0E00               	movlw	0
  8696  002CBA  6E15               	movwf	atoi@neg^0,c
  8697  002CBC  EF62  F016         	goto	l4007
  8698  002CC0                     l4005:
  8699  002CC0  4A0F               	infsnz	atoi@s^0,f,c
  8700  002CC2  2A10               	incf	(atoi@s+1)^0,f,c
  8701  002CC4                     l4007:
  8702  002CC4  0E01               	movlw	1
  8703  002CC6  6E1B               	movwf	_atoi$1397^0,c
  8704  002CC8  C00F  FFF6         	movff	atoi@s,tblptrl
  8705  002CCC  C010  FFF7         	movff	atoi@s+1,tblptrh
  8706  002CD0                     	if	0	;tblptru may be non-zero
  8707  002CD0                     	endif
  8708  002CD0                     	if	0	;tblptru may be non-zero
  8709  002CD0                     	endif
  8710  002CD0  0008               	tblrd		*
  8711  002CD2  50F5               	movf	tablat,w,c
  8712  002CD4  0A20               	xorlw	32
  8713  002CD6  B4D8               	btfsc	status,2,c
  8714  002CD8  EF70  F016         	goto	u5081
  8715  002CDC  EF72  F016         	goto	u5080
  8716  002CE0                     u5081:
  8717  002CE0  EF8F  F016         	goto	l4015
  8718  002CE4                     u5080:
  8719  002CE4  0EF7               	movlw	247
  8720  002CE6  6E11               	movwf	??_atoi^0,c
  8721  002CE8  0EFF               	movlw	255
  8722  002CEA  6E12               	movwf	(??_atoi+1)^0,c
  8723  002CEC  C00F  FFF6         	movff	atoi@s,tblptrl
  8724  002CF0  C010  FFF7         	movff	atoi@s+1,tblptrh
  8725  002CF4                     	if	0	;tblptru may be non-zero
  8726  002CF4                     	endif
  8727  002CF4                     	if	0	;tblptru may be non-zero
  8728  002CF4                     	endif
  8729  002CF4  0008               	tblrd		*
  8730  002CF6  50F5               	movf	tablat,w,c
  8731  002CF8  6E13               	movwf	(??_atoi+2)^0,c
  8732  002CFA  6A14               	clrf	(??_atoi+3)^0,c
  8733  002CFC  5011               	movf	??_atoi^0,w,c
  8734  002CFE  2613               	addwf	(??_atoi+2)^0,f,c
  8735  002D00  5012               	movf	(??_atoi+1)^0,w,c
  8736  002D02  2214               	addwfc	(??_atoi+3)^0,f,c
  8737  002D04  5014               	movf	(??_atoi+3)^0,w,c
  8738  002D06  E109               	bnz	u5090
  8739  002D08  0E05               	movlw	5
  8740  002D0A  5C13               	subwf	(??_atoi+2)^0,w,c
  8741  002D0C  A0D8               	btfss	status,0,c
  8742  002D0E  EF8B  F016         	goto	u5091
  8743  002D12  EF8D  F016         	goto	u5090
  8744  002D16                     u5091:
  8745  002D16  EF8F  F016         	goto	l4015
  8746  002D1A                     u5090:
  8747  002D1A  0E00               	movlw	0
  8748  002D1C  6E1B               	movwf	_atoi$1397^0,c
  8749  002D1E                     l4015:
  8750  002D1E  C01B  F017         	movff	_atoi$1397,_atoi$1396
  8751  002D22  6A18               	clrf	(_atoi$1396+1)^0,c
  8752  002D24  5017               	movf	_atoi$1396^0,w,c
  8753  002D26  1018               	iorwf	(_atoi$1396+1)^0,w,c
  8754  002D28  A4D8               	btfss	status,2,c
  8755  002D2A  EF99  F016         	goto	u5101
  8756  002D2E  EF9B  F016         	goto	u5100
  8757  002D32                     u5101:
  8758  002D32  EF60  F016         	goto	l4005
  8759  002D36                     u5100:
  8760  002D36  EFA5  F016         	goto	l4025
  8761  002D3A                     l4021:
  8762  002D3A  0E00               	movlw	0
  8763  002D3C  6E16               	movwf	(atoi@neg+1)^0,c
  8764  002D3E  0E01               	movlw	1
  8765  002D40  6E15               	movwf	atoi@neg^0,c
  8766  002D42                     l4023:
  8767  002D42  4A0F               	infsnz	atoi@s^0,f,c
  8768  002D44  2A10               	incf	(atoi@s+1)^0,f,c
  8769  002D46  EFDA  F016         	goto	l4031
  8770  002D4A                     l4025:
  8771  002D4A  C00F  FFF6         	movff	atoi@s,tblptrl
  8772  002D4E  C010  FFF7         	movff	atoi@s+1,tblptrh
  8773  002D52                     	if	0	;tblptru may be non-zero
  8774  002D52                     	endif
  8775  002D52                     	if	0	;tblptru may be non-zero
  8776  002D52                     	endif
  8777  002D52  0008               	tblrd		*
  8778  002D54  50F5               	movf	tablat,w,c
  8779  002D56  6E11               	movwf	??_atoi^0,c
  8780  002D58  6A12               	clrf	(??_atoi+1)^0,c
  8781                           
  8782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8783                           ; Switch size 1, requested type "simple"
  8784                           ; Number of cases is 1, Range of values is 0 to 0
  8785                           ; switch strategies available:
  8786                           ; Name         Instructions Cycles
  8787                           ; simple_byte            4     3 (average)
  8788                           ;	Chosen strategy is simple_byte
  8789  002D5A  5012               	movf	(??_atoi+1)^0,w,c
  8790  002D5C  0A00               	xorlw	0	; case 0
  8791  002D5E  B4D8               	btfsc	status,2,c
  8792  002D60  EFB4  F016         	goto	l4539
  8793  002D64  EFDA  F016         	goto	l4031
  8794  002D68                     l4539:
  8795                           
  8796                           ; Switch size 1, requested type "simple"
  8797                           ; Number of cases is 2, Range of values is 43 to 45
  8798                           ; switch strategies available:
  8799                           ; Name         Instructions Cycles
  8800                           ; simple_byte            7     4 (average)
  8801                           ;	Chosen strategy is simple_byte
  8802  002D68  5011               	movf	??_atoi^0,w,c
  8803  002D6A  0A2B               	xorlw	43	; case 43
  8804  002D6C  B4D8               	btfsc	status,2,c
  8805  002D6E  EFA1  F016         	goto	l4023
  8806  002D72  0A06               	xorlw	6	; case 45
  8807  002D74  B4D8               	btfsc	status,2,c
  8808  002D76  EF9D  F016         	goto	l4021
  8809  002D7A  EFDA  F016         	goto	l4031
  8810  002D7E                     l4027:
  8811  002D7E  C01C  F008         	movff	atoi@n,___wmul@multiplier
  8812  002D82  C01D  F009         	movff	atoi@n+1,___wmul@multiplier+1
  8813  002D86  0E00               	movlw	0
  8814  002D88  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  8815  002D8A  0E0A               	movlw	10
  8816  002D8C  6E0A               	movwf	___wmul@multiplicand^0,c
  8817  002D8E  EC27  F01E         	call	___wmul	;wreg free
  8818  002D92  C00F  FFF6         	movff	atoi@s,tblptrl
  8819  002D96  C010  FFF7         	movff	atoi@s+1,tblptrh
  8820  002D9A                     	if	0	;tblptru may be non-zero
  8821  002D9A                     	endif
  8822  002D9A                     	if	0	;tblptru may be non-zero
  8823  002D9A                     	endif
  8824  002D9A  0008               	tblrd		*
  8825  002D9C  50F5               	movf	tablat,w,c
  8826  002D9E  5E08               	subwf	?___wmul^0,f,c
  8827  002DA0  0E00               	movlw	0
  8828  002DA2  5A09               	subwfb	(?___wmul+1)^0,f,c
  8829  002DA4  0E30               	movlw	48
  8830  002DA6  2408               	addwf	?___wmul^0,w,c
  8831  002DA8  6E1C               	movwf	atoi@n^0,c
  8832  002DAA  0E00               	movlw	0
  8833  002DAC  2009               	addwfc	(?___wmul+1)^0,w,c
  8834  002DAE  6E1D               	movwf	(atoi@n+1)^0,c
  8835  002DB0  EFA1  F016         	goto	l4023
  8836  002DB4                     l4031:
  8837  002DB4  0ED0               	movlw	208
  8838  002DB6  6E11               	movwf	??_atoi^0,c
  8839  002DB8  0EFF               	movlw	255
  8840  002DBA  6E12               	movwf	(??_atoi+1)^0,c
  8841  002DBC  C00F  FFF6         	movff	atoi@s,tblptrl
  8842  002DC0  C010  FFF7         	movff	atoi@s+1,tblptrh
  8843  002DC4                     	if	0	;tblptru may be non-zero
  8844  002DC4                     	endif
  8845  002DC4                     	if	0	;tblptru may be non-zero
  8846  002DC4                     	endif
  8847  002DC4  0008               	tblrd		*
  8848  002DC6  50F5               	movf	tablat,w,c
  8849  002DC8  6E13               	movwf	(??_atoi+2)^0,c
  8850  002DCA  6A14               	clrf	(??_atoi+3)^0,c
  8851  002DCC  5011               	movf	??_atoi^0,w,c
  8852  002DCE  2613               	addwf	(??_atoi+2)^0,f,c
  8853  002DD0  5012               	movf	(??_atoi+1)^0,w,c
  8854  002DD2  2214               	addwfc	(??_atoi+3)^0,f,c
  8855  002DD4  5014               	movf	(??_atoi+3)^0,w,c
  8856  002DD6  E10A               	bnz	u5110
  8857  002DD8  0E0A               	movlw	10
  8858  002DDA  5C13               	subwf	(??_atoi+2)^0,w,c
  8859  002DDC  A0D8               	btfss	status,0,c
  8860  002DDE  EFF3  F016         	goto	u5111
  8861  002DE2  EFF6  F016         	goto	u5110
  8862  002DE6                     u5111:
  8863  002DE6  0E01               	movlw	1
  8864  002DE8  EFF7  F016         	goto	u5120
  8865  002DEC                     u5110:
  8866  002DEC  0E00               	movlw	0
  8867  002DEE                     u5120:
  8868  002DEE  6E19               	movwf	_atoi$1398^0,c
  8869  002DF0  6A1A               	clrf	(_atoi$1398+1)^0,c
  8870  002DF2  5019               	movf	_atoi$1398^0,w,c
  8871  002DF4  101A               	iorwf	(_atoi$1398+1)^0,w,c
  8872  002DF6  A4D8               	btfss	status,2,c
  8873  002DF8  EF00  F017         	goto	u5131
  8874  002DFC  EF02  F017         	goto	u5130
  8875  002E00                     u5131:
  8876  002E00  EFBF  F016         	goto	l4027
  8877  002E04                     u5130:
  8878  002E04  5015               	movf	atoi@neg^0,w,c
  8879  002E06  1016               	iorwf	(atoi@neg+1)^0,w,c
  8880  002E08  A4D8               	btfss	status,2,c
  8881  002E0A  EF09  F017         	goto	u5141
  8882  002E0E  EF0B  F017         	goto	u5140
  8883  002E12                     u5141:
  8884  002E12  EF19  F017         	goto	l1055
  8885  002E16                     u5140:
  8886  002E16  C01C  F011         	movff	atoi@n,??_atoi
  8887  002E1A  C01D  F012         	movff	atoi@n+1,??_atoi+1
  8888  002E1E  1E11               	comf	??_atoi^0,f,c
  8889  002E20  1E12               	comf	(??_atoi+1)^0,f,c
  8890  002E22  4A11               	infsnz	??_atoi^0,f,c
  8891  002E24  2A12               	incf	(??_atoi+1)^0,f,c
  8892  002E26  C011  F00F         	movff	??_atoi,?_atoi
  8893  002E2A  C012  F010         	movff	??_atoi+1,?_atoi+1
  8894  002E2E  EF1D  F017         	goto	l1058
  8895  002E32                     l1055:
  8896  002E32  C01C  F00F         	movff	atoi@n,?_atoi
  8897  002E36  C01D  F010         	movff	atoi@n+1,?_atoi+1
  8898  002E3A                     l1058:
  8899  002E3A  0012               	return		;funcret
  8900  002E3C                     __end_of_atoi:
  8901                           	callstack 0
  8902                           
  8903 ;; *************** function _isspace *****************
  8904 ;; Defined at:
  8905 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  c               2    7[COMRAM] int 
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;		None
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  2    7[COMRAM] int 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8919 ;;      Params:         2       0       0       0       0       0       0
  8920 ;;      Locals:         1       0       0       0       0       0       0
  8921 ;;      Temps:          4       0       0       0       0       0       0
  8922 ;;      Totals:         7       0       0       0       0       0       0
  8923 ;;Total ram usage:        7 bytes
  8924 ;; Hardware stack levels used: 1
  8925 ;; Hardware stack levels required when called: 3
  8926 ;; This function calls:
  8927 ;;		Nothing
  8928 ;; This function is called by:
  8929 ;;		_atoi
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text34
  8934  0038EE                     __ptext34:
  8935                           	callstack 0
  8936  0038EE                     _isspace:
  8937                           	callstack 23
  8938  0038EE  0E01               	movlw	1
  8939  0038F0  6E0E               	movwf	_isspace$1436^0,c
  8940  0038F2  0E20               	movlw	32
  8941  0038F4  1808               	xorwf	isspace@c^0,w,c
  8942  0038F6  1009               	iorwf	(isspace@c+1)^0,w,c
  8943  0038F8  B4D8               	btfsc	status,2,c
  8944  0038FA  EF81  F01C         	goto	u4351
  8945  0038FE  EF83  F01C         	goto	u4350
  8946  003902                     u4351:
  8947  003902  EF9C  F01C         	goto	l3625
  8948  003906                     u4350:
  8949  003906  0EF7               	movlw	247
  8950  003908  6E0A               	movwf	??_isspace^0,c
  8951  00390A  0EFF               	movlw	255
  8952  00390C  6E0B               	movwf	(??_isspace+1)^0,c
  8953  00390E  C008  F00C         	movff	isspace@c,??_isspace+2
  8954  003912  C009  F00D         	movff	isspace@c+1,??_isspace+3
  8955  003916  500A               	movf	??_isspace^0,w,c
  8956  003918  260C               	addwf	(??_isspace+2)^0,f,c
  8957  00391A  500B               	movf	(??_isspace+1)^0,w,c
  8958  00391C  220D               	addwfc	(??_isspace+3)^0,f,c
  8959  00391E  500D               	movf	(??_isspace+3)^0,w,c
  8960  003920  E109               	bnz	u4360
  8961  003922  0E05               	movlw	5
  8962  003924  5C0C               	subwf	(??_isspace+2)^0,w,c
  8963  003926  A0D8               	btfss	status,0,c
  8964  003928  EF98  F01C         	goto	u4361
  8965  00392C  EF9A  F01C         	goto	u4360
  8966  003930                     u4361:
  8967  003930  EF9C  F01C         	goto	l3625
  8968  003934                     u4360:
  8969  003934  0E00               	movlw	0
  8970  003936  6E0E               	movwf	_isspace$1436^0,c
  8971  003938                     l3625:
  8972  003938  C00E  F008         	movff	_isspace$1436,?_isspace
  8973  00393C  6A09               	clrf	(?_isspace+1)^0,c
  8974  00393E  0012               	return		;funcret
  8975  003940                     __end_of_isspace:
  8976                           	callstack 0
  8977                           
  8978 ;; *************** function _isdigit *****************
  8979 ;; Defined at:
  8980 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  c               2    7[COMRAM] int 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  2    7[COMRAM] int 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8994 ;;      Params:         2       0       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0
  8996 ;;      Temps:          4       0       0       0       0       0       0
  8997 ;;      Totals:         6       0       0       0       0       0       0
  8998 ;;Total ram usage:        6 bytes
  8999 ;; Hardware stack levels used: 1
  9000 ;; Hardware stack levels required when called: 3
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		_vfpfcnvrt
  9005 ;;		_atoi
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text35
  9010  003BAA                     __ptext35:
  9011                           	callstack 0
  9012  003BAA                     _isdigit:
  9013                           	callstack 24
  9014  003BAA  0ED0               	movlw	208
  9015  003BAC  6E0A               	movwf	??_isdigit^0,c
  9016  003BAE  0EFF               	movlw	255
  9017  003BB0  6E0B               	movwf	(??_isdigit+1)^0,c
  9018  003BB2  C008  F00C         	movff	isdigit@c,??_isdigit+2
  9019  003BB6  C009  F00D         	movff	isdigit@c+1,??_isdigit+3
  9020  003BBA  500A               	movf	??_isdigit^0,w,c
  9021  003BBC  260C               	addwf	(??_isdigit+2)^0,f,c
  9022  003BBE  500B               	movf	(??_isdigit+1)^0,w,c
  9023  003BC0  220D               	addwfc	(??_isdigit+3)^0,f,c
  9024  003BC2  500D               	movf	(??_isdigit+3)^0,w,c
  9025  003BC4  E10A               	bnz	u4330
  9026  003BC6  0E0A               	movlw	10
  9027  003BC8  5C0C               	subwf	(??_isdigit+2)^0,w,c
  9028  003BCA  A0D8               	btfss	status,0,c
  9029  003BCC  EFEA  F01D         	goto	u4331
  9030  003BD0  EFED  F01D         	goto	u4330
  9031  003BD4                     u4331:
  9032  003BD4  0E01               	movlw	1
  9033  003BD6  EFEE  F01D         	goto	u4340
  9034  003BDA                     u4330:
  9035  003BDA  0E00               	movlw	0
  9036  003BDC                     u4340:
  9037  003BDC  6E08               	movwf	?_isdigit^0,c
  9038  003BDE  6A09               	clrf	(?_isdigit+1)^0,c
  9039  003BE0  0012               	return		;funcret
  9040  003BE2                     __end_of_isdigit:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function ___wmul *****************
  9044 ;; Defined at:
  9045 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  multiplier      2    7[COMRAM] unsigned int 
  9048 ;;  multiplicand    2    9[COMRAM] unsigned int 
  9049 ;; Auto vars:     Size  Location     Type
  9050 ;;  product         2   11[COMRAM] unsigned int 
  9051 ;; Return value:  Size  Location     Type
  9052 ;;                  2    7[COMRAM] unsigned int 
  9053 ;; Registers used:
  9054 ;;		wreg, status,2, status,0, prodl, prodh
  9055 ;; Tracked objects:
  9056 ;;		On entry : 0/0
  9057 ;;		On exit  : 0/0
  9058 ;;		Unchanged: 0/0
  9059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9060 ;;      Params:         4       0       0       0       0       0       0
  9061 ;;      Locals:         2       0       0       0       0       0       0
  9062 ;;      Temps:          0       0       0       0       0       0       0
  9063 ;;      Totals:         6       0       0       0       0       0       0
  9064 ;;Total ram usage:        6 bytes
  9065 ;; Hardware stack levels used: 1
  9066 ;; Hardware stack levels required when called: 3
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		_atoi
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           	psect	text36
  9075  003C4E                     __ptext36:
  9076                           	callstack 0
  9077  003C4E                     ___wmul:
  9078                           	callstack 23
  9079  003C4E  5008               	movf	___wmul@multiplier^0,w,c
  9080  003C50  020A               	mulwf	___wmul@multiplicand^0,c
  9081  003C52  CFF3 F00C          	movff	prodl,___wmul@product
  9082  003C56  CFF4 F00D          	movff	prodh,___wmul@product+1
  9083  003C5A  5008               	movf	___wmul@multiplier^0,w,c
  9084  003C5C  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  9085  003C5E  50F3               	movf	243,w,c
  9086  003C60  260D               	addwf	(___wmul@product+1)^0,f,c
  9087  003C62  5009               	movf	(___wmul@multiplier+1)^0,w,c
  9088  003C64  020A               	mulwf	___wmul@multiplicand^0,c
  9089  003C66  50F3               	movf	243,w,c
  9090  003C68  260D               	addwf	(___wmul@product+1)^0,f,c
  9091  003C6A  C00C  F008         	movff	___wmul@product,?___wmul
  9092  003C6E  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  9093  003C72  0012               	return		;funcret
  9094  003C74                     __end_of___wmul:
  9095                           	callstack 0
  9096                           
  9097 ;; *************** function ___xxtofl *****************
  9098 ;; Defined at:
  9099 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  sign            1    wreg     unsigned char 
  9102 ;;  val             4    7[COMRAM] long 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  sign            1   15[COMRAM] unsigned char 
  9105 ;;  arg             4   17[COMRAM] unsigned long 
  9106 ;;  exp             1   16[COMRAM] unsigned char 
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  4    7[COMRAM] unsigned char 
  9109 ;; Registers used:
  9110 ;;		wreg, status,2, status,0
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9116 ;;      Params:         4       0       0       0       0       0       0
  9117 ;;      Locals:         6       0       0       0       0       0       0
  9118 ;;      Temps:          4       0       0       0       0       0       0
  9119 ;;      Totals:        14       0       0       0       0       0       0
  9120 ;;Total ram usage:       14 bytes
  9121 ;; Hardware stack levels used: 1
  9122 ;; Hardware stack levels required when called: 3
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_main
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text37
  9131  002AF8                     __ptext37:
  9132                           	callstack 0
  9133  002AF8                     ___xxtofl:
  9134                           	callstack 27
  9135                           
  9136                           ;incstack = 0
  9137                           ;___xxtofl@sign stored from wreg
  9138  002AF8  6E10               	movwf	___xxtofl@sign^0,c
  9139  002AFA  5010               	movf	___xxtofl@sign^0,w,c
  9140  002AFC  B4D8               	btfsc	status,2,c
  9141  002AFE  EF83  F015         	goto	u5511
  9142  002B02  EF85  F015         	goto	u5510
  9143  002B06                     u5511:
  9144  002B06  EFA7  F015         	goto	l764
  9145  002B0A                     u5510:
  9146  002B0A  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  9147  002B0C  EF8C  F015         	goto	u5520
  9148  002B10  EF8A  F015         	goto	u5521
  9149  002B14                     u5521:
  9150  002B14  EFA7  F015         	goto	l764
  9151  002B18                     u5520:
  9152  002B18  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  9153  002B1C  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  9154  002B20  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  9155  002B24  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  9156  002B28  1E0C               	comf	??___xxtofl^0,f,c
  9157  002B2A  1E0D               	comf	(??___xxtofl+1)^0,f,c
  9158  002B2C  1E0E               	comf	(??___xxtofl+2)^0,f,c
  9159  002B2E  1E0F               	comf	(??___xxtofl+3)^0,f,c
  9160  002B30  2A0C               	incf	??___xxtofl^0,f,c
  9161  002B32  0E00               	movlw	0
  9162  002B34  220D               	addwfc	(??___xxtofl+1)^0,f,c
  9163  002B36  220E               	addwfc	(??___xxtofl+2)^0,f,c
  9164  002B38  220F               	addwfc	(??___xxtofl+3)^0,f,c
  9165  002B3A  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  9166  002B3E  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  9167  002B42  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  9168  002B46  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  9169  002B4A  EFAF  F015         	goto	l4291
  9170  002B4E                     l764:
  9171  002B4E  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  9172  002B52  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9173  002B56  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9174  002B5A  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9175  002B5E                     l4291:
  9176  002B5E  5008               	movf	___xxtofl@val^0,w,c
  9177  002B60  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  9178  002B62  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  9179  002B64  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  9180  002B66  A4D8               	btfss	status,2,c
  9181  002B68  EFB8  F015         	goto	u5531
  9182  002B6C  EFBA  F015         	goto	u5530
  9183  002B70                     u5531:
  9184  002B70  EFC4  F015         	goto	l4297
  9185  002B74                     u5530:
  9186  002B74  0E00               	movlw	0
  9187  002B76  6E08               	movwf	?___xxtofl^0,c
  9188  002B78  0E00               	movlw	0
  9189  002B7A  6E09               	movwf	(?___xxtofl+1)^0,c
  9190  002B7C  0E00               	movlw	0
  9191  002B7E  6E0A               	movwf	(?___xxtofl+2)^0,c
  9192  002B80  0E00               	movlw	0
  9193  002B82  6E0B               	movwf	(?___xxtofl+3)^0,c
  9194  002B84  EF55  F016         	goto	l767
  9195  002B88                     l4297:
  9196  002B88  0E96               	movlw	150
  9197  002B8A  6E11               	movwf	___xxtofl@exp^0,c
  9198  002B8C  EFCE  F015         	goto	l4301
  9199  002B90                     l4299:
  9200  002B90  2A11               	incf	___xxtofl@exp^0,f,c
  9201  002B92  90D8               	bcf	status,0,c
  9202  002B94  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  9203  002B96  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  9204  002B98  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  9205  002B9A  3212               	rrcf	___xxtofl@arg^0,f,c
  9206  002B9C                     l4301:
  9207  002B9C  0E00               	movlw	0
  9208  002B9E  1412               	andwf	___xxtofl@arg^0,w,c
  9209  002BA0  6E0C               	movwf	??___xxtofl^0,c
  9210  002BA2  0E00               	movlw	0
  9211  002BA4  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  9212  002BA6  6E0D               	movwf	(??___xxtofl+1)^0,c
  9213  002BA8  0E00               	movlw	0
  9214  002BAA  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  9215  002BAC  6E0E               	movwf	(??___xxtofl+2)^0,c
  9216  002BAE  0EFE               	movlw	254
  9217  002BB0  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  9218  002BB2  6E0F               	movwf	(??___xxtofl+3)^0,c
  9219  002BB4  500C               	movf	??___xxtofl^0,w,c
  9220  002BB6  100D               	iorwf	(??___xxtofl+1)^0,w,c
  9221  002BB8  100E               	iorwf	(??___xxtofl+2)^0,w,c
  9222  002BBA  100F               	iorwf	(??___xxtofl+3)^0,w,c
  9223  002BBC  A4D8               	btfss	status,2,c
  9224  002BBE  EFE3  F015         	goto	u5541
  9225  002BC2  EFE5  F015         	goto	u5540
  9226  002BC6                     u5541:
  9227  002BC6  EFC8  F015         	goto	l4299
  9228  002BCA                     u5540:
  9229  002BCA  EFF3  F015         	goto	l771
  9230  002BCE                     l4303:
  9231  002BCE  2A11               	incf	___xxtofl@exp^0,f,c
  9232  002BD0  0E01               	movlw	1
  9233  002BD2  2612               	addwf	___xxtofl@arg^0,f,c
  9234  002BD4  0E00               	movlw	0
  9235  002BD6  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  9236  002BD8  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  9237  002BDA  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  9238  002BDC  90D8               	bcf	status,0,c
  9239  002BDE  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  9240  002BE0  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  9241  002BE2  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  9242  002BE4  3212               	rrcf	___xxtofl@arg^0,f,c
  9243  002BE6                     l771:
  9244  002BE6  0E00               	movlw	0
  9245  002BE8  1412               	andwf	___xxtofl@arg^0,w,c
  9246  002BEA  6E0C               	movwf	??___xxtofl^0,c
  9247  002BEC  0E00               	movlw	0
  9248  002BEE  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  9249  002BF0  6E0D               	movwf	(??___xxtofl+1)^0,c
  9250  002BF2  0E00               	movlw	0
  9251  002BF4  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  9252  002BF6  6E0E               	movwf	(??___xxtofl+2)^0,c
  9253  002BF8  0EFF               	movlw	255
  9254  002BFA  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  9255  002BFC  6E0F               	movwf	(??___xxtofl+3)^0,c
  9256  002BFE  500C               	movf	??___xxtofl^0,w,c
  9257  002C00  100D               	iorwf	(??___xxtofl+1)^0,w,c
  9258  002C02  100E               	iorwf	(??___xxtofl+2)^0,w,c
  9259  002C04  100F               	iorwf	(??___xxtofl+3)^0,w,c
  9260  002C06  A4D8               	btfss	status,2,c
  9261  002C08  EF08  F016         	goto	u5551
  9262  002C0C  EF0A  F016         	goto	u5550
  9263  002C10                     u5551:
  9264  002C10  EFE7  F015         	goto	l4303
  9265  002C14                     u5550:
  9266  002C14  EF12  F016         	goto	l4311
  9267  002C18                     l4309:
  9268  002C18  0611               	decf	___xxtofl@exp^0,f,c
  9269  002C1A  90D8               	bcf	status,0,c
  9270  002C1C  3612               	rlcf	___xxtofl@arg^0,f,c
  9271  002C1E  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  9272  002C20  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  9273  002C22  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  9274  002C24                     l4311:
  9275  002C24  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  9276  002C26  EF17  F016         	goto	u5561
  9277  002C2A  EF19  F016         	goto	u5560
  9278  002C2E                     u5561:
  9279  002C2E  EF21  F016         	goto	l778
  9280  002C32                     u5560:
  9281  002C32  0E02               	movlw	2
  9282  002C34  6011               	cpfslt	___xxtofl@exp^0,c
  9283  002C36  EF1F  F016         	goto	u5571
  9284  002C3A  EF21  F016         	goto	u5570
  9285  002C3E                     u5571:
  9286  002C3E  EF0C  F016         	goto	l4309
  9287  002C42                     u5570:
  9288  002C42                     l778:
  9289  002C42  B011               	btfsc	___xxtofl@exp^0,0,c
  9290  002C44  EF26  F016         	goto	u5581
  9291  002C48  EF28  F016         	goto	u5580
  9292  002C4C                     u5581:
  9293  002C4C  EF29  F016         	goto	l4317
  9294  002C50                     u5580:
  9295  002C50  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  9296  002C52                     l4317:
  9297  002C52  90D8               	bcf	status,0,c
  9298  002C54  3211               	rrcf	___xxtofl@exp^0,f,c
  9299  002C56  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  9300  002C5A  6A0D               	clrf	(??___xxtofl+1)^0,c
  9301  002C5C  6A0E               	clrf	(??___xxtofl+2)^0,c
  9302  002C5E  6A0F               	clrf	(??___xxtofl+3)^0,c
  9303  002C60  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  9304  002C64  6A0E               	clrf	(??___xxtofl+2)^0,c
  9305  002C66  6A0D               	clrf	(??___xxtofl+1)^0,c
  9306  002C68  6A0C               	clrf	??___xxtofl^0,c
  9307  002C6A  500C               	movf	??___xxtofl^0,w,c
  9308  002C6C  1212               	iorwf	___xxtofl@arg^0,f,c
  9309  002C6E  500D               	movf	(??___xxtofl+1)^0,w,c
  9310  002C70  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  9311  002C72  500E               	movf	(??___xxtofl+2)^0,w,c
  9312  002C74  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  9313  002C76  500F               	movf	(??___xxtofl+3)^0,w,c
  9314  002C78  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  9315  002C7A  5010               	movf	___xxtofl@sign^0,w,c
  9316  002C7C  B4D8               	btfsc	status,2,c
  9317  002C7E  EF43  F016         	goto	u5591
  9318  002C82  EF45  F016         	goto	u5590
  9319  002C86                     u5591:
  9320  002C86  EF4D  F016         	goto	l4327
  9321  002C8A                     u5590:
  9322  002C8A  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  9323  002C8C  EF4C  F016         	goto	u5600
  9324  002C90  EF4A  F016         	goto	u5601
  9325  002C94                     u5601:
  9326  002C94  EF4D  F016         	goto	l4327
  9327  002C98                     u5600:
  9328  002C98  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  9329  002C9A                     l4327:
  9330  002C9A  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  9331  002C9E  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  9332  002CA2  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  9333  002CA6  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  9334  002CAA                     l767:
  9335  002CAA  0012               	return		;funcret
  9336  002CAC                     __end_of___xxtofl:
  9337                           	callstack 0
  9338                           
  9339 ;; *************** function _low_isr *****************
  9340 ;; Defined at:
  9341 ;;		line 140 in file "main.c"
  9342 ;; Parameters:    Size  Location     Type
  9343 ;;		None
  9344 ;; Auto vars:     Size  Location     Type
  9345 ;;		None
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1    wreg      void 
  9348 ;; Registers used:
  9349 ;;		None
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9355 ;;      Params:         0       0       0       0       0       0       0
  9356 ;;      Locals:         0       0       0       0       0       0       0
  9357 ;;      Temps:          1       0       0       0       0       0       0
  9358 ;;      Totals:         1       0       0       0       0       0       0
  9359 ;;Total ram usage:        1 bytes
  9360 ;; Hardware stack levels used: 1
  9361 ;; Hardware stack levels required when called: 2
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		Interrupt level 1
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	intcodelo
  9370  000018                     __pintcodelo:
  9371                           	callstack 0
  9372  000018                     _low_isr:
  9373                           	callstack 20
  9374                           
  9375                           ;incstack = 0
  9376  000018  8076               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9377  00001A  CFE0 F007          	movff	bsr,??_low_isr
  9378  00001E  C007  FFE0         	movff	??_low_isr,bsr
  9379  000022  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9380  000024  0010               	retfie	
  9381  000026                     __end_of_low_isr:
  9382                           	callstack 0
  9383                           
  9384 ;; *************** function _high_isr *****************
  9385 ;; Defined at:
  9386 ;;		line 131 in file "main.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      void 
  9393 ;; Registers used:
  9394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9400 ;;      Params:         0       0       0       0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0       0
  9402 ;;      Temps:          2       0       0       0       0       0       0
  9403 ;;      Totals:         2       0       0       0       0       0       0
  9404 ;;Total ram usage:        2 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; Hardware stack levels required when called: 1
  9407 ;; This function calls:
  9408 ;;		_uart_receiver
  9409 ;; This function is called by:
  9410 ;;		Interrupt level 2
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           	psect	intcode
  9415  000008                     __pintcode:
  9416                           	callstack 0
  9417  000008                     _high_isr:
  9418                           	callstack 20
  9419                           
  9420                           ;incstack = 0
  9421  000008  8276               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9422  00000A  ED48  F01D         	call	int_func,f	;refresh shadow registers
  9423                           
  9424                           	psect	intcode_body
  9425  003A90                     __pintcode_body:
  9426                           	callstack 20
  9427  003A90                     int_func:
  9428                           	callstack 20
  9429  003A90  0006               	pop		; remove dummy address from shadow register refresh
  9430  003A92  CFD9 F005          	movff	fsr2l,??_high_isr
  9431  003A96  CFDA F006          	movff	fsr2h,??_high_isr+1
  9432  003A9A                     
  9433                           ;main.c: 133:     if(PIR1bits.RCIF){
  9434  003A9A  AA9E               	btfss	158,5,c	;volatile
  9435  003A9C  EF52  F01D         	goto	i2u564_41
  9436  003AA0  EF54  F01D         	goto	i2u564_40
  9437  003AA4                     i2u564_41:
  9438  003AA4  EF5F  F01D         	goto	i2l101
  9439  003AA8                     i2u564_40:
  9440  003AA8                     
  9441                           ;main.c: 134:         uart_receiver(&data,&got_data_bool);
  9442  003AA8  0E75               	movlw	low _data
  9443  003AAA  6E01               	movwf	uart_receiver@c^0,c
  9444  003AAC  0E00               	movlw	high _data
  9445  003AAE  6E02               	movwf	(uart_receiver@c+1)^0,c
  9446  003AB0  0E74               	movlw	low _got_data_bool
  9447  003AB2  6E03               	movwf	uart_receiver@rx_flag^0,c
  9448  003AB4  0E00               	movlw	high _got_data_bool
  9449  003AB6  6E04               	movwf	(uart_receiver@rx_flag+1)^0,c
  9450  003AB8  EC08  F01D         	call	_uart_receiver	;wreg free
  9451  003ABC                     
  9452                           ;main.c: 135:        PIR1bits.RCIF=0;
  9453  003ABC  9A9E               	bcf	158,5,c	;volatile
  9454  003ABE                     i2l101:
  9455  003ABE  C006  FFDA         	movff	??_high_isr+1,fsr2h
  9456  003AC2  C005  FFD9         	movff	??_high_isr,fsr2l
  9457  003AC6  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9458  003AC8  0011               	retfie		f
  9459  003ACA                     __end_of_high_isr:
  9460                           	callstack 0
  9461                           
  9462 ;; *************** function _uart_receiver *****************
  9463 ;; Defined at:
  9464 ;;		line 45 in file "main.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  c               2    0[COMRAM] PTR unsigned char 
  9467 ;;		 -> data(1), 
  9468 ;;  rx_flag         2    2[COMRAM] PTR _Bool 
  9469 ;;		 -> got_data_bool(1), 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;  er              1    0        unsigned char 
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1    wreg      void 
  9474 ;; Registers used:
  9475 ;;		wreg, fsr2l, fsr2h
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9481 ;;      Params:         4       0       0       0       0       0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0
  9484 ;;      Totals:         4       0       0       0       0       0       0
  9485 ;;Total ram usage:        4 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_high_isr
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text40
  9495  003A10                     __ptext40:
  9496                           	callstack 0
  9497  003A10                     _uart_receiver:
  9498                           	callstack 20
  9499  003A10                     
  9500                           ;main.c: 47:     if(RCSTAbits.FERR){
  9501  003A10  A4AB               	btfss	171,2,c	;volatile
  9502  003A12  EF0D  F01D         	goto	i2u548_41
  9503  003A16  EF0F  F01D         	goto	i2u548_40
  9504  003A1A                     i2u548_41:
  9505  003A1A  EF12  F01D         	goto	i2l58
  9506  003A1E                     i2u548_40:
  9507  003A1E  50AE               	movf	174,w,c	;volatile
  9508                           
  9509                           ;main.c: 49:     }else if(RCSTAbits.OERR){
  9510  003A20  EF29  F01D         	goto	i2l62
  9511  003A24                     i2l58:
  9512  003A24  A2AB               	btfss	171,1,c	;volatile
  9513  003A26  EF17  F01D         	goto	i2u549_41
  9514  003A2A  EF19  F01D         	goto	i2u549_40
  9515  003A2E                     i2u549_41:
  9516  003A2E  EF1D  F01D         	goto	i2l4261
  9517  003A32                     i2u549_40:
  9518  003A32                     
  9519                           ;main.c: 50:         RCSTAbits.CREN=0;
  9520  003A32  98AB               	bcf	171,4,c	;volatile
  9521                           
  9522                           ;main.c: 51:         RCSTAbits.CREN=1;
  9523  003A34  88AB               	bsf	171,4,c	;volatile
  9524                           
  9525                           ;main.c: 52:     }else{
  9526  003A36  EF29  F01D         	goto	i2l62
  9527  003A3A                     i2l4261:
  9528                           
  9529                           ;main.c: 53:         *c = RCREG;
  9530  003A3A  C001  FFD9         	movff	uart_receiver@c,fsr2l
  9531  003A3E  C002  FFDA         	movff	uart_receiver@c+1,fsr2h
  9532  003A42  CFAE FFDF          	movff	4014,indf2	;volatile
  9533  003A46                     
  9534                           ;main.c: 54:         *rx_flag = 1;
  9535  003A46  C003  FFD9         	movff	uart_receiver@rx_flag,fsr2l
  9536  003A4A  C004  FFDA         	movff	uart_receiver@rx_flag+1,fsr2h
  9537  003A4E  0E01               	movlw	1
  9538  003A50  6EDF               	movwf	indf2,c
  9539  003A52                     i2l62:
  9540  003A52  0012               	return		;funcret
  9541  003A54                     __end_of_uart_receiver:
  9542                           	callstack 0
  9543                           
  9544                           	psect	rparam
  9545  0000                     
  9546                           	psect	temp
  9547  000076                     btemp:
  9548                           	callstack 0
  9549  000076                     	ds	1
  9550  0000                     int$flags	set	btemp
  9551  0000                     wtemp8	set	btemp+1
  9552  0000                     ttemp5	set	btemp+1
  9553  0000                     ttemp6	set	btemp+4
  9554  0000                     ttemp7	set	btemp+8
  9555                           
  9556                           	psect	idloc
  9557                           
  9558                           ;Config register IDLOC0 @ 0x200000
  9559                           ;	unspecified, using default values
  9560  200000                     	org	2097152
  9561  200000  FF                 	db	255
  9562                           
  9563                           ;Config register IDLOC1 @ 0x200001
  9564                           ;	unspecified, using default values
  9565  200001                     	org	2097153
  9566  200001  FF                 	db	255
  9567                           
  9568                           ;Config register IDLOC2 @ 0x200002
  9569                           ;	unspecified, using default values
  9570  200002                     	org	2097154
  9571  200002  FF                 	db	255
  9572                           
  9573                           ;Config register IDLOC3 @ 0x200003
  9574                           ;	unspecified, using default values
  9575  200003                     	org	2097155
  9576  200003  FF                 	db	255
  9577                           
  9578                           ;Config register IDLOC4 @ 0x200004
  9579                           ;	unspecified, using default values
  9580  200004                     	org	2097156
  9581  200004  FF                 	db	255
  9582                           
  9583                           ;Config register IDLOC5 @ 0x200005
  9584                           ;	unspecified, using default values
  9585  200005                     	org	2097157
  9586  200005  FF                 	db	255
  9587                           
  9588                           ;Config register IDLOC6 @ 0x200006
  9589                           ;	unspecified, using default values
  9590  200006                     	org	2097158
  9591  200006  FF                 	db	255
  9592                           
  9593                           ;Config register IDLOC7 @ 0x200007
  9594                           ;	unspecified, using default values
  9595  200007                     	org	2097159
  9596  200007  FF                 	db	255
  9597                           
  9598                           	psect	config
  9599                           
  9600                           ; Padding undefined space
  9601  300000                     	org	3145728
  9602  300000  FF                 	db	255
  9603                           
  9604                           ;Config register CONFIG1H @ 0x300001
  9605                           ;	Oscillator Selection bits
  9606                           ;	OSC = HS, HS oscillator
  9607                           ;	Fail-Safe Clock Monitor Enable bit
  9608                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9609                           ;	Internal/External Oscillator Switchover bit
  9610                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9611  300001                     	org	3145729
  9612  300001  02                 	db	2
  9613                           
  9614                           ;Config register CONFIG2L @ 0x300002
  9615                           ;	Power-up Timer Enable bit
  9616                           ;	PWRT = OFF, PWRT disabled
  9617                           ;	Brown-out Reset Enable bits
  9618                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  9619                           ;	Brown Out Reset Voltage bits
  9620                           ;	BORV = 3, Minimum setting
  9621  300002                     	org	3145730
  9622  300002  19                 	db	25
  9623                           
  9624                           ;Config register CONFIG2H @ 0x300003
  9625                           ;	Watchdog Timer Enable bit
  9626                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9627                           ;	Watchdog Timer Postscale Select bits
  9628                           ;	WDTPS = 32768, 1:32768
  9629  300003                     	org	3145731
  9630  300003  1E                 	db	30
  9631                           
  9632                           ; Padding undefined space
  9633  300004                     	org	3145732
  9634  300004  FF                 	db	255
  9635                           
  9636                           ;Config register CONFIG3H @ 0x300005
  9637                           ;	CCP2 MUX bit
  9638                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9639                           ;	PORTB A/D Enable bit
  9640                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9641                           ;	Low-Power Timer1 Oscillator Enable bit
  9642                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9643                           ;	MCLR Pin Enable bit
  9644                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  9645  300005                     	org	3145733
  9646  300005  01                 	db	1
  9647                           
  9648                           ;Config register CONFIG4L @ 0x300006
  9649                           ;	Stack Full/Underflow Reset Enable bit
  9650                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9651                           ;	Single-Supply ICSP Enable bit
  9652                           ;	LVP = OFF, Single-Supply ICSP disabled
  9653                           ;	Extended Instruction Set Enable bit
  9654                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9655                           ;	Background Debugger Enable bit
  9656                           ;	DEBUG = 0x1, unprogrammed default
  9657  300006                     	org	3145734
  9658  300006  81                 	db	129
  9659                           
  9660                           ; Padding undefined space
  9661  300007                     	org	3145735
  9662  300007  FF                 	db	255
  9663                           
  9664                           ;Config register CONFIG5L @ 0x300008
  9665                           ;	Code Protection bit
  9666                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  9667                           ;	Code Protection bit
  9668                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  9669                           ;	Code Protection bit
  9670                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  9671                           ;	Code Protection bit
  9672                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  9673  300008                     	org	3145736
  9674  300008  0F                 	db	15
  9675                           
  9676                           ;Config register CONFIG5H @ 0x300009
  9677                           ;	Boot Block Code Protection bit
  9678                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9679                           ;	Data EEPROM Code Protection bit
  9680                           ;	CPD = OFF, Data EEPROM not code-protected
  9681  300009                     	org	3145737
  9682  300009  C0                 	db	192
  9683                           
  9684                           ;Config register CONFIG6L @ 0x30000A
  9685                           ;	Write Protection bit
  9686                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  9687                           ;	Write Protection bit
  9688                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  9689                           ;	Write Protection bit
  9690                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  9691                           ;	Write Protection bit
  9692                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  9693  30000A                     	org	3145738
  9694  30000A  0F                 	db	15
  9695                           
  9696                           ;Config register CONFIG6H @ 0x30000B
  9697                           ;	Configuration Register Write Protection bit
  9698                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9699                           ;	Boot Block Write Protection bit
  9700                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  9701                           ;	Data EEPROM Write Protection bit
  9702                           ;	WRTD = OFF, Data EEPROM not write-protected
  9703  30000B                     	org	3145739
  9704  30000B  E0                 	db	224
  9705                           
  9706                           ;Config register CONFIG7L @ 0x30000C
  9707                           ;	Table Read Protection bit
  9708                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  9709                           ;	Table Read Protection bit
  9710                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  9711                           ;	Table Read Protection bit
  9712                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  9713                           ;	Table Read Protection bit
  9714                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9715  30000C                     	org	3145740
  9716  30000C  0F                 	db	15
  9717                           
  9718                           ;Config register CONFIG7H @ 0x30000D
  9719                           ;	Boot Block Table Read Protection bit
  9720                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9721  30000D                     	org	3145741
  9722  30000D  40                 	db	64
  9723                           tosu	equ	0xFFF
  9724                           tosh	equ	0xFFE
  9725                           tosl	equ	0xFFD
  9726                           stkptr	equ	0xFFC
  9727                           pclatu	equ	0xFFB
  9728                           pclath	equ	0xFFA
  9729                           pcl	equ	0xFF9
  9730                           tblptru	equ	0xFF8
  9731                           tblptrh	equ	0xFF7
  9732                           tblptrl	equ	0xFF6
  9733                           tablat	equ	0xFF5
  9734                           prodh	equ	0xFF4
  9735                           prodl	equ	0xFF3
  9736                           indf0	equ	0xFEF
  9737                           postinc0	equ	0xFEE
  9738                           postdec0	equ	0xFED
  9739                           preinc0	equ	0xFEC
  9740                           plusw0	equ	0xFEB
  9741                           fsr0h	equ	0xFEA
  9742                           fsr0l	equ	0xFE9
  9743                           wreg	equ	0xFE8
  9744                           indf1	equ	0xFE7
  9745                           postinc1	equ	0xFE6
  9746                           postdec1	equ	0xFE5
  9747                           preinc1	equ	0xFE4
  9748                           plusw1	equ	0xFE3
  9749                           fsr1h	equ	0xFE2
  9750                           fsr1l	equ	0xFE1
  9751                           bsr	equ	0xFE0
  9752                           indf2	equ	0xFDF
  9753                           postinc2	equ	0xFDE
  9754                           postdec2	equ	0xFDD
  9755                           preinc2	equ	0xFDC
  9756                           plusw2	equ	0xFDB
  9757                           fsr2h	equ	0xFDA
  9758                           fsr2l	equ	0xFD9
  9759                           status	equ	0xFD8

Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         360
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    109     117
    BANK0           128     81      97
    BANK1           256      0      80
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK2[256]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK2[256]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1184_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK2[256]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK2[256]), 

    uart_send_string@c	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK2[256]), 

    uart_receiver@rx_flag	PTR _Bool  size(2) Largest target is 1
		 -> got_data_bool(COMRAM[1]), 

    uart_receiver@c	PTR unsigned char  size(2) Largest target is 1
		 -> data(COMRAM[1]), 

    uart_send@c	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK2[256]), 


Critical Paths under _main in COMRAM

    _uart_send_string->_uart_send
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_uart_receiver

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   39561
                                             78 BANK0      3     3      0
                            ___flmul
                           ___xxtofl
                            _sprintf
                          _uart_init
                   _uart_send_string
 ---------------------------------------------------------------------------------
 (1) _uart_send_string                                     3     1      2     416
                                              9 COMRAM     3     1      2
                          _uart_send
 ---------------------------------------------------------------------------------
 (2) _uart_send                                            2     0      2     174
                                              7 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            8     0      8     414
                                              7 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   35525
                                             62 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34829
                                            107 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   34230
                                             73 COMRAM    34    28      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5327
                                             34 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                             13 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              7 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22620
                                             58 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                             13 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              7 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              7 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             32 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              7 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              7 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              7 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             46 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              7 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              7 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              7 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                             14 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              7 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              7 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                              1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            2     2      0     197
                                              4 COMRAM     2     2      0
                      _uart_receiver
 ---------------------------------------------------------------------------------
 (11) _uart_receiver                                       5     1      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower
   _uart_init
   _uart_send_string
     _uart_send

 _low_isr (ROOT)

 _high_isr (ROOT)
   _uart_receiver

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     51      61       5       75.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6D      75       1       92.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     226      15        0.0%
DATA                 0      0     226       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 10 12:08:16 2021

             ___fldiv@aexp 0020               ___fldiv@bexp 001F               ___fldiv@sign 0018  
 __end_of_uart_send_string 3B02                         l52 3C86                         l53 3C84  
                       l55 3C94                         l49 3C16                         l74 3B00  
                       l90 2E96               ___awdiv@sign 000D                         bsr 000FE0  
      ___wmul@multiplicand 000A                        l109 3C72                        l340 3502  
                      l406 309C                        l353 3674                        l702 24B6  
                      l374 315A                        l383 3BA8                        l704 252E  
                      l368 371E                        l705 251C                        l730 2108  
                      l379 31A0                        l723 1F12                        l740 2238  
                      l732 2180                        l733 216E                        l637 1B7C  
                      l901 0E68                        l654 1C96                        l646 1E4C  
                      l638 1B6A                        l727 2276                        l663 1D66  
                      l639 1B30                        l664 1D54                        l832 3548  
                      l771 2BE6                        l691 2610                        l835 358A  
                      l764 2B4E                        l693 2470                        l837 35C4  
                      l767 2CAA                        l679 39CA                        l855 1294  
                      l935 2648                        l696 2434                        l960 28E4  
                      l944 26E6                        l873 0A28                        l937 2650  
                      l778 2C42                        l787 38EC                        l958 2882  
                      l974 1386                        l999 198C                        _pad 3504  
             ___awmod@sign 000D            ??_uart_receiver 0005                        wreg 000FE8  
             ___flmul@aexp 0027               ___flmul@bexp 0028               ___flmul@sign 0022  
             ___flmul@temp 002D               ___flmul@prod 0029               ___fltol@exp1 0011  
                     l1006 17F2                       l1015 3778                       l1120 3C96  
                     l1016 3780                       l1026 329E                       l1132 3C4C  
                     l1109 343E                       l1117 3A0E                       l1126 389A  
                     l1055 2E32                       l1151 37E0                       l1080 3BE0  
                     l1064 2AF6                       l1136 3374                       l3001 1D4C  
                     l1058 2E3A                       l1146 37D8                       l1074 3A8E  
                     l1170 3B38                       l3011 1DCA                       l1067 2A3A  
                     l1164 383E                       l3101 232A                       l3021 1E10  
                     l3005 1D76                       l3013 1DCC                       l1094 3B70  
                     l3111 236A                       l3103 232C                       l3031 1E3A  
                     l3023 1E1E                       l3015 1DDC                       l3007 1D82  
                     l1159 3836                       l1088 393E                       l3121 239A  
                     l3113 2372                       l3105 2334                       l3033 1E3C  
                     l3025 1E24                       l3017 1DEC                       l3009 1D90  
                     l3041 39EA                       l4011 2CE4                       l4003 2CAC  
                     l3131 23D8                       l3123 239A                       l3115 2376  
                     l3107 2344                       l3211 1E68                       l3027 1E26  
                     l3019 1E0C                       l3043 39EE                       l3051 3C40  
                     l4021 2D3A                       l4013 2D1A                       l4005 2CC0  
                     l3141 2424                       l3133 23E8                       l3109 235A  
                     l3301 2138                       l3221 1EA0                       l3213 1E6A  
                     l3029 1E2C                       l3037 39CC                       l3045 3C18  
                     l4101 1374                       l3063 3C4E                       l4031 2DB4  
                     l4023 2D42                       l4015 2D1E                       l4007 2CC4  
                     l3151 246E                       l3143 2432                       l3135 23F8  
                     l3127 23AE                       l3119 238A                       l3071 2284  
                     l3311 21AA                       l3303 2166                       l3231 1ECC  
                     l3223 1EB0                       l3215 1E7A                       l3207 1E4E  
                     l3039 39D8                       l3047 3C24                       l3055 3B3A  
                     l4111 13FE                       l4103 1394                       l3065 3C6A  
                     l4025 2D4A                       l4009 2CC8                       l3401 360C  
                     l3161 24B4                       l3153 2480                       l3145 243E  
                     l3137 2400                       l3129 23C8                       l3081 22C4  
                     l3073 2292                       l3321 2220                       l3313 21D4  
                     l3241 1F22                       l3233 1EDC                       l3225 1EB6  
                     l3217 1E8A                       l3209 1E5A                       l3049 3C28  
                     l4201 1930                       l4121 1480                       l4113 140C  
                     l4105 1396                       l4035 2DF2                       l4027 2D7E  
                     l4019 2D24                       l3411 3648                       l3403 3614  
                     l3171 2514                       l3155 2496                       l3163 24C6  
                     l3147 245C                       l3139 2410                       l3091 22EA  
                     l3083 22C6                       l3075 2294                       l3323 223C  
                     l3331 2262                       l3307 2190                       l3315 21D8  
                     l3251 1F5C                       l3243 1F32                       l3235 1EEC  
                     l3227 1EBC                       l3219 1E9A                       l4051 32D6  
                     l3059 3B02                       l4131 14F0                       l4115 142C  
                     l4123 1492                       l4107 13BA                       l4211 1956  
                     l4301 2B9C                       l4037 2E04                       l3413 364E  
                     l3405 361C                       l3181 2582                       l3165 24D4  
                     l3157 249C                       l3149 245E                       l3093 22F8  
                     l3077 22A4                       l3085 22CE                       l3069 2278  
                     l3333 2266                       l3325 224C                       l3317 21F2  
                     l3309 219C                       l3261 1FAE                       l3253 1F72  
                     l3237 1EFC                       l3229 1ECA                       l3501 3050  
                     l4061 3352                       l4053 32E4                       l4045 32A0  
                     l4213 197A                       l4205 193C                       l4141 159E  
                     l4133 152A                       l4125 14B6                       l4117 143A  
                     l4109 13F0                       l4311 2C24                       l4303 2BCE  
                     l4039 2E16                       l3351 345E                       l3343 3440  
                     l3407 362A                       l3415 3654                       l3191 25EC  
                     l3175 253E                       l3183 2586                       l3167 24D8  
                     l3159 24A6                       l3095 22FA                       l3087 22DE  
                     l3079 22B4                       l3431 36F2                       l3423 3676  
                     l3327 225A                       l3319 2206                       l3271 1FF4  
                     l3263 1FBC                       l3255 1F7E                       l3247 1F46  
                     l3239 1F02                       l3503 305C                       l4055 32FC  
                     l4047 32CA                       l4207 194A                       l4151 1620  
                     l4135 154A                       l4127 14BE                       l4143 15B0  
                     l4071 12D8                       l4223 3C74                       l4321 2C7A  
                     l4313 2C32                       l4305 2BD0                       l3361 3492  
                     l3353 346C                       l3345 3444                       l3417 3664  
                     l3409 3640                       l3193 25F0                       l3185 25A0  
                     l3177 254A                       l3169 24E6                       l3097 230A  
                     l3089 22E4                       l3433 3716                       l3425 36A4  
                     l3441 30CC                       l3329 225C                       l3281 2062  
                     l3273 200E                       l3265 1FC8                       l3257 1F96  
                     l3249 1F52                       l3337 3986                       l3505 306C  
                     l3521 3540                       l3513 3504                       l4057 3318  
                     l4161 16B6                       l4153 1650                       l4145 15D0  
                     l4137 1558                       l4129 14CC                       l4073 12DC  
                     l4065 1296                       l4241 3BF0                       l4233 3BE2  
                     l4323 2C8A                       l4315 2C50                       l4307 2BDC  
                     l3371 34CC                       l3363 349A                       l3355 3474  
                     l3347 3452                       l3419 366C                       l3195 25FE  
                     l3187 25B6                       l3179 2558                       l3099 231A  
                     l3435 371C                       l3427 36B4                       l3451 313A  
                     l3443 30DC                       l3291 20F8                       l3283 208C  
                     l3275 201E                       l3267 1FD8                       l3259 1FA2  
                     l3339 3996                       l3507 307C                       l3531 35AC  
                     l3523 3554                       l3515 3512                       l4059 332A  
                     l3603 37E2                       l4171 177C                       l4155 1662  
                     l4147 15E0                       l4091 130E                       l4083 1302  
                     l4075 12E8                       l4067 12BA                       l4251 3C12  
                     l4243 3BF2                       l4235 3BE6                       l4325 2C98  
                     l4317 2C52                       l4309 2C18                       l3613 3BAA  
                     l3621 3906                       l3381 34F2                       l3373 34D4  
                     l3365 34A2                       l3357 3478                       l3349 345A  
                     l3197 2604                       l3189 25D0                       l3429 36E2  
                     l3453 3148                       l3445 310A                       l3293 2106  
                     l3285 20C2                       l3277 203A                       l3269 1FE4  
                     l3461 3B72                       l2901 1AB6                       l3509 308C  
                     l3541 3228                       l2821 3376                       l3525 3568  
                     l3517 3526                       l3701 08C0                       l4173 178E  
                     l4181 1806                       l4157 1678                       l4165 16E2  
                     l4149 1610                       l4077 12EA                       l4069 12C8  
                     l4253 3C14                       l4245 3BFC                       l4237 3BEA  
                     l4327 2C9A                       l4319 2C56                       l3623 3934  
                     l3383 34FA                       l3375 34D6                       l3367 34B0  
                     l3359 3480                       l3391 35D8                       l3199 2606  
                     l3455 3198                       l3447 311A                       l3439 309E  
                     l3295 2118                       l3287 20D0                       l3279 2046  
                     l3463 3B88                       l2911 1ACA                       l2903 1ABA  
                     l3471 2FAE                       l3543 3234                       l3535 31A2  
                     l2831 33F8                       l2823 3388                       l3527 356C  
                     l3519 3534                       l3711 0990                       l3703 08F4  
                     l3631 0646                       l3607 3818                       l4191 18AE  
                     l4183 182A                       l4175 17C2                       l4167 1710  
                     l4159 1686                       l4095 1314                       l4087 1308  
                     l4079 12FC                       l4431 3720                       l4247 3C06  
                     l4239 3BEE                       l4271 3AE4                       l3625 3938  
                     l3617 38EE                       l3377 34DC                       l3369 34B6  
                     l3393 35E0                       l3457 319E                       l3449 3128  
                     l3297 2126                       l3289 20EE                       l3465 3B98  
                     l2921 1B28                       l2905 1ABE                       l2913 1ACE  
                     l2841 19AA                       l3481 2FFE                       l3553 3296  
                     l3537 31C2                       l2825 339A                       l3529 3598  
                     l3561 3782                       l3801 0E2C                       l3721 09FA  
                     l3705 08FA                       l3713 09C2                       l3641 069A  
                     l3633 0656                       l3609 382A                       l4185 184E  
                     l4433 3728                       l4441 38AE                       l4249 3C10  
                     l4265 3ACA                       l4291 2B5E                       l3619 38F2  
                     l3379 34E2                       l3395 35E4                       l3387 35C6  
                     l3299 212A                       l2931 1B5E                       l2923 1B3E  
                     l2915 1AD2                       l2907 1AC2                       l2843 19BA  
                     l2851 19E4                       l2835 198E                       l3491 3028  
                     l3483 3002                       l3475 2FC2                       l3539 3200  
                     l3547 3240                       l3571 28E6                       l2827 33A4  
                     l3811 0E84                       l3803 0E30                       l3723 0A02  
                     l3715 09D2                       l3707 0954                       l3651 06E0  
                     l3643 06A2                       l3635 0664                       l4187 1864  
                     l4195 18EA                       l4099 1320                       l4435 3736  
                     l4443 38B6                       l4267 3AD2                       l4451 2E3C  
                     l4293 2B74                       l4285 2AFA                       l3397 35F2  
                     l3389 35CA                       l2941 1BAE                       l2933 1B68  
                     l2925 1B4A                       l2917 1AFC                       l2909 1AC6  
                     l2861 1A14                       l2853 19F4                       l2845 19CA  
                     l2837 199A                       l3493 3032                       l3485 3010  
                     l3477 2FEC                       l3469 2F98                       l3549 3252  
                     l3573 2906                       l2829 33C2                       l3557 3840  
                     l3565 37B8                       l3901 11A2                       l3821 0F2A  
                     l3813 0EE8                       l3805 0E40                       l3741 0AB2  
                     l3733 0A46                       l3725 0A1C                       l3717 09D6  
                     l3709 0988                       l3661 071C                       l3653 06E8  
                     l3645 06B4                       l3637 066C                       l3629 063C  
                     l4197 190E                       l4189 1872                       l4437 375C  
                     l4445 38BE                       l4269 3AE2                       l4461 2E6E  
                     l4453 2E44                       ?_pad 0018                       l4287 2B0A  
                     l3399 35FA                       l2951 1BEA                       l2943 1BBE  
                     l2935 1B8A                       l2927 1B4E                       l2919 1B18  
                     l2871 1A54                       l2863 1A22                       l2855 19FA  
                     l2847 19DA                       l2839 19A8                       l3495 303C  
                     l3479 2FEE                       l3591 2AAE                       l3583 29EE  
                     l3575 295C                       l3559 3850                       l3567 37CA  
                     l3911 11E8                       l3903 11BC                       l3831 0F68  
                     l3815 0EF6                       l3823 0F32                       l3807 0E54  
                     l3751 0AF0                       l3735 0A58                       l3743 0AB6  
                     l3719 09E8                       l3727 0A34                       l3671 0798  
                     l3655 06EC                       l3647 06C2                       l3639 0690  
                     l4199 191C                       l4447 38DA                       l4439 389C  
                     l4471 2E8C                       l4463 2E76                       l4455 2E68  
                     l4297 2B88                       l4289 2B18                       l2961 1C30  
                     l2953 1BF8                       l2945 1BCC                       l2937 1B9A  
                     l2929 1B5C                       l2881 1A8E                       l2873 1A56  
                     l2865 1A24                       l2857 1A0C                       l2849 19DC  
                     l3593 2AD6                       l3585 2A2A                       l3577 2970  
                     l3921 1238                       l3913 11F8                       l3905 11C2  
                     l3841 0F94                       l3833 0F6E                       l3825 0F46  
                     l3817 0F0A                       l3809 0E60                       l3761 0B3E  
                     l3753 0AF4                       l3745 0ABE                       l3737 0A74  
                     l3673 07A2                       l3665 0752                       l3657 06F0  
                     l3649 06D4                       l4537 1346                       l4481 2EA4  
                     l4473 2E8E                       l4465 2E78                       l4457 2E6A  
                     l4299 2B90                       l4539 2D68                       l2971 1CAC  
                     l2963 1C64                       l2955 1BFA                       l2947 1BDA  
                     l2891 1AA2                       l2883 1A92                       l2867 1A34  
                     l2875 1A5E                       l2859 1A0E                       l3595 2AE6  
                     l3579 297E                       l3587 2A5E                       l3931 1274  
                     l3923 124A                       l3915 11FE                       l3907 11D4  
                     l3835 0F7A                       l3827 0F54                       l3843 0F9A  
                     l3851 0FC8                       l3819 0F1C                       l3771 0BD6  
                     l3755 0B06                       l3763 0B46                       l3747 0AD0  
                     l3739 0AAA                       l3683 0826                       l3667 0764  
                     l3659 06F6                       l4491 2F18                       l4483 2EC6  
                     l4475 2E90                       l4467 2E80                       l4459 2E6C  
                     l2981 1CE8                       l2973 1CBC                       l2965 1C66  
                     l2957 1C04                       l2949 1BE6                       l2893 1AA6  
                     l2885 1A96                       l2877 1A6E                       l2869 1A44  
                     l3589 2A9A                       l3925 1256                       l3917 1204  
                     l3909 11E0                       l3861 107E                       l3853 1020  
                     l3845 0FAC                       l3837 0F8A                       l3829 0F64  
                     l3781 0CBA                       l3773 0C2E                       l3765 0B4E  
                     l3757 0B14                       l3749 0AE2                       l3685 0838  
                     l3669 0780                       l3677 07CA                       l3941 2622  
                     l4493 2F5E                       l4485 2ED2                       l4477 2E92  
                     l4469 2E88                       l2991 1D14                       l2983 1CEA  
                     l2967 1C76                       l2959 1C0A                       l2895 1AAA  
                     l2887 1A9A                       l2879 1A80                       l3927 125E  
                     l3871 10CE                       l3863 109A                       l3855 1054  
                     l3847 0FBE                       l3839 0F8E                       l3791 0D54  
                     l3783 0CEC                       l3775 0C62                       l3767 0B5E  
                     l3759 0B2C                       l3687 0854                       l3679 07F0  
                     l3695 0870                       l3599 3A54                       l3951 2696  
                     l3943 263C                       l4495 2F84                       l4487 2EFE  
                     l4479 2E94                       l2985 1CF8                       l2977 1CD0  
                     l2993 1D16                       l2969 1C86                       l2897 1AAE  
                     l2889 1A9E                       l3929 126E                       l3881 1110  
                     l3873 10DE                       l3865 10AC                       l3857 105C  
                     l3849 0FC2                       l3793 0D88                       l3785 0D02  
                     l3769 0B72                       l3777 0C68                       l3697 088A  
                     l3961 26DA                       l3953 26A0                       l3945 2666  
                     l3937 2612                       l4489 2F02                       l2987 1D00  
                     l2979 1CDA                       l2995 1D24                       l2899 1AB2  
                     l3891 1140                       l3883 111E                       l3875 10F0  
                     l3867 10BA                       l3859 1060                       l3795 0DDE  
                     l3787 0D34                       l3779 0C86                       l3971 2766  
                     l3955 26A6                       l3947 266E                       l3939 2620  
                     l2997 1D28                       l2989 1D04                       l3893 1166  
                     l3885 1126                       l3877 10F8                       l3869 10CA  
                     l3797 0DE4                       l3789 0D44                       l3981 27A8  
                     l3973 2778                       l3965 271A                       l3957 26AE  
                     l3949 268E                       l2999 1D36                       l3895 1182  
                     l3887 112E                       l3879 1108                       l3799 0E18  
                     l3991 2874                       l3967 272C                       l3975 278C  
                     l3959 26CA                       l3983 2806                       l3897 118A  
                     l3889 113A                       l3993 2890                       l3985 2822  
                     l3977 279C                       l3899 1190                       l3995 2896  
                     l3987 2840                       l3979 27A2                       l3997 28A6  
                     l3989 285A                       l3999 28BC                       STR_1 0601  
                     STR_2 0618                       STR_3 0628                       STR_4 0630  
                     STR_7 062C                       STR_8 0634                       u3000 1B5C  
                     u3001 1B58                       u3010 1B7C                       u3011 1B78  
                     u3100 1CBC                       u3020 1B8A                       u3101 1CB8  
                     u3021 1B86                       u3110 1CE8                       u3030 1B9A  
                     u3111 1CE4                       u3031 1B96                       u3200 1DCA  
                     u3120 1CF8                       u3040 1BCC                       u4000 306C  
                     _LATD 000F8C                       u3201 1DC6                       u3121 1CF4  
                     u3041 1BC8                       u4001 3068                       u3210 1DDC  
                     u3130 1D14                       u3050 1BDA                       u4010 307C  
                     u3211 1DD8                       u3131 1D10                       u3051 1BD6  
                     u4011 3078                       u3220 1DEC                       u3140 1D24  
                     u3060 1BF8                       u4020 3512                       u3300 3B32  
                     u3221 1DE8                       u3141 1D20                       u3061 1BF4  
                     u4021 350E                       u3301 3B2C                       u3230 1E0C  
                     u3150 1D36                       u3070 1C30                       u4110 328C  
                     u4030 3534                       u3310 3B34                       u3231 1E08  
                     u3151 1D32                       u3071 1C2C                       u4111 3286  
                     u4031 3530                       u3400 2410                       u3320 2292  
                     u3240 1E1E                       u3160 1D4C                       u3080 1C76  
                     u4120 328E                       u4200 297E                       u4040 358A  
                     u5000 2778                       u3401 240C                       u3321 228E  
                     u3241 1E1A                       u3161 1D48                       u3081 1C72  
                     u4105 3264                       u4201 297A                       u4041 3586  
                     u5001 2774                       u3410 2432                       u3330 22A4  
                     u3250 1E3A                       u3170 1D62                       u3090 1CAC  
                     u4050 3598                       u4130 3888                       u5010 27E0  
                     u3411 242E                       u3331 22A0                       u3251 1E36  
                     u3171 1D5E                       u3091 1CA8                       u4051 3594  
                     u5100 2D36                       u3500 253E                       u3420 245C  
                     u3340 22B4                       u3180 1D76                       u4060 31E2  
                     u4220 29EA                       u3260 3A0E                       u4140 389A  
                     u4300 3812                       u5020 2822                       u5101 2D32  
                     u3501 253A                       u3421 2458                       u3341 22B0  
                     u3181 1D72                       u4221 29E6                       u3261 3A0A  
                     u4141 3896                       u4301 380C                       u5021 281E  
                     u5110 2DEC                       u3510 2558                       u3430 2480  
                     u3350 22F8                       u3190 1D90                       u4070 3200  
                     u4230 2A0E                       u3270 3C40                       u4150 37B2  
                     u4310 3814                       u5030 2840                       u5111 2DE6  
                     u3511 2554                       u3431 247C                       u3351 22F4  
                     u3191 1D8C                       u4071 31FC                       u4215 2992  
                     u3271 3C3C                       u4151 37AC                       u5031 283C  
                     u5015 27CE                       u5120 2DEE                       u3520 25A0  
                     u3440 2496                       u3360 230A                       u3600 1EEC  
                     u4080 3228                       u4240 2A2A                       u4216 299C  
                     u3280 3B6A                       u4160 37B4                       u4400 06D4  
                     u4320 382A                       u5040 285A                       u5200 12BA  
                     u3521 259C                       u3441 2492                       u3361 2306  
                     u3601 1EE8                       u4081 3224                       u4065 31D8  
                     u4241 2A26                       u4217 29AC                       u4137 387E  
                     u3281 3B64                       u4401 06D0                       u4321 3826  
                     u5041 2856                       u5201 12B6                       u4330 3BDA  
                     u5130 2E04                       u3530 25D0                       u3450 24B4  
                     u3370 231A                       u3610 1F22                       u4090 3252  
                     u4250 2A7E                       u3290 3B6C                       u4170 37CA  
                     u4410 071C                       u5050 2874                       u5210 1386  
                     u4331 3BD4                       u5131 2E00                       u3531 25CC  
                     u3451 24B0                       u3371 2316                       u3611 1F1E  
                     u4091 324E                       u4235 2A04                       u4171 37C6  
                     u4411 0718                       u5051 2870                       u5211 1382  
                     u4340 3BDC                       u5140 2E16                       u3540 25FE  
                     u3460 24D4                       u3380 235A                       u3700 21AA  
                     u3620 1F32                       u2900 1A0C                       u4260 2A9A  
                     u4180 292E                       u4500 0950                       u4420 074A  
                     u5060 2882                       u5300 1598                       u5220 1394  
                     u5141 2E12                       u3541 25FA                       u3461 24D0  
                     u3381 2356                       u3701 21A6                       u3621 1F2E  
                     u2901 1A08                       u4261 2A96                       u4501 094C  
                     u4421 0744                       u5061 287E                       u5301 1592  
                     u5221 1390                       u4350 3906                       u3470 24E6  
                     u3390 239A                       u3710 21F2                       u3630 20AC  
                     u3550 1E68                       u2910 1A22                       u4270 2AD6  
                     u4190 295C                       u2830 3388                       u4510 09C2  
                     u4430 074C                       u5150 32CA                       u5070 2890  
                     u5310 159A                       u5230 13BA                       u4351 3902  
                     u3471 24E2                       u3391 2396                       u3711 21EE  
                     u3551 1E64                       u2911 1A1E                       u4271 2AD2  
                     u4255 2A74                       u4191 2958                       u2831 3384  
                     u4511 09BE                       u5151 32C6                       u5071 288C  
                     u5231 13B6                       u4360 3934                       u5080 2CE4  
                     u3800 35D8                       u3480 2514                       u3720 2220  
                     u3640 2106                       u3560 1E7A                       u2920 1A34  
                     u2840 339A                       u4600 0AE2                       u4520 09E8  
                     u4440 0764                       u5160 32FC                       u4280 3A88  
                     u5400 182A                       u5320 15B0                       u5240 13FE  
                     u4361 3930                       u5081 2CE0                       u3801 35D4  
                     u3481 2510                       u3721 221C                       u3641 2102  
                     u3561 1E76                       u2921 1A30                       u4185 2924  
                     u2841 3396                       u4601 0ADE                       u4521 09E4  
                     u4441 0760                       u5161 32F8                       u4281 3A82  
                     u5401 1826                       u5321 15AC                       u5241 13FA  
                     u5090 2D1A                       u3810 35F2                       u3490 252A  
                     u3730 225A                       u3650 2126                       u3570 1E8A  
                     u2930 1A44                       u2850 33C2                       u4610 0AF0  
                     u4530 09FA                       u4450 07F0                       u4370 0664  
                     u5170 3318                       u4290 3A8A                       u5410 184E  
                     u5330 15E0                       u5250 147A                       u5091 2D16  
                     u3811 35EE                       u3491 2526                       u3731 2256  
                     u3651 2122                       u3635 20A2                       u3571 1E86  
                     u2931 1A40                       u2851 33BE                       u4611 0AEC  
                     u4531 09F6                       u4451 07EC                       u4371 0660  
                     u5171 3314                       u5411 184A                       u5331 15DC  
                     u5251 1474                       u3740 3452                       u3820 360C  
                     u3900 310A                       u3660 2138                       u3580 1ECA  
                     u2940 1A80                       u2860 33F8                       u4700 0E2C  
                     u4620 0B06                       u4540 0A1C                       u4460 081E  
                     u4380 06B4                       u5180 332A                       u5420 190E  
                     u5340 1620                       u5260 147C                       u5500 3B00  
                     u3741 344E                       u3821 3608                       u3901 3106  
                     u3661 2134                       u3581 1EC6                       u2941 1A7C  
                     u2861 33F4                       u4701 0E28                       u4621 0B02  
                     u4541 0A18                       u4461 0818                       u4381 06B0  
                     u5181 3326                       u5421 190A                       u5341 161C  
                     u5501 3AFC                       u5510 2B0A                       u3750 346C  
                     u3830 362A                       u3910 3128                       u3670 2166  
                     u3590 1EDC                       u2950 1A8E                       u2870 19A8  
                     u4710 0E54                       u4630 0B14                       u4550 0A42  
                     u4470 0820                       u4390 06C2                       u5190 3352  
                     u5350 1662                       u5270 1492                       u5430 3C94  
                     u5511 2B06                       u3751 3468                       u3831 3626  
                     u3911 3124                       u3671 2162                       u3591 1ED8  
                     u2951 1A8A                       u2871 19A4                       u4711 0E50  
                     u4631 0B10                       u4551 0A3E                       u4391 06BE  
                     u5191 334E                       u5351 165E                       u5271 148E  
                     u5431 3C90                       u5600 2C98                       u5520 2B18  
                     u3760 3492                       u3840 3640                       u3920 3148  
                     u3680 217C                       u2960 1AFC                       u2880 19BA  
                     u4800 109A                       u4720 0EF6                       u4640 0B3E  
                     u4560 0A58                       u4480 0838                       u5360 1710  
                     u5280 14B6                       u5601 2C94                       u5521 2B14  
                     u3761 348E                       u3841 363C                       u3921 3144  
                     u3681 2178                       u2961 1AF8                       u2881 19B6  
                     u4801 1096                       u4721 0EF2                       u4641 0B3A  
                     u4561 0A54                       u4481 0834                       u5361 170C  
                     u5281 14B2                       u5530 2B74                       u3770 34B0  
                     u3850 3664                       u3930 3198                       u3690 2190  
                     u2970 1B14                       u2890 19CA                       u4810 10AC  
                     u4730 0F0A                       u4650 0C86                       u4570 0A74  
                     u4490 08BC                       u5370 1776                       u5290 14F0  
                     u5531 2B70                       u3771 34AC                       u3851 3660  
                     u3931 3194                       u3691 218C                       u2971 1B0E  
                     u2891 19C6                       u4811 10A8                       u4731 0F06  
                     u4651 0C82                       u4571 0A70                       u4491 08B8  
                     u5371 1770                       u5291 14EC                       u5540 2BCA  
                     u3780 34CC                       u3860 36A4                       u3940 3B88  
                     u2980 1B16                       u4900 124A                       u4820 10BA  
                     u4740 0F1C                       u4660 0CEC                       u4580 0AAA  
                     u5380 1778                       u5541 2BC6                       u3781 34C8  
                     u3861 36A0                       u3941 3B84                       u4901 1246  
                     u4821 10B6                       u4741 0F18                       u4661 0CE8  
                     u4581 0AA6                       u5550 2C14                       u3790 34F2  
                     u3870 36E2                       u2990 1B3E                       u3950 2FAE  
                     u4830 10F0                       u4750 0F2A                       u4670 0D34  
                     u4590 0AD0                       u4910 2620                       u5390 178E  
                     u5551 2C10                       u3791 34EE                       u3871 36DE  
                     u2991 1B3A                       u3951 2FAA                       u4831 10EC  
                     u4751 0F26                       u4671 0D30                       u4591 0ACC  
                     u4911 261C                       u5391 178A                       u5455 3BFA  
                     u5560 2C32                       u3880 3716                       u3960 2FE2  
                     u4840 111E                       u4760 0F46                       u4680 0D44  
                     u4920 263C                       u5456 3BFC                       u5561 2C2E  
                     u3881 3712                       u4841 111A                       u4761 0F42  
                     u4681 0D40                       u4921 2638                       u5465 3C04  
                     u5570 2C42                       u3890 30CC                       u3970 3010  
                     u4850 11A2                       u4770 0F54                       u4690 0DDE  
                     u4930 2666                       u5650 3778                       u5466 3C06  
                     u5571 2C3E                       u3891 30C8                       u3971 300C  
                     u4851 119E                       u4771 0F50                       u4691 0DDA  
                     u4931 2662                       u5651 3774                       u5475 3C0E  
                     u5580 2C50                       u3980 3024                       u4860 11BC  
                     u4780 0FAC                       u4940 26CA                       u5476 3C10  
                     u5660 2EA4                       u5581 2C4C                       u3981 3020  
                     u3965 2FD8                       u4861 11B8                       u4781 0FA8  
                     u4941 26C6                       u5661 2EA0                       i2l62 3A52  
                     u5590 2C8A                       u3990 304C                       u4870 11D4  
                     u4790 107E                       u4950 2714                       u5591 2C86  
                     u3991 3048                       u4871 11D0                       u4791 107A  
                     u4951 270E                       u4880 1232                       u4960 2716  
                     u4881 122C                       i2l58 3A24                       u4890 1234  
                     u4970 272C                       u4971 2728                       u5675 2EDC  
                     u4980 2760                       u4981 275A                       u4990 2762  
                     _data 0075                       _dbuf 0100                       _atoi 2CAC  
                     _main 2E3C                       _prec 0070                       _nout 00DD  
                     pad@i 001F                       pad@p 001C                       fsr1h 000FE2  
                     fsr2h 000FDA                       indf1 000FE7                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 0021                       fsr2l 000FD9  
                     btemp 0076                       _xtoa 2612              ___fpclassifyf 31A2  
                     prodh 000FF4                       prodl 000FF3                       start 0026  
          ___fldiv@new_exp 0019               _tolower$1500 0014               ___param_bank 000000  
                    ??_pad 001E              ___fltol@sign1 0010                      ?_atoi 000F  
          __end_of___fladd 1E4E                      ?_main 0001            __end_of___fldiv 2612  
          __end_of___awdiv 3504            __end_of___flneg 3BAA                      STR_11 0638  
                    STR_13 0638            __end_of___awmod 3676            __end_of___flmul 2278  
          __end_of___flsub 39CC            __end_of___fltol 309E            ___awdiv@divisor 000A  
                    ?_xtoa 0023                      i1l106 001E                      i2l101 3ABE  
          ___awdiv@counter 000C                      _RCREG 000FAE               vfpfcnvrt@fmt 004C  
             vfpfcnvrt@llu 0054                      _SPBRG 000FAF                      _TRISD 000F95  
                    _TXREG 000FAD                      _flags 0072                      _fputc 3376  
          __end_of_isalpha 3A90                      _fputs 39CC            __end_of_isdigit 3BE2  
                    atoi@n 001C                      pad@fp 0018                      atoi@s 000F  
                    _width 006E                      _putch 3C96            __end_of_islower 3B3A  
          __end_of_isspace 3940            __end_of_low_isr 0026            __end_of_isupper 3B72  
                    tablat 000FF5                      ttemp5 0077                      ttemp6 007A  
                    ttemp7 007E                      status 000FD8                      wtemp8 0077  
          __end_of_sprintf 38EE             ?___fpclassifyf 0008            __end_of_tolower 37E2  
                    xtoa@c 0048                      xtoa@d 0025                      xtoa@i 0046  
                    xtoa@n 003E                      xtoa@p 003A                      xtoa@w 003C  
                    xtoa@x 002D            __end_of_strncmp 3376            __end_of_toupper 3840  
             _toupper$1515 0014            __initialization 3940               __end_of_atoi 2E3C  
             __end_of_main 2F98               __end_of_xtoa 28E6                     ??_atoi 0011  
                   ??_main 00CE                     ??_xtoa 002E              __activetblptr 000002  
                   ?_fputc 0008                     ?_fputs 0011                     _ADRESH 000FC4  
                   _ADRESL 000FC3           ___awdiv@dividend 0008                     ?_putch 0001  
                   i2l4261 3A3A                     i2l4263 3A46                     i2l4255 3A10  
                   i2l4257 3A1E                     i2l4259 3A32                     i2l4385 3A9A  
                   i2l4387 3AA8                     i2l4389 3ABC              vfpfcnvrt@done 005C  
                   _SPBRGH 000FB0           __end_of___xxtofl 2CAC               vfprintf@cfmt 006C  
         __end_of_high_isr 3ACA                     ___flge 309E                     ___fleq 3676  
                ??___fladd 0010                     ___wmul 3C4E                  ??___fldiv 0010  
                ??___awdiv 000C                  ??___flneg 000C                  ??___awmod 000C  
                ??___flmul 001E                  ??___flsub 0037                  ??___fltol 000C  
                   _efgtoa 063C                     _floorf 28E6                     clear_0 3948  
                   clear_1 395A                     clear_2 3966                     clear_3 3972  
         ___awdiv@quotient 000E            ___awmod@divisor 000A                     isa$std 000001  
          ___awmod@counter 000C                     pad@buf 001A              _got_data_bool 0074  
                   _strcpy 3840                     _strlen 3C18                     fputc@c 0008  
                   fputs@c 0015                     fputs@i 0016                     fputs@s 0011  
                ??_isalpha 000A                  ??_isdigit 000A            ___fpclassifyf@e 0010  
          ___fpclassifyf@u 0012            ___fpclassifyf@x 0008                  ??_islower 000A  
             __mediumconst 0000                  ??_isspace 000A                  ??_low_isr 0007  
                   tblptrh 000FF7                  ??_isupper 000A                     tblptrl 000FF6  
                   tblptru 000FF8                     putch@c 0001           __end_of_vfprintf 3782  
                ??_sprintf 006E                  ??_tolower 0010                     xtoa@fp 0023  
                ??_strncmp 000E                  ??_toupper 0010                 ___flge@ff1 002F  
               ___flge@ff2 0033            ??___fpclassifyf 000C               ___xxtofl@arg 0012  
             ___xxtofl@exp 0011               ___xxtofl@val 0008                 ___fleq@ff1 0008  
               ___fleq@ff2 000C                 __accesstop 0080    __end_of__initialization 3978  
               ___flneg@f1 0008              ___rparam_used 000001                 ___fltol@f1 0008  
           __pcstackCOMRAM 0001              __end_of_fputc 3440              __end_of_fputs 3A10  
               _adc_to_led 00DF              __end_of_putch 3C98          ?_uart_send_string 000A  
       ??_uart_send_string 000C                    ??_fputc 000C                    ??_fputs 0015  
                  ??_putch 0008                 __pbssBANK0 00D1                 __pbssBANK1 0100  
               __pbssBANK2 0200                    ?___flge 002F                    ?___fleq 0008  
                  ?___wmul 0008                    ?_efgtoa 003B                    ?_floorf 0021  
                  ?_strcpy 0008                    ?_strlen 0008         __size_of_uart_init 0036  
       __size_of_uart_send 0022                  ?___xxtofl 0008         __size_of_vfpfcnvrt 06F8  
    __end_of_uart_receiver 3A54                  ?_high_isr 0001                    __Hparam 0000  
                  __Lparam 0000            __size_of___flge 0104            __size_of___fleq 00AA  
                  ___fladd 198E                    ___fldiv 2278                    ___awdiv 3440  
                  ___flneg 3B72                    ___awmod 35C6                    ___flmul 1E4E  
                  ___flsub 3986                    ___fltol 2F98            __size_of___wmul 0026  
                ?_vfprintf 00B8               __psmallconst 0600            __size_of_efgtoa 0C5A  
          __size_of_floorf 0212                    __pcinit 3940                    __ramtop 0600  
                  __ptext0 2E3C                    __ptext1 3ACA                    __ptext2 3C74  
                  __ptext3 3BE2                    __ptext4 389C                    __ptext5 3720  
                  __ptext6 1296                    __ptext7 2612                    __ptext8 37E2  
                  __ptext9 3B02            __size_of_strcpy 005C            __size_of_strlen 0036  
        uart_send_string@c 000A          uart_send_string@i 000C               __size_of_pad 00C2  
                  _isalpha 3A54                    _isdigit 3BAA                 ??___xxtofl 000C  
         ___awmod@dividend 0008                    _islower 3B02                    _isspace 38EE  
                  _low_isr 0018                    _isupper 3B3A                    efgtoa@c 0041  
                  efgtoa@d 0098                    efgtoa@e 00B0                    efgtoa@f 003D  
                  efgtoa@g 00AC                    efgtoa@h 00A2                    efgtoa@i 00AA  
                  efgtoa@l 00A6                    efgtoa@m 0092                    efgtoa@n 00B2  
                  efgtoa@p 009C                    efgtoa@t 008C                    efgtoa@u 00B4  
                  efgtoa@w 009E                    atoi@neg 0015                    _sprintf 389C  
                  _tolower 3782                 ??_high_isr 0005                    _strncmp 32A0  
           __pintcode_body 3A90                    _toupper 37E2       end_of_initialization 3978  
                  floorf@e 002F                    floorf@m 002B                    floorf@u 0031  
                  floorf@x 0021                    fputc@fp 000A              __Lmediumconst 0000  
                  int_func 3A90                    fputs@fp 0013          __end_of_uart_init 3C18  
        __end_of_uart_send 3C96           uart_init@gen_reg 0008          __end_of_vfpfcnvrt 198E  
               efgtoa@mode 00A1                 efgtoa@sign 009A                  _RCSTAbits 000FAB  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 006C  
                  strcpy@d 0010                    strlen@a 000A                    strcpy@s 000E  
                  strlen@s 0008                ___fladd@grs 0017              ___xxtofl@sign 0010  
                _TRISAbits 000F92                  _TRISCbits 000F94                ___fldiv@grs 001B  
              ___fldiv@rem 0014                ___flmul@grs 0023                  _TXSTAbits 000FAC  
           __end_of___flge 31A2             __end_of___fleq 3720                vfpfcnvrt@ap 004E  
              vfpfcnvrt@ct 0068                vfpfcnvrt@fp 004A             __end_of___wmul 3C74  
              _BAUDCONbits 000FB8             __end_of_efgtoa 1296             __end_of_floorf 2AF8  
               floorf@F527 00D1             __end_of_strcpy 389C             __end_of_strlen 3C4E  
      start_initialization 3940                __end_of_pad 35C6  __size_of_uart_send_string 0038  
    __end_of___fpclassifyf 32A0                vfprintf@fmt 00BA                   ??___flge 0037  
                 ??___fleq 0010                   ??___wmul 000C                   ??_efgtoa 0042  
                 ??_floorf 0025                   ??_strcpy 000C                   ??_strlen 000A  
                ___fladd@a 000C                  ___fladd@b 0008                  ___fldiv@a 000C  
                ___fldiv@b 0008                  ___flmul@a 001A                  ___flmul@b 0016  
              __pbssCOMRAM 006E                  ___flsub@a 0033                  ___flsub@b 002F  
            __pcstackBANK0 0080          __size_of___xxtofl 01B4       uart_receiver@rx_flag 0003  
        __size_of_high_isr 3AC2                  _atoi$1396 0017                  _atoi$1397 001B  
                _atoi$1398 0019                _efgtoa$1320 0082                _efgtoa$1330 0088  
              _efgtoa$1331 008A                _efgtoa$1325 0084                _efgtoa$1319 0080  
              _efgtoa$1329 0086                  __pintcode 0008                   ?___fladd 0008  
                 ?___fldiv 0008                   ?___awdiv 0008                   ?___flneg 0008  
                 ?___awmod 0008                   ?___flmul 0016                   ?___flsub 002F  
                 ?___fltol 0008                __pintcodelo 0018          __size_of_vfprintf 0062  
              __smallconst 0600                   ?_isalpha 0008                   ?_isdigit 0008  
                 ?_islower 0008                   ?_isspace 0008                   ?_low_isr 0001  
                 ?_isupper 0008                   ?_sprintf 00BE                   ?_tolower 000E  
           __size_of_fputc 00CA             __size_of_fputs 0044                   ?_strncmp 0008  
                 ?_toupper 000E             __size_of_putch 0002             ___wmul@product 000C  
                 _IPR1bits 000F9F                   _PIE1bits 000F9D                   _PIR1bits 000F9E  
                 i2u548_40 3A1E                   i2u564_40 3AA8                   i2u548_41 3A1A  
                 i2u564_41 3AA4                   i2u549_40 3A32                   i2u549_41 3A2E  
                 _RCONbits 000FD0                  _uart_init 3BE2                  _uart_send 3C74  
   __size_of_uart_receiver 0044                 uart_send@c 0008                  _vfpfcnvrt 1296  
                _xtoa$1341 0036                  _xtoa$1342 0038                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0          ___wmul@multiplier 0008  
             _isspace$1436 000E                 vfpfcnvrt@c 006B                 vfpfcnvrt@f 0064  
         _uart_send_string 3ACA                   __Hrparam 0000                 vfprintf@ap 00BC  
                 __Lrparam 0000                 vfprintf@fp 00B8                 ?_uart_init 0008  
               ?_uart_send 0008           __size_of___fladd 04C0           __size_of___fldiv 039A  
         __size_of___awdiv 00C4           __size_of___flneg 0038           __size_of___awmod 00B0  
         __size_of___flmul 042A           __size_of___flsub 0046           __size_of___fltol 0106  
               ?_vfpfcnvrt 004A                   _adc_volt 00D9         ___fpclassifyf@F465 00D5  
               sprintf@fmt 00C0                   ___xxtofl 2AF8           __size_of_isalpha 003C  
         __size_of_isdigit 0038           __size_of_islower 0038           __size_of_isspace 0052  
         __size_of_low_isr 000E                   __ptext10 3A54                   __ptext11 32A0  
                 __ptext20 3C96                   __ptext12 063C                   __ptext21 28E6  
                 __ptext13 3782                   __ptext30 2278                   __ptext22 31A2  
                 __ptext14 3B3A                   __ptext31 35C6                   __ptext23 2F98  
                 __ptext15 3840                   __ptext40 3A10                   __ptext32 3440  
                 __ptext24 3986                   __ptext16 3504                   __ptext33 2CAC  
                 __ptext25 198E                   __ptext17 3C18                   __ptext34 38EE  
                 __ptext26 3B72                   __ptext18 39CC                   __ptext35 3BAA  
                 __ptext27 1E4E                   __ptext19 3376                   __ptext36 3C4E  
                 __ptext28 309E                   __ptext37 2AF8                   __ptext29 3676  
         __size_of_isupper 0038              _uart_receiver 3A10                   _high_isr 0008  
         __size_of_sprintf 0052           __size_of_tolower 0060                 strcpy@dest 0008  
         __size_of_strncmp 00D6           __size_of_toupper 005E              __size_of_atoi 0190  
            __size_of_main 015C              __size_of_xtoa 02D4             uart_init@brg16 000E  
                 efgtoa@fp 003B                   efgtoa@ne 0090                   efgtoa@pp 008E  
                 efgtoa@ou 0094                   isa$xinst 000000                   int$flags 0076  
                 _vfprintf 3720             _vfpfcnvrt$1361 0062             _vfpfcnvrt$1356 005E  
           _vfpfcnvrt$1357 0060                 _INTCONbits 000FF2             uart_receiver@c 0001  
                 isalpha@c 0008                   isdigit@c 0008             ?_uart_receiver 0001  
                 intlevel1 0000                   intlevel2 0000                  sprintf@ap 00C6  
                 islower@c 0008                   isspace@c 0008                  strcpy@src 000A  
                 isupper@c 0008                  strncmp@_l 0008                  strncmp@_r 000A  
            uart_init@brgh 000C              uart_init@sync 000A                efgtoa@nmode 00A0  
              ??_uart_init 0010                ??_uart_send 000A                ??_vfpfcnvrt 0050  
                 sprintf@f 00C8                   tolower@c 000E                   sprintf@s 00BE  
   __size_of___fpclassifyf 00FE               _print_buffer 0200                   strncmp@l 000F  
                 strncmp@n 000C                   strncmp@r 0011                   toupper@c 000E  
            ___fladd@signs 0014               ___fladd@aexp 0015               ___fladd@bexp 0016  
