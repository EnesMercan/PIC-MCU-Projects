

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 30 18:11:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _RCONbits	set	4048
    53  0000                     _INTCONbits	set	4082
    54  0000                     _LATAbits	set	3977
    55  0000                     _PORTDbits	set	3971
    56  0000                     _T0CONbits	set	4053
    57  0000                     _TRISD	set	3989
    58  0000                     _ADCON1	set	4033
    59  0000                     _CMCON	set	4020
    60  0000                     _TRISA	set	3986
    61  0000                     _LATA	set	3977
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  00008E                     __pcinit:
    67                           	callstack 0
    68  00008E                     start_initialization:
    69                           	callstack 0
    70  00008E                     __initialization:
    71                           	callstack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (1 bytes)
    74  00008E  6A01               	clrf	__pbssCOMRAM& (0+255),c
    75  000090                     end_of_initialization:
    76                           	callstack 0
    77  000090                     __end_of__initialization:
    78                           	callstack 0
    79  000090  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80  000092  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81  000094  0100               	movlb	0
    82  000096  EF09  F000         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	bssCOMRAM
    85  000001                     __pbssCOMRAM:
    86                           	callstack 0
    87  000001                     _counter:
    88                           	callstack 0
    89  000001                     	ds	1
    90                           
    91                           	psect	cstackCOMRAM
    92  000000                     __pcstackCOMRAM:
    93                           	callstack 0
    94  000000                     
    95                           ; 1 bytes @ 0x0
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 74 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   115 ;;      Params:         0       0       0       0       0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0       0       0
   118 ;;      Totals:         0       0       0       0       0       0       0       0       0
   119 ;;Total ram usage:        0 bytes
   120 ;; Hardware stack levels required when called:    2
   121 ;; This function calls:
   122 ;;		_timer0Setup
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  000012                     __ptext0:
   130                           	callstack 0
   131  000012                     _main:
   132                           	callstack 29
   133  000012                     
   134                           ;main.c: 76:      timer0Setup();
   135  000012  EC3D  F000         	call	_timer0Setup	;wreg free
   136  000016                     
   137                           ;main.c: 79:     LATA = 0;
   138  000016  0E00               	movlw	0
   139  000018  6E89               	movwf	137,c	;volatile
   140  00001A                     
   141                           ;main.c: 80:     TRISA &= ~(0x03);
   142  00001A  0EFC               	movlw	252
   143  00001C  1692               	andwf	146,f,c	;volatile
   144  00001E                     
   145                           ;main.c: 81:     CMCON |= 0x07;
   146  00001E  0E07               	movlw	7
   147  000020  12B4               	iorwf	180,f,c	;volatile
   148  000022                     
   149                           ;main.c: 82:     ADCON1 |= 0x0F;
   150  000022  0E0F               	movlw	15
   151  000024  12C1               	iorwf	193,f,c	;volatile
   152  000026                     
   153                           ;main.c: 83:     TRISD |= 0x01;
   154  000026  8095               	bsf	149,0,c	;volatile
   155  000028                     
   156                           ;main.c: 85:     T0CONbits.TMR0ON = 1;
   157  000028  8ED5               	bsf	213,7,c	;volatile
   158  00002A                     l736:
   159                           
   160                           ;main.c: 88:     {;main.c: 89:         if (PORTDbits.RD0 == 1)
   161  00002A  A083               	btfss	131,0,c	;volatile
   162  00002C  EF1A  F000         	goto	u11
   163  000030  EF1C  F000         	goto	u10
   164  000034                     u11:
   165  000034  EF1F  F000         	goto	l30
   166  000038                     u10:
   167  000038                     
   168                           ;main.c: 90:             LATAbits.LA0 = 1;
   169  000038  8089               	bsf	137,0,c	;volatile
   170  00003A  EF15  F000         	goto	l736
   171  00003E                     l30:
   172                           
   173                           ;main.c: 92:             LATAbits.LA0 = 0;
   174  00003E  9089               	bcf	137,0,c	;volatile
   175  000040  EF15  F000         	goto	l736
   176  000044  EF07  F000         	goto	start
   177  000048                     __end_of_main:
   178                           	callstack 0
   179                           
   180 ;; *************** function _timer0Setup *****************
   181 ;; Defined at:
   182 ;;		line 118 in file "main.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		None
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   196 ;;      Params:         0       0       0       0       0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0       0       0       0       0
   199 ;;      Totals:         0       0       0       0       0       0       0       0       0
   200 ;;Total ram usage:        0 bytes
   201 ;; Hardware stack levels used:    1
   202 ;; Hardware stack levels required when called:    1
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		_main
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text1
   211  00007A                     __ptext1:
   212                           	callstack 0
   213  00007A                     _timer0Setup:
   214                           	callstack 29
   215  00007A                     
   216                           ;main.c: 121:     T0CONbits.TMR0ON = 0;
   217  00007A  9ED5               	bcf	213,7,c	;volatile
   218                           
   219                           ;main.c: 122:     T0CONbits.T0CS = 0;
   220  00007C  9AD5               	bcf	213,5,c	;volatile
   221                           
   222                           ;main.c: 123:     T0CONbits.T08BIT = 0;
   223  00007E  9CD5               	bcf	213,6,c	;volatile
   224                           
   225                           ;main.c: 124:     T0CONbits.PSA = 1;
   226  000080  86D5               	bsf	213,3,c	;volatile
   227                           
   228                           ;main.c: 126:     RCONbits.IPEN = 0;
   229  000082  9ED0               	bcf	208,7,c	;volatile
   230                           
   231                           ;main.c: 127:     INTCONbits.GIE = 1;
   232  000084  8EF2               	bsf	242,7,c	;volatile
   233                           
   234                           ;main.c: 128:     INTCONbits.PEIE = 1;
   235  000086  8CF2               	bsf	242,6,c	;volatile
   236                           
   237                           ;main.c: 129:     INTCONbits.T0IF = 0;
   238  000088  94F2               	bcf	242,2,c	;volatile
   239                           
   240                           ;main.c: 130:     INTCONbits.TMR0IE = 1;
   241  00008A  8AF2               	bsf	242,5,c	;volatile
   242  00008C  0012               	return		;funcret
   243  00008E                     __end_of_timer0Setup:
   244                           	callstack 0
   245                           
   246 ;; *************** function _myInterruptHandler *****************
   247 ;; Defined at:
   248 ;;		line 99 in file "main.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         0       0       0       0       0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0       0       0       0       0
   264 ;;      Temps:          0       0       0       0       0       0       0       0       0
   265 ;;      Totals:         0       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:        0 bytes
   267 ;; Hardware stack levels used:    1
   268 ;; This function calls:
   269 ;;		Nothing
   270 ;; This function is called by:
   271 ;;		Interrupt level 2
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	intcode
   276  000008                     __pintcode:
   277                           	callstack 0
   278  000008                     _myInterruptHandler:
   279                           	callstack 29
   280                           
   281                           ;incstack = 0
   282  000008  8202               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   283  00000A  ED24  F000         	call	int_func,f	;refresh shadow registers
   284                           
   285                           	psect	intcode_body
   286  000048                     __pintcode_body:
   287                           	callstack 29
   288  000048                     int_func:
   289                           	callstack 29
   290  000048  0006               	pop		; remove dummy address from shadow register refresh
   291  00004A                     
   292                           ;main.c: 101:     if (INTCONbits.T0IF == 1)
   293  00004A  A4F2               	btfss	242,2,c	;volatile
   294  00004C  EF2A  F000         	goto	i2u2_41
   295  000050  EF2C  F000         	goto	i2u2_40
   296  000054                     i2u2_41:
   297  000054  EF3B  F000         	goto	i2l41
   298  000058                     i2u2_40:
   299  000058                     
   300                           ;main.c: 102:     {;main.c: 104:         counter++;
   301  000058  2A01               	incf	_counter^0,f,c
   302  00005A                     
   303                           ;main.c: 105:         INTCONbits.T0IF = 0;
   304  00005A  94F2               	bcf	242,2,c	;volatile
   305  00005C                     
   306                           ;main.c: 107:         if (counter == 76)
   307  00005C  0E4C               	movlw	76
   308  00005E  1801               	xorwf	_counter^0,w,c
   309  000060  A4D8               	btfss	status,2,c
   310  000062  EF35  F000         	goto	i2u3_41
   311  000066  EF37  F000         	goto	i2u3_40
   312  00006A                     i2u3_41:
   313  00006A  EF3B  F000         	goto	i2l41
   314  00006E                     i2u3_40:
   315  00006E                     
   316                           ;main.c: 108:         {;main.c: 109:             counter = 0;
   317  00006E  0E00               	movlw	0
   318  000070  6E01               	movwf	_counter^0,c
   319  000072                     
   320                           ;main.c: 110:             LATA ^= 0x02;
   321  000072  0E02               	movlw	2
   322  000074  1A89               	xorwf	137,f,c	;volatile
   323  000076                     i2l41:
   324  000076  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325  000078  0011               	retfie		f
   326  00007A                     __end_of_myInterruptHandler:
   327                           	callstack 0
   328  0000                     
   329                           	psect	rparam
   330  0000                     
   331                           	psect	temp
   332  000002                     btemp:
   333                           	callstack 0
   334  000002                     	ds	1
   335  0000                     int$flags	set	btemp
   336  0000                     wtemp8	set	btemp+1
   337  0000                     ttemp5	set	btemp+1
   338  0000                     ttemp6	set	btemp+4
   339  0000                     ttemp7	set	btemp+8
   340                           
   341                           	psect	idloc
   342                           
   343                           ;Config register IDLOC0 @ 0x200000
   344                           ;	unspecified, using default values
   345  200000                     	org	2097152
   346  200000  FF                 	db	255
   347                           
   348                           ;Config register IDLOC1 @ 0x200001
   349                           ;	unspecified, using default values
   350  200001                     	org	2097153
   351  200001  FF                 	db	255
   352                           
   353                           ;Config register IDLOC2 @ 0x200002
   354                           ;	unspecified, using default values
   355  200002                     	org	2097154
   356  200002  FF                 	db	255
   357                           
   358                           ;Config register IDLOC3 @ 0x200003
   359                           ;	unspecified, using default values
   360  200003                     	org	2097155
   361  200003  FF                 	db	255
   362                           
   363                           ;Config register IDLOC4 @ 0x200004
   364                           ;	unspecified, using default values
   365  200004                     	org	2097156
   366  200004  FF                 	db	255
   367                           
   368                           ;Config register IDLOC5 @ 0x200005
   369                           ;	unspecified, using default values
   370  200005                     	org	2097157
   371  200005  FF                 	db	255
   372                           
   373                           ;Config register IDLOC6 @ 0x200006
   374                           ;	unspecified, using default values
   375  200006                     	org	2097158
   376  200006  FF                 	db	255
   377                           
   378                           ;Config register IDLOC7 @ 0x200007
   379                           ;	unspecified, using default values
   380  200007                     	org	2097159
   381  200007  FF                 	db	255
   382                           
   383                           	psect	config
   384                           
   385                           ;Config register CONFIG1L @ 0x300000
   386                           ;	PLL Prescaler Selection bits
   387                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   388                           ;	System Clock Postscaler Selection bits
   389                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   390                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   391                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   392  300000                     	org	3145728
   393  300000  00                 	db	0
   394                           
   395                           ;Config register CONFIG1H @ 0x300001
   396                           ;	Oscillator Selection bits
   397                           ;	FOSC = HS, HS oscillator (HS)
   398                           ;	Fail-Safe Clock Monitor Enable bit
   399                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   400                           ;	Internal/External Oscillator Switchover bit
   401                           ;	IESO = OFF, Oscillator Switchover mode disabled
   402  300001                     	org	3145729
   403  300001  0C                 	db	12
   404                           
   405                           ;Config register CONFIG2L @ 0x300002
   406                           ;	Power-up Timer Enable bit
   407                           ;	PWRT = OFF, PWRT disabled
   408                           ;	Brown-out Reset Enable bits
   409                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   410                           ;	Brown-out Reset Voltage bits
   411                           ;	BORV = 3, Minimum setting 2.05V
   412                           ;	USB Voltage Regulator Enable bit
   413                           ;	VREGEN = OFF, USB voltage regulator disabled
   414  300002                     	org	3145730
   415  300002  19                 	db	25
   416                           
   417                           ;Config register CONFIG2H @ 0x300003
   418                           ;	Watchdog Timer Enable bit
   419                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   420                           ;	Watchdog Timer Postscale Select bits
   421                           ;	WDTPS = 32768, 1:32768
   422  300003                     	org	3145731
   423  300003  1E                 	db	30
   424                           
   425                           ; Padding undefined space
   426  300004                     	org	3145732
   427  300004  FF                 	db	255
   428                           
   429                           ;Config register CONFIG3H @ 0x300005
   430                           ;	CCP2 MUX bit
   431                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   432                           ;	PORTB A/D Enable bit
   433                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   434                           ;	Low-Power Timer 1 Oscillator Enable bit
   435                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   436                           ;	MCLR Pin Enable bit
   437                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   438  300005                     	org	3145733
   439  300005  83                 	db	131
   440                           
   441                           ;Config register CONFIG4L @ 0x300006
   442                           ;	Stack Full/Underflow Reset Enable bit
   443                           ;	STVREN = ON, Stack full/underflow will cause Reset
   444                           ;	Single-Supply ICSP Enable bit
   445                           ;	LVP = ON, Single-Supply ICSP enabled
   446                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   447                           ;	ICPRT = OFF, ICPORT disabled
   448                           ;	Extended Instruction Set Enable bit
   449                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   450                           ;	Background Debugger Enable bit
   451                           ;	DEBUG = 0x1, unprogrammed default
   452  300006                     	org	3145734
   453  300006  85                 	db	133
   454                           
   455                           ; Padding undefined space
   456  300007                     	org	3145735
   457  300007  FF                 	db	255
   458                           
   459                           ;Config register CONFIG5L @ 0x300008
   460                           ;	Code Protection bit
   461                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   462                           ;	Code Protection bit
   463                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   464                           ;	Code Protection bit
   465                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   466                           ;	Code Protection bit
   467                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   468  300008                     	org	3145736
   469  300008  0F                 	db	15
   470                           
   471                           ;Config register CONFIG5H @ 0x300009
   472                           ;	Boot Block Code Protection bit
   473                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   474                           ;	Data EEPROM Code Protection bit
   475                           ;	CPD = OFF, Data EEPROM is not code-protected
   476  300009                     	org	3145737
   477  300009  C0                 	db	192
   478                           
   479                           ;Config register CONFIG6L @ 0x30000A
   480                           ;	Write Protection bit
   481                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   482                           ;	Write Protection bit
   483                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   484                           ;	Write Protection bit
   485                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   486                           ;	Write Protection bit
   487                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   488  30000A                     	org	3145738
   489  30000A  0F                 	db	15
   490                           
   491                           ;Config register CONFIG6H @ 0x30000B
   492                           ;	Configuration Register Write Protection bit
   493                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   494                           ;	Boot Block Write Protection bit
   495                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   496                           ;	Data EEPROM Write Protection bit
   497                           ;	WRTD = OFF, Data EEPROM is not write-protected
   498  30000B                     	org	3145739
   499  30000B  E0                 	db	224
   500                           
   501                           ;Config register CONFIG7L @ 0x30000C
   502                           ;	Table Read Protection bit
   503                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   504                           ;	Table Read Protection bit
   505                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   506                           ;	Table Read Protection bit
   507                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   508                           ;	Table Read Protection bit
   509                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   510  30000C                     	org	3145740
   511  30000C  0F                 	db	15
   512                           
   513                           ;Config register CONFIG7H @ 0x30000D
   514                           ;	Boot Block Table Read Protection bit
   515                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   516  30000D                     	org	3145741
   517  30000D  40                 	db	64
   518                           tosu	equ	0xFFF
   519                           tosh	equ	0xFFE
   520                           tosl	equ	0xFFD
   521                           stkptr	equ	0xFFC
   522                           pclatu	equ	0xFFB
   523                           pclath	equ	0xFFA
   524                           pcl	equ	0xFF9
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           prodh	equ	0xFF4
   530                           prodl	equ	0xFF3
   531                           indf0	equ	0xFEF
   532                           postinc0	equ	0xFEE
   533                           postdec0	equ	0xFED
   534                           preinc0	equ	0xFEC
   535                           plusw0	equ	0xFEB
   536                           fsr0h	equ	0xFEA
   537                           fsr0l	equ	0xFE9
   538                           wreg	equ	0xFE8
   539                           indf1	equ	0xFE7
   540                           postinc1	equ	0xFE6
   541                           postdec1	equ	0xFE5
   542                           preinc1	equ	0xFE4
   543                           plusw1	equ	0xFE3
   544                           fsr1h	equ	0xFE2
   545                           fsr1l	equ	0xFE1
   546                           bsr	equ	0xFE0
   547                           indf2	equ	0xFDF
   548                           postinc2	equ	0xFDE
   549                           postdec2	equ	0xFDD
   550                           preinc2	equ	0xFDC
   551                           plusw2	equ	0xFDB
   552                           fsr2h	equ	0xFDA
   553                           fsr2l	equ	0xFD9
   554                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myInterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myInterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myInterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myInterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myInterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myInterruptHandler in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _timer0Setup
 ---------------------------------------------------------------------------------
 (1) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myInterruptHandler                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _timer0Setup

 _myInterruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       1       1        1.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       1      20        0.0%
DATA                 0      0       1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 30 18:11:01 2021

                         l30 003E                           l44 008C                           u10 0038  
                         u11 0034                          l720 007A                          l730 0022  
                        l722 0012                          l732 0026                          l724 0016  
                        l734 0028                          l726 001A                          l736 002A  
                        l728 001E                          l738 0038                         _LATA 000F89  
                       i2l41 0076                         _main 0012                         btemp 0002  
                       start 000E                 ___param_bank 000000                        ?_main 0000  
                      _CMCON 000FB4                        i2l740 004A                        i2l750 0072  
                      i2l742 0058                        i2l744 005A                        i2l746 005C  
                      i2l748 006E                        _TRISA 000F92                        _TRISD 000F95  
                      ttemp5 0003                        ttemp6 0006                        ttemp7 000A  
                      status 000FD8                        wtemp8 0003              __initialization 008E  
               __end_of_main 0048                       ??_main 0000                __activetblptr 000000  
                     _ADCON1 000FC1                       i2u2_40 0058                       i2u2_41 0054  
                     i2u3_40 006E                       i2u3_41 006A                 ?_timer0Setup 0000  
 __end_of_myInterruptHandler 007A                   __accesstop 0060      __end_of__initialization 0090  
              ___rparam_used 000001               __pcstackCOMRAM 0000                      __Hparam 0000  
                    __Lparam 0000                      __pcinit 008E         __size_of_timer0Setup 0014  
                    __ramtop 0800                      __ptext0 0012                      __ptext1 007A  
                  _T0CONbits 000FD5                      _counter 0001               __pintcode_body 0048  
       end_of_initialization 0090                      int_func 0048                    _PORTDbits 000F83  
         _myInterruptHandler 0008          ?_myInterruptHandler 0000         ??_myInterruptHandler 0000  
        start_initialization 008E                  __pbssCOMRAM 0001                    __pintcode 0008  
                   _LATAbits 000F89                     _RCONbits 000FD0                ??_timer0Setup 0000  
                   __Hrparam 0000                     __Lrparam 0000          __end_of_timer0Setup 008E  
              __size_of_main 0036                     int$flags 0002  __size_of_myInterruptHandler 0072  
                 _INTCONbits 000FF2                     intlevel2 0000                  _timer0Setup 007A  
