

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 17 15:19:36 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     _PIE1bits	set	3997
    87  0000                     _IPR1bits	set	3999
    88  0000                     _PIR1bits	set	3998
    89  0000                     _INTCONbits	set	4082
    90  0000                     _SSPBUF	set	4041
    91  0000                     _SSPSTAT	set	4039
    92  0000                     _SSPADD	set	4040
    93  0000                     _SSPCON2	set	4037
    94  0000                     _SSPCON1	set	4038
    95  0000                     _LATBbits	set	3978
    96  0000                     _TXREG	set	4013
    97  0000                     _TRISCbits	set	3988
    98  0000                     _RCSTAbits	set	4011
    99  0000                     _SPBRGH	set	4016
   100  0000                     _SPBRG	set	4015
   101  0000                     _BAUDCONbits	set	4024
   102  0000                     _TXSTAbits	set	4012
   103  0000                     _ACKEN	set	32300
   104  0000                     _ACKDT	set	32301
   105  0000                     _RCEN	set	32299
   106  0000                     _PEN	set	32298
   107  0000                     _SEN	set	32296
   108  0000                     _TRISC4	set	31908
   109  0000                     _TRISC3	set	31907
   110  0000                     _TRMT	set	32097
   111                           
   112                           	psect	smallconst
   113  000600                     __psmallconst:
   114                           	callstack 0
   115  000600  00                 	db	0
   116  000601                     STR_1:
   117  000601  30                 	db	48	;'0'
   118  000602  78                 	db	120	;'x'
   119  000603  25                 	db	37
   120  000604  30                 	db	48	;'0'
   121  000605  32                 	db	50	;'2'
   122  000606  78                 	db	120	;'x'
   123  000607  0A                 	db	10
   124  000608  0D                 	db	13
   125  000609  00                 	db	0
   126  00060A  00                 	db	0	; dummy byte at the end
   127  0000                     
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131  0016FC                     __pcinit:
   132                           	callstack 0
   133  0016FC                     start_initialization:
   134                           	callstack 0
   135  0016FC                     __initialization:
   136                           	callstack 0
   137                           
   138                           ; Clear objects allocated to BANK1 (256 bytes)
   139  0016FC  EE01  F000         	lfsr	0,__pbssBANK1
   140  001700  EE11 F000          	lfsr	1,256
   141  001704                     clear_0:
   142  001704  6AEE               	clrf	postinc0,c
   143  001706  50E5               	movf	postdec1,w,c
   144  001708  50E1               	movf	fsr1l,w,c
   145  00170A  E1FC               	bnz	clear_0
   146  00170C  50E2               	movf	fsr1h,w,c
   147  00170E  E1FA               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (35 bytes)
   150  001710  EE00  F080         	lfsr	0,__pbssBANK0
   151  001714  0E23               	movlw	35
   152  001716                     clear_1:
   153  001716  6AEE               	clrf	postinc0,c
   154  001718  06E8               	decf	wreg,f,c
   155  00171A  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (7 bytes)
   158  00171C  EE00  F070         	lfsr	0,__pbssCOMRAM
   159  001720  0E07               	movlw	7
   160  001722                     clear_2:
   161  001722  6AEE               	clrf	postinc0,c
   162  001724  06E8               	decf	wreg,f,c
   163  001726  E1FD               	bnz	clear_2
   164  001728                     end_of_initialization:
   165                           	callstack 0
   166  001728                     __end_of__initialization:
   167                           	callstack 0
   168  001728  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   169  00172A  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   170  00172C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   171  00172E  6EF8               	movwf	tblptru,c
   172  001730  0100               	movlb	0
   173  001732  EF81  F008         	goto	_main	;jump to C main() function
   174                           
   175                           	psect	bssCOMRAM
   176  000070                     __pbssCOMRAM:
   177                           	callstack 0
   178  000070                     _width:
   179                           	callstack 0
   180  000070                     	ds	2
   181  000072                     _prec:
   182                           	callstack 0
   183  000072                     	ds	2
   184  000074                     _flags:
   185                           	callstack 0
   186  000074                     	ds	2
   187  000076                     _counter:
   188                           	callstack 0
   189  000076                     	ds	1
   190                           
   191                           	psect	bssBANK0
   192  000080                     __pbssBANK0:
   193                           	callstack 0
   194  000080                     _nout:
   195                           	callstack 0
   196  000080                     	ds	2
   197  000082                     _uart_data:
   198                           	callstack 0
   199  000082                     	ds	1
   200  000083                     _dbuf:
   201                           	callstack 0
   202  000083                     	ds	32
   203                           
   204                           	psect	bssBANK1
   205  000100                     __pbssBANK1:
   206                           	callstack 0
   207  000100                     _print_buffer:
   208                           	callstack 0
   209  000100                     	ds	256
   210                           
   211                           	psect	cstackBANK0
   212  0000A3                     __pcstackBANK0:
   213                           	callstack 0
   214  0000A3                     sprintf@ap:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x0
   218  0000A3                     	ds	2
   219  0000A5                     sprintf@f:
   220                           	callstack 0
   221                           
   222                           ; 6 bytes @ 0x2
   223  0000A5                     	ds	6
   224                           
   225                           	psect	cstackCOMRAM
   226  000001                     __pcstackCOMRAM:
   227                           	callstack 0
   228  000001                     ??_high_isr:
   229  000001                     
   230                           ; 1 bytes @ 0x0
   231  000001                     	ds	1
   232  000002                     ??_low_isr:
   233                           
   234                           ; 1 bytes @ 0x1
   235  000002                     	ds	4
   236  000006                     ??_I2C_Idle:
   237  000006                     ?_strlen:
   238                           	callstack 0
   239  000006                     ?_isupper:
   240                           	callstack 0
   241  000006                     ?_isalpha:
   242                           	callstack 0
   243  000006                     ?_isdigit:
   244                           	callstack 0
   245  000006                     ?_isspace:
   246                           	callstack 0
   247  000006                     ?_islower:
   248                           	callstack 0
   249  000006                     ?___wmul:
   250                           	callstack 0
   251  000006                     ?___awdiv:
   252                           	callstack 0
   253  000006                     ?___awmod:
   254                           	callstack 0
   255  000006                     ?___lmul:
   256                           	callstack 0
   257  000006                     ___wmul@multiplier:
   258                           	callstack 0
   259  000006                     ___awdiv@dividend:
   260                           	callstack 0
   261  000006                     ___awmod@dividend:
   262                           	callstack 0
   263  000006                     isalpha@c:
   264                           	callstack 0
   265  000006                     isdigit@c:
   266                           	callstack 0
   267  000006                     isspace@c:
   268                           	callstack 0
   269  000006                     isupper@c:
   270                           	callstack 0
   271  000006                     fputc@c:
   272                           	callstack 0
   273  000006                     strlen@s:
   274                           	callstack 0
   275  000006                     islower@c:
   276                           	callstack 0
   277  000006                     ___lmul@multiplier:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0x5
   281  000006                     	ds	1
   282  000007                     I2C_Read@ack:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x6
   286  000007                     	ds	1
   287  000008                     ??_isupper:
   288  000008                     ??_isalpha:
   289  000008                     ??_isdigit:
   290  000008                     ??_isspace:
   291  000008                     ??_islower:
   292  000008                     I2C_Read@incoming:
   293                           	callstack 0
   294  000008                     ___wmul@multiplicand:
   295                           	callstack 0
   296  000008                     ___awdiv@divisor:
   297                           	callstack 0
   298  000008                     ___awmod@divisor:
   299                           	callstack 0
   300  000008                     fputc@fp:
   301                           	callstack 0
   302  000008                     strlen@a:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x7
   306  000008                     	ds	2
   307  00000A                     ??_fputc:
   308  00000A                     ___awdiv@counter:
   309                           	callstack 0
   310  00000A                     ___awmod@counter:
   311                           	callstack 0
   312  00000A                     ___wmul@product:
   313                           	callstack 0
   314  00000A                     ___lmul@multiplicand:
   315                           	callstack 0
   316                           
   317                           ; 4 bytes @ 0x9
   318  00000A                     	ds	1
   319  00000B                     ___awdiv@sign:
   320                           	callstack 0
   321  00000B                     ___awmod@sign:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xA
   325  00000B                     	ds	1
   326  00000C                     ?_toupper:
   327                           	callstack 0
   328  00000C                     _isspace$1141:
   329                           	callstack 0
   330  00000C                     ___awdiv@quotient:
   331                           	callstack 0
   332  00000C                     toupper@c:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0xB
   336  00000C                     	ds	1
   337  00000D                     ?_atoi:
   338                           	callstack 0
   339  00000D                     atoi@s:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0xC
   343  00000D                     	ds	1
   344  00000E                     ??_toupper:
   345  00000E                     ?_DEC_2_BCD:
   346                           	callstack 0
   347  00000E                     DEC_2_BCD@to_convert:
   348                           	callstack 0
   349  00000E                     ___lmul@product:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0xD
   353  00000E                     	ds	1
   354  00000F                     ??_atoi:
   355  00000F                     fputs@s:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xE
   359  00000F                     	ds	1
   360  000010                     ??_DEC_2_BCD:
   361                           
   362                           ; 1 bytes @ 0xF
   363  000010                     	ds	1
   364  000011                     fputs@fp:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x10
   368  000011                     	ds	1
   369  000012                     ?___lldiv:
   370                           	callstack 0
   371  000012                     I2C_Write@data:
   372                           	callstack 0
   373  000012                     _toupper$1196:
   374                           	callstack 0
   375  000012                     ___lldiv@dividend:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x11
   379  000012                     	ds	1
   380  000013                     fputs@c:
   381                           	callstack 0
   382  000013                     atoi@neg:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x12
   386  000013                     	ds	1
   387  000014                     fputs@i:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x13
   391  000014                     	ds	1
   392  000015                     _atoi$1114:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x14
   396  000015                     	ds	1
   397  000016                     ?_pad:
   398                           	callstack 0
   399  000016                     pad@fp:
   400                           	callstack 0
   401  000016                     ___lldiv@divisor:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x15
   405  000016                     	ds	1
   406  000017                     _atoi$1116:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x16
   410  000017                     	ds	1
   411  000018                     pad@buf:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x17
   415  000018                     	ds	1
   416  000019                     _atoi$1115:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x18
   420  000019                     	ds	1
   421  00001A                     pad@p:
   422                           	callstack 0
   423  00001A                     atoi@n:
   424                           	callstack 0
   425  00001A                     ___lldiv@quotient:
   426                           	callstack 0
   427                           
   428                           ; 4 bytes @ 0x19
   429  00001A                     	ds	2
   430  00001C                     ??_pad:
   431                           
   432                           ; 1 bytes @ 0x1B
   433  00001C                     	ds	1
   434  00001D                     pad@i:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x1C
   438  00001D                     	ds	1
   439  00001E                     ___lldiv@counter:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x1D
   443  00001E                     	ds	1
   444  00001F                     pad@w:
   445                           	callstack 0
   446  00001F                     UART_Init@baudrate:
   447                           	callstack 0
   448  00001F                     I2C_Initialize@feq_K:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x1E
   452  00001F                     	ds	2
   453  000021                     ?_xtoa:
   454                           	callstack 0
   455  000021                     xtoa@fp:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x20
   459  000021                     	ds	2
   460  000023                     ??_UART_Init:
   461  000023                     ??_I2C_Initialize:
   462  000023                     xtoa@d:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x22
   466  000023                     	ds	8
   467  00002B                     xtoa@x:
   468                           	callstack 0
   469  00002B                     UART_Init@baudrate_calculated:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x2A
   473  00002B                     	ds	1
   474  00002C                     ??_xtoa:
   475                           
   476                           ; 1 bytes @ 0x2B
   477  00002C                     	ds	8
   478  000034                     _xtoa$1080:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x33
   482  000034                     	ds	2
   483  000036                     _xtoa$1081:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x35
   487  000036                     	ds	2
   488  000038                     xtoa@p:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x37
   492  000038                     	ds	2
   493  00003A                     xtoa@w:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x39
   497  00003A                     	ds	2
   498  00003C                     xtoa@n:
   499                           	callstack 0
   500                           
   501                           ; 8 bytes @ 0x3B
   502  00003C                     	ds	8
   503  000044                     xtoa@i:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x43
   507  000044                     	ds	2
   508  000046                     xtoa@c:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x45
   512  000046                     	ds	2
   513  000048                     ?_vfpfcnvrt:
   514                           	callstack 0
   515  000048                     vfpfcnvrt@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x47
   519  000048                     	ds	2
   520  00004A                     vfpfcnvrt@fmt:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x49
   524  00004A                     	ds	2
   525  00004C                     vfpfcnvrt@ap:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x4B
   529  00004C                     	ds	2
   530  00004E                     ??_vfpfcnvrt:
   531                           
   532                           ; 1 bytes @ 0x4D
   533  00004E                     	ds	4
   534  000052                     vfpfcnvrt@llu:
   535                           	callstack 0
   536                           
   537                           ; 8 bytes @ 0x51
   538  000052                     	ds	8
   539  00005A                     vfpfcnvrt@c:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x59
   543  00005A                     	ds	1
   544  00005B                     vfpfcnvrt@done:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x5A
   548  00005B                     	ds	2
   549  00005D                     _vfpfcnvrt$1096:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x5C
   553  00005D                     	ds	2
   554  00005F                     ?_vfprintf:
   555                           	callstack 0
   556  00005F                     vfprintf@fp:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x5E
   560  00005F                     	ds	2
   561  000061                     vfprintf@fmt:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x60
   565  000061                     	ds	2
   566  000063                     vfprintf@ap:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x62
   570  000063                     	ds	2
   571  000065                     vfprintf@cfmt:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x64
   575  000065                     	ds	2
   576  000067                     ?_sprintf:
   577                           	callstack 0
   578  000067                     sprintf@s:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x66
   582  000067                     	ds	2
   583  000069                     sprintf@fmt:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x68
   587  000069                     	ds	4
   588  00006D                     ??_main:
   589                           
   590                           ; 1 bytes @ 0x6C
   591  00006D                     	ds	2
   592  00006F                     main@sec:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x6E
   596  00006F                     	ds	1
   597                           
   598 ;;
   599 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   600 ;;
   601 ;; *************** function _main *****************
   602 ;; Defined at:
   603 ;;		line 160 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  sec             1  110[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   617 ;;      Params:         0       0       0       0       0       0       0
   618 ;;      Locals:         1       0       0       0       0       0       0
   619 ;;      Temps:          2       0       0       0       0       0       0
   620 ;;      Totals:         3       0       0       0       0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels required when called: 10
   623 ;; This function calls:
   624 ;;		_I2C_Begin
   625 ;;		_I2C_End
   626 ;;		_I2C_Initialize
   627 ;;		_I2C_Read
   628 ;;		_I2C_Write
   629 ;;		_Set_Time_Date
   630 ;;		_UART_Init
   631 ;;		_sprintf
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638  001102                     __ptext0:
   639                           	callstack 0
   640  001102                     _main:
   641                           	callstack 21
   642  001102                     
   643                           ;main.c: 162:     UART_Init(9600);
   644  001102  0E80               	movlw	128
   645  001104  6E1F               	movwf	UART_Init@baudrate^0,c
   646  001106  0E25               	movlw	37
   647  001108  6E20               	movwf	(UART_Init@baudrate+1)^0,c
   648  00110A  0E00               	movlw	0
   649  00110C  6E21               	movwf	(UART_Init@baudrate+2)^0,c
   650  00110E  0E00               	movlw	0
   651  001110  6E22               	movwf	(UART_Init@baudrate+3)^0,c
   652  001112  EC87  F009         	call	_UART_Init	;wreg free
   653                           
   654                           ;main.c: 163:     I2C_Initialize(100);
   655  001116  0E64               	movlw	100
   656  001118  6E1F               	movwf	I2C_Initialize@feq_K^0,c
   657  00111A  0E00               	movlw	0
   658  00111C  6E20               	movwf	(I2C_Initialize@feq_K+1)^0,c
   659  00111E  0E00               	movlw	0
   660  001120  6E21               	movwf	(I2C_Initialize@feq_K+2)^0,c
   661  001122  0E00               	movlw	0
   662  001124  6E22               	movwf	(I2C_Initialize@feq_K+3)^0,c
   663  001126  ECD1  F009         	call	_I2C_Initialize	;wreg free
   664  00112A                     
   665                           ;main.c: 165:     _delay((unsigned long)((100)*(20000000/4000.0)));
   666  00112A  0E03               	movlw	3
   667  00112C  6E6E               	movwf	(??_main+1)^0,c
   668  00112E  0E8A               	movlw	138
   669  001130  6E6D               	movwf	??_main^0,c
   670  001132  0E56               	movlw	86
   671  001134                     u2337:
   672  001134  2EE8               	decfsz	wreg,f,c
   673  001136  D7FE               	bra	u2337
   674  001138  2E6D               	decfsz	??_main^0,f,c
   675  00113A  D7FC               	bra	u2337
   676  00113C  2E6E               	decfsz	(??_main+1)^0,f,c
   677  00113E  D7FA               	bra	u2337
   678  001140                     
   679                           ;main.c: 166:     Set_Time_Date();
   680  001140  EC22  F008         	call	_Set_Time_Date	;wreg free
   681  001144                     l2488:
   682                           
   683                           ;main.c: 169:     {;main.c: 171:        I2C_Begin();
   684  001144  EC50  F00C         	call	_I2C_Begin	;wreg free
   685  001148                     
   686                           ;main.c: 172:        I2C_Write((0xD0));
   687  001148  0E00               	movlw	0
   688  00114A  6E13               	movwf	(I2C_Write@data+1)^0,c
   689  00114C  0ED0               	movlw	208
   690  00114E  6E12               	movwf	I2C_Write@data^0,c
   691  001150  EC47  F00C         	call	_I2C_Write	;wreg free
   692  001154                     
   693                           ;main.c: 173:        I2C_Write(0x01);
   694  001154  0E00               	movlw	0
   695  001156  6E13               	movwf	(I2C_Write@data+1)^0,c
   696  001158  0E01               	movlw	1
   697  00115A  6E12               	movwf	I2C_Write@data^0,c
   698  00115C  EC47  F00C         	call	_I2C_Write	;wreg free
   699  001160                     
   700                           ;main.c: 174:        I2C_End();
   701  001160  EC4C  F00C         	call	_I2C_End	;wreg free
   702  001164                     
   703                           ;main.c: 178:        I2C_Begin();
   704  001164  EC50  F00C         	call	_I2C_Begin	;wreg free
   705  001168                     
   706                           ;main.c: 179:        I2C_Write((0xD1));
   707  001168  0E00               	movlw	0
   708  00116A  6E13               	movwf	(I2C_Write@data+1)^0,c
   709  00116C  0ED1               	movlw	209
   710  00116E  6E12               	movwf	I2C_Write@data^0,c
   711  001170  EC47  F00C         	call	_I2C_Write	;wreg free
   712  001174                     
   713                           ;main.c: 180:        uint8_t sec = I2C_Read(1);
   714  001174  0E01               	movlw	1
   715  001176  EC0A  F00C         	call	_I2C_Read
   716  00117A  6E6F               	movwf	main@sec^0,c
   717  00117C                     
   718                           ;main.c: 181:        I2C_End();
   719  00117C  EC4C  F00C         	call	_I2C_End	;wreg free
   720  001180                     
   721                           ;main.c: 183:        sprintf(print_buffer, "0x%02x\n\r",sec);
   722  001180  0E00               	movlw	low _print_buffer
   723  001182  6E67               	movwf	sprintf@s^0,c
   724  001184  0E01               	movlw	high _print_buffer
   725  001186  6E68               	movwf	(sprintf@s+1)^0,c
   726  001188  0E01               	movlw	low STR_1
   727  00118A  6E69               	movwf	sprintf@fmt^0,c
   728  00118C  0E06               	movlw	high STR_1
   729  00118E  6E6A               	movwf	(sprintf@fmt+1)^0,c
   730  001190  C06F  F06B         	movff	main@sec,?_sprintf+4
   731  001194  6A6C               	clrf	(?_sprintf+5)^0,c
   732  001196  ECA6  F00A         	call	_sprintf	;wreg free
   733  00119A                     
   734                           ;main.c: 185:        _delay((unsigned long)((1000)*(20000000/4000.0)));
   735  00119A  0E1A               	movlw	26
   736  00119C  6E6E               	movwf	(??_main+1)^0,c
   737  00119E  0E5E               	movlw	94
   738  0011A0  6E6D               	movwf	??_main^0,c
   739  0011A2  0E6E               	movlw	110
   740  0011A4                     u2347:
   741  0011A4  2EE8               	decfsz	wreg,f,c
   742  0011A6  D7FE               	bra	u2347
   743  0011A8  2E6D               	decfsz	??_main^0,f,c
   744  0011AA  D7FC               	bra	u2347
   745  0011AC  2E6E               	decfsz	(??_main+1)^0,f,c
   746  0011AE  D7FA               	bra	u2347
   747  0011B0  D000               	nop2	
   748  0011B2  EFA2  F008         	goto	l2488
   749  0011B6  EF38  F000         	goto	start
   750  0011BA                     __end_of_main:
   751                           	callstack 0
   752                           
   753 ;; *************** function _sprintf *****************
   754 ;; Defined at:
   755 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  s               2  102[COMRAM] PTR unsigned char 
   758 ;;		 -> print_buffer(256), 
   759 ;;  fmt             2  104[COMRAM] PTR const unsigned char 
   760 ;;		 -> STR_1(9), 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  f               6    2[BANK0 ] struct _IO_FILE
   763 ;;  ap              2    0[BANK0 ] PTR void [1]
   764 ;;		 -> ?_sprintf(2), 
   765 ;;  ret             2    0        int 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  2  102[COMRAM] int 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   775 ;;      Params:         6       0       0       0       0       0       0
   776 ;;      Locals:         0       8       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0
   778 ;;      Totals:         6       8       0       0       0       0       0
   779 ;;Total ram usage:       14 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 9
   782 ;; This function calls:
   783 ;;		_vfprintf
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text1
   790  00154C                     __ptext1:
   791                           	callstack 0
   792  00154C                     _sprintf:
   793                           	callstack 21
   794  00154C  0E6B               	movlw	low (?_sprintf+4)
   795  00154E  0100               	movlb	0	; () banked
   796  001550  6FA3               	movwf	sprintf@ap& (0+255),b
   797  001552  0E00               	movlw	high (?_sprintf+4)
   798  001554  6FA4               	movwf	(sprintf@ap+1)& (0+255),b
   799  001556  C067  F0A5         	movff	sprintf@s,sprintf@f
   800  00155A  C068  F0A6         	movff	sprintf@s+1,sprintf@f+1
   801  00155E                     
   802                           ; BSR set to: 0
   803  00155E  0E00               	movlw	0
   804  001560  6FA8               	movwf	(sprintf@f+3)& (0+255),b
   805  001562  0E00               	movlw	0
   806  001564  6FA7               	movwf	(sprintf@f+2)& (0+255),b
   807  001566                     
   808                           ; BSR set to: 0
   809  001566  0E00               	movlw	0
   810  001568  6FAA               	movwf	(sprintf@f+5)& (0+255),b
   811  00156A  0E00               	movlw	0
   812  00156C  6FA9               	movwf	(sprintf@f+4)& (0+255),b
   813  00156E                     
   814                           ; BSR set to: 0
   815  00156E  0EA5               	movlw	low sprintf@f
   816  001570  6E5F               	movwf	vfprintf@fp^0,c
   817  001572  0E00               	movlw	high sprintf@f
   818  001574  6E60               	movwf	(vfprintf@fp+1)^0,c
   819  001576  C069  F061         	movff	sprintf@fmt,vfprintf@fmt
   820  00157A  C06A  F062         	movff	sprintf@fmt+1,vfprintf@fmt+1
   821  00157E  0EA3               	movlw	low sprintf@ap
   822  001580  6E63               	movwf	vfprintf@ap^0,c
   823  001582  0E00               	movlw	high sprintf@ap
   824  001584  6E64               	movwf	(vfprintf@ap+1)^0,c
   825  001586  EC46  F00A         	call	_vfprintf	;wreg free
   826  00158A  0100               	movlb	0	; () banked
   827  00158C  51A7               	movf	(sprintf@f+2)& (0+255),w,b
   828  00158E  2467               	addwf	sprintf@s^0,w,c
   829  001590  6ED9               	movwf	fsr2l,c
   830  001592  51A8               	movf	(sprintf@f+3)& (0+255),w,b
   831  001594  2068               	addwfc	(sprintf@s+1)^0,w,c
   832  001596  6EDA               	movwf	fsr2h,c
   833  001598  0E00               	movlw	0
   834  00159A  6EDF               	movwf	indf2,c
   835  00159C                     
   836                           ; BSR set to: 0
   837  00159C  0012               	return		;funcret
   838  00159E                     __end_of_sprintf:
   839                           	callstack 0
   840                           
   841 ;; *************** function _vfprintf *****************
   842 ;; Defined at:
   843 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  fp              2   94[COMRAM] PTR struct _IO_FILE
   846 ;;		 -> sprintf@f(6), 
   847 ;;  fmt             2   96[COMRAM] PTR const unsigned char 
   848 ;;		 -> STR_1(9), 
   849 ;;  ap              2   98[COMRAM] PTR PTR void 
   850 ;;		 -> sprintf@ap(2), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  cfmt            2  100[COMRAM] PTR unsigned char 
   853 ;;		 -> STR_1(9), 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  2   94[COMRAM] int 
   856 ;; Registers used:
   857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   863 ;;      Params:         6       0       0       0       0       0       0
   864 ;;      Locals:         2       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0
   866 ;;      Totals:         8       0       0       0       0       0       0
   867 ;;Total ram usage:        8 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; Hardware stack levels required when called: 8
   870 ;; This function calls:
   871 ;;		_vfpfcnvrt
   872 ;; This function is called by:
   873 ;;		_sprintf
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text2
   878  00148C                     __ptext2:
   879                           	callstack 0
   880  00148C                     _vfprintf:
   881                           	callstack 21
   882  00148C                     
   883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   884  00148C  C061  F065         	movff	vfprintf@fmt,vfprintf@cfmt
   885  001490  C062  F066         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   886  001494                     
   887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   888  001494  0E00               	movlw	0
   889  001496  0100               	movlb	0	; () banked
   890  001498  6F81               	movwf	(_nout+1)& (0+255),b
   891  00149A  0E00               	movlw	0
   892  00149C  6F80               	movwf	_nout& (0+255),b
   893                           
   894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   895  00149E  EF64  F00A         	goto	l2464
   896  0014A2                     l2462:
   897                           
   898                           ; BSR set to: 0
   899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   900  0014A2  C05F  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
   901  0014A6  C060  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   902  0014AA  0E65               	movlw	low vfprintf@cfmt
   903  0014AC  6E4A               	movwf	vfpfcnvrt@fmt^0,c
   904  0014AE  0E00               	movlw	high vfprintf@cfmt
   905  0014B0  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
   906  0014B2  C063  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
   907  0014B6  C064  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   908  0014BA  EC06  F003         	call	_vfpfcnvrt	;wreg free
   909  0014BE  5048               	movf	?_vfpfcnvrt^0,w,c
   910  0014C0  0100               	movlb	0	; () banked
   911  0014C2  2780               	addwf	_nout& (0+255),f,b
   912  0014C4  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
   913  0014C6  2381               	addwfc	(_nout+1)& (0+255),f,b
   914  0014C8                     l2464:
   915                           
   916                           ; BSR set to: 0
   917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   918  0014C8  C065  FFF6         	movff	vfprintf@cfmt,tblptrl
   919  0014CC  C066  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   920  0014D0                     	if	0	;tblptru may be non-zero
   921  0014D0                     	endif
   922  0014D0                     	if	0	;tblptru may be non-zero
   923  0014D0                     	endif
   924  0014D0  0008               	tblrd		*
   925  0014D2  50F5               	movf	tablat,w,c
   926  0014D4  0900               	iorlw	0
   927  0014D6  A4D8               	btfss	status,2,c
   928  0014D8  EF70  F00A         	goto	u2311
   929  0014DC  EF72  F00A         	goto	u2310
   930  0014E0                     u2311:
   931  0014E0  EF51  F00A         	goto	l2462
   932  0014E4                     u2310:
   933  0014E4                     
   934                           ; BSR set to: 0
   935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   936  0014E4  C080  F05F         	movff	_nout,?_vfprintf
   937  0014E8  C081  F060         	movff	_nout+1,?_vfprintf+1
   938  0014EC                     
   939                           ; BSR set to: 0
   940  0014EC  0012               	return		;funcret
   941  0014EE                     __end_of_vfprintf:
   942                           	callstack 0
   943                           
   944 ;; *************** function _vfpfcnvrt *****************
   945 ;; Defined at:
   946 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
   949 ;;		 -> sprintf@f(6), 
   950 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
   951 ;;		 -> vfprintf@cfmt(2), 
   952 ;;  ap              2   75[COMRAM] PTR PTR void 
   953 ;;		 -> sprintf@ap(2), 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  llu             8   81[COMRAM] unsigned long long 
   956 ;;  ll              8    0        long long 
   957 ;;  f               4    0        long long 
   958 ;;  vp              3    0        PTR void 
   959 ;;  ct              3    0        unsigned char [3]
   960 ;;  cp              3    0        PTR unsigned char 
   961 ;;  done            2   90[COMRAM] int 
   962 ;;  i               2    0        int 
   963 ;;  c               1   89[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2   71[COMRAM] int 
   966 ;; Registers used:
   967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   973 ;;      Params:         6       0       0       0       0       0       0
   974 ;;      Locals:        13       0       0       0       0       0       0
   975 ;;      Temps:          4       0       0       0       0       0       0
   976 ;;      Totals:        23       0       0       0       0       0       0
   977 ;;Total ram usage:       23 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 7
   980 ;; This function calls:
   981 ;;		_atoi
   982 ;;		_fputc
   983 ;;		_isdigit
   984 ;;		_xtoa
   985 ;; This function is called by:
   986 ;;		_vfprintf
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text3
   991  00060C                     __ptext3:
   992                           	callstack 0
   993  00060C                     _vfpfcnvrt:
   994                           	callstack 21
   995  00060C                     
   996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   997  00060C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   998  000610  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   999  000614  CFDE FFF6          	movff	postinc2,tblptrl
  1000  000618  CFDD FFF7          	movff	postdec2,tblptrh
  1001  00061C                     	if	0	;tblptru may be non-zero
  1002  00061C                     	endif
  1003  00061C                     	if	0	;tblptru may be non-zero
  1004  00061C                     	endif
  1005  00061C  0008               	tblrd		*
  1006  00061E  50F5               	movf	tablat,w,c
  1007  000620  0A25               	xorlw	37
  1008  000622  A4D8               	btfss	status,2,c
  1009  000624  EF16  F003         	goto	u2201
  1010  000628  EF18  F003         	goto	u2200
  1011  00062C                     u2201:
  1012  00062C  EFAC  F004         	goto	l2446
  1013  000630                     u2200:
  1014  000630                     
  1015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1016  000630  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1017  000634  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1018  000638  2ADE               	incf	postinc2,f,c
  1019  00063A  0E00               	movlw	0
  1020  00063C  22DD               	addwfc	postdec2,f,c
  1021  00063E                     
  1022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1023  00063E  0E00               	movlw	0
  1024  000640  6E71               	movwf	(_width+1)^0,c
  1025  000642  0E00               	movlw	0
  1026  000644  6E70               	movwf	_width^0,c
  1027  000646  C070  F074         	movff	_width,_flags
  1028  00064A  C071  F075         	movff	_width+1,_flags+1
  1029  00064E                     
  1030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1031  00064E  6872               	setf	_prec^0,c
  1032  000650  6873               	setf	(_prec+1)^0,c
  1033  000652                     
  1034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1035  000652  0E00               	movlw	0
  1036  000654  6E5C               	movwf	(vfpfcnvrt@done+1)^0,c
  1037  000656  0E00               	movlw	0
  1038  000658  6E5B               	movwf	vfpfcnvrt@done^0,c
  1039                           
  1040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1041  00065A  EF75  F003         	goto	l2394
  1042  00065E                     l2368:
  1043                           
  1044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1045  00065E  8074               	bsf	_flags^0,0,c
  1046  000660                     l2370:
  1047                           
  1048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1049  000660  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1050  000664  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1051  000668  2ADE               	incf	postinc2,f,c
  1052  00066A  0E00               	movlw	0
  1053  00066C  22DD               	addwfc	postdec2,f,c
  1054                           
  1055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1056  00066E  EF75  F003         	goto	l2394
  1057  000672                     l2372:
  1058                           
  1059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1060  000672  8274               	bsf	_flags^0,1,c
  1061  000674  EF30  F003         	goto	l2370
  1062  000678                     l2376:
  1063                           
  1064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1065  000678  8474               	bsf	_flags^0,2,c
  1066  00067A  EF30  F003         	goto	l2370
  1067  00067E                     l2380:
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1070  00067E  8674               	bsf	_flags^0,3,c
  1071  000680  EF30  F003         	goto	l2370
  1072  000684                     l2384:
  1073                           
  1074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1075  000684  8874               	bsf	_flags^0,4,c
  1076  000686  EF30  F003         	goto	l2370
  1077  00068A                     l2388:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1080  00068A  0E00               	movlw	0
  1081  00068C  6E5C               	movwf	(vfpfcnvrt@done+1)^0,c
  1082  00068E  0E01               	movlw	1
  1083  000690  6E5B               	movwf	vfpfcnvrt@done^0,c
  1084                           
  1085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1086  000692  EF75  F003         	goto	l2394
  1087  000696                     l2392:
  1088  000696  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1089  00069A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1090  00069E  CFDE FFF6          	movff	postinc2,tblptrl
  1091  0006A2  CFDD FFF7          	movff	postdec2,tblptrh
  1092  0006A6                     	if	0	;tblptru may be non-zero
  1093  0006A6                     	endif
  1094  0006A6                     	if	0	;tblptru may be non-zero
  1095  0006A6                     	endif
  1096  0006A6  0008               	tblrd		*
  1097  0006A8  50F5               	movf	tablat,w,c
  1098  0006AA  6E4E               	movwf	??_vfpfcnvrt^0,c
  1099  0006AC  6A4F               	clrf	(??_vfpfcnvrt+1)^0,c
  1100                           
  1101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1102                           ; Switch size 1, requested type "simple"
  1103                           ; Number of cases is 1, Range of values is 0 to 0
  1104                           ; switch strategies available:
  1105                           ; Name         Instructions Cycles
  1106                           ; simple_byte            4     3 (average)
  1107                           ;	Chosen strategy is simple_byte
  1108  0006AE  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1109  0006B0  0A00               	xorlw	0	; case 0
  1110  0006B2  B4D8               	btfsc	status,2,c
  1111  0006B4  EF5E  F003         	goto	l2548
  1112  0006B8  EF45  F003         	goto	l2388
  1113  0006BC                     l2548:
  1114                           
  1115                           ; Switch size 1, requested type "simple"
  1116                           ; Number of cases is 5, Range of values is 32 to 48
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte           16     9 (average)
  1120                           ;	Chosen strategy is simple_byte
  1121  0006BC  504E               	movf	??_vfpfcnvrt^0,w,c
  1122  0006BE  0A20               	xorlw	32	; case 32
  1123  0006C0  B4D8               	btfsc	status,2,c
  1124  0006C2  EF3F  F003         	goto	l2380
  1125  0006C6  0A03               	xorlw	3	; case 35
  1126  0006C8  B4D8               	btfsc	status,2,c
  1127  0006CA  EF42  F003         	goto	l2384
  1128  0006CE  0A08               	xorlw	8	; case 43
  1129  0006D0  B4D8               	btfsc	status,2,c
  1130  0006D2  EF3C  F003         	goto	l2376
  1131  0006D6  0A06               	xorlw	6	; case 45
  1132  0006D8  B4D8               	btfsc	status,2,c
  1133  0006DA  EF2F  F003         	goto	l2368
  1134  0006DE  0A1D               	xorlw	29	; case 48
  1135  0006E0  B4D8               	btfsc	status,2,c
  1136  0006E2  EF39  F003         	goto	l2372
  1137  0006E6  EF45  F003         	goto	l2388
  1138  0006EA                     l2394:
  1139                           
  1140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1141  0006EA  505B               	movf	vfpfcnvrt@done^0,w,c
  1142  0006EC  105C               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1143  0006EE  B4D8               	btfsc	status,2,c
  1144  0006F0  EF7C  F003         	goto	u2211
  1145  0006F4  EF7E  F003         	goto	u2210
  1146  0006F8                     u2211:
  1147  0006F8  EF4B  F003         	goto	l2392
  1148  0006FC                     u2210:
  1149  0006FC                     
  1150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1151  0006FC  A074               	btfss	_flags^0,0,c
  1152  0006FE  EF83  F003         	goto	u2221
  1153  000702  EF85  F003         	goto	u2220
  1154  000706                     u2221:
  1155  000706  EF86  F003         	goto	l2398
  1156  00070A                     u2220:
  1157  00070A                     
  1158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1159  00070A  9274               	bcf	_flags^0,1,c
  1160  00070C                     l2398:
  1161                           
  1162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1163  00070C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1164  000710  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1165  000714  CFDE FFF6          	movff	postinc2,tblptrl
  1166  000718  CFDD FFF7          	movff	postdec2,tblptrh
  1167  00071C                     	if	0	;tblptru may be non-zero
  1168  00071C                     	endif
  1169  00071C                     	if	0	;tblptru may be non-zero
  1170  00071C                     	endif
  1171  00071C  0008               	tblrd		*
  1172  00071E  50F5               	movf	tablat,w,c
  1173  000720  0A2A               	xorlw	42
  1174  000722  A4D8               	btfss	status,2,c
  1175  000724  EF96  F003         	goto	u2231
  1176  000728  EF98  F003         	goto	u2230
  1177  00072C                     u2231:
  1178  00072C  EFC1  F003         	goto	l2406
  1179  000730                     u2230:
  1180  000730                     
  1181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1182  000730  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1183  000734  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1184  000738  2ADE               	incf	postinc2,f,c
  1185  00073A  0E00               	movlw	0
  1186  00073C  22DD               	addwfc	postdec2,f,c
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1189  00073E  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1190  000742  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1191  000746  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1192  00074A  0E02               	movlw	2
  1193  00074C  26DE               	addwf	postinc2,f,c
  1194  00074E  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1195  000752  0E00               	movlw	0
  1196  000754  22DD               	addwfc	postdec2,f,c
  1197  000756  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1198  00075A  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1199  00075E  CFDE F070          	movff	postinc2,_width
  1200  000762  CFDD F071          	movff	postdec2,_width+1
  1201  000766                     
  1202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1203  000766  BE71               	btfsc	(_width+1)^0,7,c
  1204  000768  EFBA  F003         	goto	u2240
  1205  00076C  EFB8  F003         	goto	u2241
  1206  000770                     u2241:
  1207  000770  EF04  F004         	goto	l2416
  1208  000774                     u2240:
  1209  000774                     
  1210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1211  000774  8074               	bsf	_flags^0,0,c
  1212                           
  1213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1214  000776  6C70               	negf	_width^0,c
  1215  000778  1E71               	comf	(_width+1)^0,f,c
  1216  00077A  B0D8               	btfsc	status,0,c
  1217  00077C  2A71               	incf	(_width+1)^0,f,c
  1218  00077E  EF04  F004         	goto	l2416
  1219  000782                     l2406:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1222  000782  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1223  000786  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1224  00078A  CFDE F00D          	movff	postinc2,atoi@s
  1225  00078E  CFDD F00E          	movff	postdec2,atoi@s+1
  1226  000792  EC32  F006         	call	_atoi	;wreg free
  1227  000796  C00D  F070         	movff	?_atoi,_width
  1228  00079A  C00E  F071         	movff	?_atoi+1,_width+1
  1229                           
  1230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1231  00079E  EFD8  F003         	goto	l2410
  1232  0007A2                     l2408:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1235  0007A2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1236  0007A6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1237  0007AA  2ADE               	incf	postinc2,f,c
  1238  0007AC  0E00               	movlw	0
  1239  0007AE  22DD               	addwfc	postdec2,f,c
  1240  0007B0                     l2410:
  1241  0007B0  0ED0               	movlw	208
  1242  0007B2  6E4E               	movwf	??_vfpfcnvrt^0,c
  1243  0007B4  0EFF               	movlw	255
  1244  0007B6  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  1245  0007B8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1246  0007BC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1247  0007C0  CFDE FFF6          	movff	postinc2,tblptrl
  1248  0007C4  CFDD FFF7          	movff	postdec2,tblptrh
  1249  0007C8                     	if	0	;tblptru may be non-zero
  1250  0007C8                     	endif
  1251  0007C8                     	if	0	;tblptru may be non-zero
  1252  0007C8                     	endif
  1253  0007C8  0008               	tblrd		*
  1254  0007CA  50F5               	movf	tablat,w,c
  1255  0007CC  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  1256  0007CE  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  1257  0007D0  504E               	movf	??_vfpfcnvrt^0,w,c
  1258  0007D2  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1259  0007D4  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1260  0007D6  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1261  0007D8  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  1262  0007DA  E10A               	bnz	u2250
  1263  0007DC  0E0A               	movlw	10
  1264  0007DE  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1265  0007E0  A0D8               	btfss	status,0,c
  1266  0007E2  EFF5  F003         	goto	u2251
  1267  0007E6  EFF8  F003         	goto	u2250
  1268  0007EA                     u2251:
  1269  0007EA  0E01               	movlw	1
  1270  0007EC  EFF9  F003         	goto	u2260
  1271  0007F0                     u2250:
  1272  0007F0  0E00               	movlw	0
  1273  0007F2                     u2260:
  1274  0007F2  6E5D               	movwf	_vfpfcnvrt$1096^0,c
  1275  0007F4  6A5E               	clrf	(_vfpfcnvrt$1096+1)^0,c
  1276  0007F6  505D               	movf	_vfpfcnvrt$1096^0,w,c
  1277  0007F8  105E               	iorwf	(_vfpfcnvrt$1096+1)^0,w,c
  1278  0007FA  A4D8               	btfss	status,2,c
  1279  0007FC  EF02  F004         	goto	u2271
  1280  000800  EF04  F004         	goto	u2270
  1281  000804                     u2271:
  1282  000804  EFD1  F003         	goto	l2408
  1283  000808                     u2270:
  1284  000808                     l2416:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1287  000808  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1288  00080C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1289  000810  CFDE FFF6          	movff	postinc2,tblptrl
  1290  000814  CFDD FFF7          	movff	postdec2,tblptrh
  1291  000818                     	if	0	;tblptru may be non-zero
  1292  000818                     	endif
  1293  000818                     	if	0	;tblptru may be non-zero
  1294  000818                     	endif
  1295  000818  0008               	tblrd		*
  1296  00081A  50F5               	movf	tablat,w,c
  1297  00081C  0A78               	xorlw	120
  1298  00081E  B4D8               	btfsc	status,2,c
  1299  000820  EF14  F004         	goto	u2281
  1300  000824  EF16  F004         	goto	u2280
  1301  000828                     u2281:
  1302  000828  EF28  F004         	goto	l2420
  1303  00082C                     u2280:
  1304  00082C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1305  000830  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1306  000834  CFDE FFF6          	movff	postinc2,tblptrl
  1307  000838  CFDD FFF7          	movff	postdec2,tblptrh
  1308  00083C                     	if	0	;tblptru may be non-zero
  1309  00083C                     	endif
  1310  00083C                     	if	0	;tblptru may be non-zero
  1311  00083C                     	endif
  1312  00083C  0008               	tblrd		*
  1313  00083E  50F5               	movf	tablat,w,c
  1314  000840  0A58               	xorlw	88
  1315  000842  A4D8               	btfss	status,2,c
  1316  000844  EF26  F004         	goto	u2291
  1317  000848  EF28  F004         	goto	u2290
  1318  00084C                     u2291:
  1319  00084C  EF76  F004         	goto	l2430
  1320  000850                     u2290:
  1321  000850                     l2420:
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1324  000850  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1325  000854  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1326  000858  CFDE FFF6          	movff	postinc2,tblptrl
  1327  00085C  CFDD FFF7          	movff	postdec2,tblptrh
  1328  000860                     	if	0	;tblptru may be non-zero
  1329  000860                     	endif
  1330  000860                     	if	0	;tblptru may be non-zero
  1331  000860                     	endif
  1332  000860  0008               	tblrd		*
  1333  000862  CFF5 F05A          	movff	tablat,vfpfcnvrt@c
  1334  000866                     
  1335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1336  000866  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1337  00086A  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1338  00086E  2ADE               	incf	postinc2,f,c
  1339  000870  0E00               	movlw	0
  1340  000872  22DD               	addwfc	postdec2,f,c
  1341  000874                     
  1342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1343  000874  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1344  000878  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1345  00087C  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1346  000880  0E02               	movlw	2
  1347  000882  26DE               	addwf	postinc2,f,c
  1348  000884  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1349  000888  0E00               	movlw	0
  1350  00088A  22DD               	addwfc	postdec2,f,c
  1351  00088C  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1352  000890  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1353  000894  CFDE F050          	movff	postinc2,??_vfpfcnvrt+2
  1354  000898  CFDD F051          	movff	postdec2,??_vfpfcnvrt+3
  1355  00089C  C050  F052         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1356  0008A0  C051  F053         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1357  0008A4  6A54               	clrf	(vfpfcnvrt@llu+2)^0,c
  1358  0008A6  6A55               	clrf	(vfpfcnvrt@llu+3)^0,c
  1359  0008A8  6A56               	clrf	(vfpfcnvrt@llu+4)^0,c
  1360  0008AA  6A57               	clrf	(vfpfcnvrt@llu+5)^0,c
  1361  0008AC  6A58               	clrf	(vfpfcnvrt@llu+6)^0,c
  1362  0008AE  6A59               	clrf	(vfpfcnvrt@llu+7)^0,c
  1363  0008B0                     
  1364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1365  0008B0  C048  F021         	movff	vfpfcnvrt@fp,xtoa@fp
  1366  0008B4  C049  F022         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1367  0008B8  C052  F023         	movff	vfpfcnvrt@llu,xtoa@d
  1368  0008BC  C053  F024         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1369  0008C0  C054  F025         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1370  0008C4  C055  F026         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1371  0008C8  C056  F027         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1372  0008CC  C057  F028         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1373  0008D0  C058  F029         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1374  0008D4  C059  F02A         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1375  0008D8  C05A  F02B         	movff	vfpfcnvrt@c,xtoa@x
  1376  0008DC  ECC8  F004         	call	_xtoa	;wreg free
  1377  0008E0  C021  F048         	movff	?_xtoa,?_vfpfcnvrt
  1378  0008E4  C022  F049         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1379  0008E8  EFC7  F004         	goto	l910
  1380  0008EC                     l2430:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1383  0008EC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1384  0008F0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1385  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  1386  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  1387  0008FC                     	if	0	;tblptru may be non-zero
  1388  0008FC                     	endif
  1389  0008FC                     	if	0	;tblptru may be non-zero
  1390  0008FC                     	endif
  1391  0008FC  0008               	tblrd		*
  1392  0008FE  50F5               	movf	tablat,w,c
  1393  000900  0A25               	xorlw	37
  1394  000902  A4D8               	btfss	status,2,c
  1395  000904  EF86  F004         	goto	u2301
  1396  000908  EF88  F004         	goto	u2300
  1397  00090C                     u2301:
  1398  00090C  EF9F  F004         	goto	l2440
  1399  000910                     u2300:
  1400  000910                     
  1401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1402  000910  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1403  000914  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1404  000918  2ADE               	incf	postinc2,f,c
  1405  00091A  0E00               	movlw	0
  1406  00091C  22DD               	addwfc	postdec2,f,c
  1407  00091E                     
  1408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1409  00091E  0E00               	movlw	0
  1410  000920  6E07               	movwf	(fputc@c+1)^0,c
  1411  000922  0E25               	movlw	37
  1412  000924  6E06               	movwf	fputc@c^0,c
  1413  000926  C048  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1414  00092A  C049  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1415  00092E  ECFA  F006         	call	_fputc	;wreg free
  1416  000932                     l2436:
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1419  000932  0E00               	movlw	0
  1420  000934  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1421  000936  0E01               	movlw	1
  1422  000938  6E48               	movwf	?_vfpfcnvrt^0,c
  1423  00093A  EFC7  F004         	goto	l910
  1424  00093E                     l2440:
  1425                           
  1426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1427  00093E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1428  000942  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1429  000946  2ADE               	incf	postinc2,f,c
  1430  000948  0E00               	movlw	0
  1431  00094A  22DD               	addwfc	postdec2,f,c
  1432  00094C                     
  1433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1434  00094C  0E00               	movlw	0
  1435  00094E  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1436  000950  0E00               	movlw	0
  1437  000952  6E48               	movwf	?_vfpfcnvrt^0,c
  1438  000954  EFC7  F004         	goto	l910
  1439  000958                     l2446:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1442  000958  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  00095C  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  000960  CFDE FFF6          	movff	postinc2,tblptrl
  1445  000964  CFDD FFF7          	movff	postdec2,tblptrh
  1446  000968                     	if	0	;tblptru may be non-zero
  1447  000968                     	endif
  1448  000968                     	if	0	;tblptru may be non-zero
  1449  000968                     	endif
  1450  000968  0008               	tblrd		*
  1451  00096A  50F5               	movf	tablat,w,c
  1452  00096C  6E06               	movwf	fputc@c^0,c
  1453  00096E  6A07               	clrf	(fputc@c+1)^0,c
  1454  000970  C048  F008         	movff	vfpfcnvrt@fp,fputc@fp
  1455  000974  C049  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1456  000978  ECFA  F006         	call	_fputc	;wreg free
  1457  00097C                     
  1458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1459  00097C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1460  000980  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1461  000984  2ADE               	incf	postinc2,f,c
  1462  000986  0E00               	movlw	0
  1463  000988  22DD               	addwfc	postdec2,f,c
  1464  00098A  EF99  F004         	goto	l2436
  1465  00098E                     l910:
  1466  00098E  0012               	return		;funcret
  1467  000990                     __end_of_vfpfcnvrt:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _xtoa *****************
  1471 ;; Defined at:
  1472 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  1475 ;;		 -> sprintf@f(6), 
  1476 ;;  d               8   34[COMRAM] unsigned long long 
  1477 ;;  x               1   42[COMRAM] unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  n               8   59[COMRAM] unsigned long long 
  1480 ;;  c               2   69[COMRAM] int 
  1481 ;;  i               2   67[COMRAM] int 
  1482 ;;  w               2   57[COMRAM] int 
  1483 ;;  p               2   55[COMRAM] int 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2   32[COMRAM] int 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:        11       0       0       0       0       0       0
  1494 ;;      Locals:        20       0       0       0       0       0       0
  1495 ;;      Temps:          8       0       0       0       0       0       0
  1496 ;;      Totals:        39       0       0       0       0       0       0
  1497 ;;Total ram usage:       39 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 6
  1500 ;; This function calls:
  1501 ;;		_isalpha
  1502 ;;		_isupper
  1503 ;;		_pad
  1504 ;;		_toupper
  1505 ;; This function is called by:
  1506 ;;		_vfpfcnvrt
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text4
  1511  000990                     __ptext4:
  1512                           	callstack 0
  1513  000990                     _xtoa:
  1514                           	callstack 21
  1515  000990                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1517  000990  BE73               	btfsc	(_prec+1)^0,7,c
  1518  000992  EFCD  F004         	goto	u1961
  1519  000996  EFCF  F004         	goto	u1960
  1520  00099A                     u1961:
  1521  00099A  EFD0  F004         	goto	l2254
  1522  00099E                     u1960:
  1523  00099E                     
  1524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1525  00099E  9274               	bcf	_flags^0,1,c
  1526  0009A0                     l2254:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1529  0009A0  BE73               	btfsc	(_prec+1)^0,7,c
  1530  0009A2  EFDD  F004         	goto	u1970
  1531  0009A6  5073               	movf	(_prec+1)^0,w,c
  1532  0009A8  E106               	bnz	u1971
  1533  0009AA  0472               	decf	_prec^0,w,c
  1534  0009AC  B0D8               	btfsc	status,0,c
  1535  0009AE  EFDB  F004         	goto	u1971
  1536  0009B2  EFDD  F004         	goto	u1970
  1537  0009B6                     u1971:
  1538  0009B6  EFE3  F004         	goto	l856
  1539  0009BA                     u1970:
  1540  0009BA  0E00               	movlw	0
  1541  0009BC  6E39               	movwf	(xtoa@p+1)^0,c
  1542  0009BE  0E01               	movlw	1
  1543  0009C0  6E38               	movwf	xtoa@p^0,c
  1544  0009C2  EFE7  F004         	goto	l858
  1545  0009C6                     l856:
  1546  0009C6  C072  F038         	movff	_prec,xtoa@p
  1547  0009CA  C073  F039         	movff	_prec+1,xtoa@p+1
  1548  0009CE                     l858:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1551  0009CE  C070  F03A         	movff	_width,xtoa@w
  1552  0009D2  C071  F03B         	movff	_width+1,xtoa@w+1
  1553                           
  1554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1555  0009D6  A874               	btfss	_flags^0,4,c
  1556  0009D8  EFF0  F004         	goto	u1981
  1557  0009DC  EFF2  F004         	goto	u1980
  1558  0009E0                     u1981:
  1559  0009E0  EFF6  F004         	goto	l2260
  1560  0009E4                     u1980:
  1561  0009E4                     
  1562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1563  0009E4  0EFE               	movlw	254
  1564  0009E6  263A               	addwf	xtoa@w^0,f,c
  1565  0009E8  0EFF               	movlw	255
  1566  0009EA  223B               	addwfc	(xtoa@w+1)^0,f,c
  1567  0009EC                     l2260:
  1568                           
  1569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1570  0009EC  C023  F03C         	movff	xtoa@d,xtoa@n
  1571  0009F0  C024  F03D         	movff	xtoa@d+1,xtoa@n+1
  1572  0009F4  C025  F03E         	movff	xtoa@d+2,xtoa@n+2
  1573  0009F8  C026  F03F         	movff	xtoa@d+3,xtoa@n+3
  1574  0009FC  C027  F040         	movff	xtoa@d+4,xtoa@n+4
  1575  000A00  C028  F041         	movff	xtoa@d+5,xtoa@n+5
  1576  000A04  C029  F042         	movff	xtoa@d+6,xtoa@n+6
  1577  000A08  C02A  F043         	movff	xtoa@d+7,xtoa@n+7
  1578  000A0C                     
  1579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1580  000A0C  0E00               	movlw	0
  1581  000A0E  6E45               	movwf	(xtoa@i+1)^0,c
  1582  000A10  0E1F               	movlw	31
  1583  000A12  6E44               	movwf	xtoa@i^0,c
  1584  000A14                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1586  000A14  0E00               	movlw	0
  1587  000A16  0100               	movlb	0	; () banked
  1588  000A18  6FA2               	movwf	(_dbuf+31)& (0+255),b
  1589                           
  1590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1591  000A1A  EFC2  F005         	goto	l2296
  1592  000A1E                     l2266:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  1595  000A1E  0644               	decf	xtoa@i^0,f,c
  1596  000A20  A0D8               	btfss	status,0,c
  1597  000A22  0645               	decf	(xtoa@i+1)^0,f,c
  1598  000A24                     
  1599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1600  000A24  0E0F               	movlw	15
  1601  000A26  143C               	andwf	xtoa@n^0,w,c
  1602  000A28  6E46               	movwf	xtoa@c^0,c
  1603  000A2A  6A47               	clrf	(xtoa@c+1)^0,c
  1604  000A2C                     
  1605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1606  000A2C  BE47               	btfsc	(xtoa@c+1)^0,7,c
  1607  000A2E  EF22  F005         	goto	u1991
  1608  000A32  5047               	movf	(xtoa@c+1)^0,w,c
  1609  000A34  E109               	bnz	u1990
  1610  000A36  0E0A               	movlw	10
  1611  000A38  5C46               	subwf	xtoa@c^0,w,c
  1612  000A3A  A0D8               	btfss	status,0,c
  1613  000A3C  EF22  F005         	goto	u1991
  1614  000A40  EF24  F005         	goto	u1990
  1615  000A44                     u1991:
  1616  000A44  EF2C  F005         	goto	l2274
  1617  000A48                     u1990:
  1618  000A48  0E57               	movlw	87
  1619  000A4A  2446               	addwf	xtoa@c^0,w,c
  1620  000A4C  6E46               	movwf	xtoa@c^0,c
  1621  000A4E  0E00               	movlw	0
  1622  000A50  2047               	addwfc	(xtoa@c+1)^0,w,c
  1623  000A52  6E47               	movwf	(xtoa@c+1)^0,c
  1624  000A54  EF32  F005         	goto	l865
  1625  000A58                     l2274:
  1626  000A58  0E30               	movlw	48
  1627  000A5A  2446               	addwf	xtoa@c^0,w,c
  1628  000A5C  6E46               	movwf	xtoa@c^0,c
  1629  000A5E  0E00               	movlw	0
  1630  000A60  2047               	addwfc	(xtoa@c+1)^0,w,c
  1631  000A62  6E47               	movwf	(xtoa@c+1)^0,c
  1632  000A64                     l865:
  1633  000A64  0EBF               	movlw	191
  1634  000A66  6E2C               	movwf	??_xtoa^0,c
  1635  000A68  0EFF               	movlw	255
  1636  000A6A  6E2D               	movwf	(??_xtoa+1)^0,c
  1637  000A6C  502B               	movf	xtoa@x^0,w,c
  1638  000A6E  6E2E               	movwf	(??_xtoa+2)^0,c
  1639  000A70  6A2F               	clrf	(??_xtoa+3)^0,c
  1640  000A72  502C               	movf	??_xtoa^0,w,c
  1641  000A74  262E               	addwf	(??_xtoa+2)^0,f,c
  1642  000A76  502D               	movf	(??_xtoa+1)^0,w,c
  1643  000A78  222F               	addwfc	(??_xtoa+3)^0,f,c
  1644  000A7A  502F               	movf	(??_xtoa+3)^0,w,c
  1645  000A7C  E10A               	bnz	u2000
  1646  000A7E  0E1A               	movlw	26
  1647  000A80  5C2E               	subwf	(??_xtoa+2)^0,w,c
  1648  000A82  A0D8               	btfss	status,0,c
  1649  000A84  EF46  F005         	goto	u2001
  1650  000A88  EF49  F005         	goto	u2000
  1651  000A8C                     u2001:
  1652  000A8C  0E01               	movlw	1
  1653  000A8E  EF4A  F005         	goto	u2010
  1654  000A92                     u2000:
  1655  000A92  0E00               	movlw	0
  1656  000A94                     u2010:
  1657  000A94  6E34               	movwf	_xtoa$1080^0,c
  1658  000A96  6A35               	clrf	(_xtoa$1080+1)^0,c
  1659  000A98  5034               	movf	_xtoa$1080^0,w,c
  1660  000A9A  1035               	iorwf	(_xtoa$1080+1)^0,w,c
  1661  000A9C  B4D8               	btfsc	status,2,c
  1662  000A9E  EF53  F005         	goto	u2021
  1663  000AA2  EF55  F005         	goto	u2020
  1664  000AA6                     u2021:
  1665  000AA6  EF85  F005         	goto	l2288
  1666  000AAA                     u2020:
  1667  000AAA  0E9F               	movlw	159
  1668  000AAC  6E2C               	movwf	??_xtoa^0,c
  1669  000AAE  0EFF               	movlw	255
  1670  000AB0  6E2D               	movwf	(??_xtoa+1)^0,c
  1671  000AB2  0E20               	movlw	32
  1672  000AB4  1046               	iorwf	xtoa@c^0,w,c
  1673  000AB6  6E2E               	movwf	(??_xtoa+2)^0,c
  1674  000AB8  0E00               	movlw	0
  1675  000ABA  1047               	iorwf	(xtoa@c+1)^0,w,c
  1676  000ABC  6E2F               	movwf	(??_xtoa+3)^0,c
  1677  000ABE  502C               	movf	??_xtoa^0,w,c
  1678  000AC0  262E               	addwf	(??_xtoa+2)^0,f,c
  1679  000AC2  502D               	movf	(??_xtoa+1)^0,w,c
  1680  000AC4  222F               	addwfc	(??_xtoa+3)^0,f,c
  1681  000AC6  502F               	movf	(??_xtoa+3)^0,w,c
  1682  000AC8  E10A               	bnz	u2030
  1683  000ACA  0E1A               	movlw	26
  1684  000ACC  5C2E               	subwf	(??_xtoa+2)^0,w,c
  1685  000ACE  A0D8               	btfss	status,0,c
  1686  000AD0  EF6C  F005         	goto	u2031
  1687  000AD4  EF6F  F005         	goto	u2030
  1688  000AD8                     u2031:
  1689  000AD8  0E01               	movlw	1
  1690  000ADA  EF70  F005         	goto	u2040
  1691  000ADE                     u2030:
  1692  000ADE  0E00               	movlw	0
  1693  000AE0                     u2040:
  1694  000AE0  6E36               	movwf	_xtoa$1081^0,c
  1695  000AE2  6A37               	clrf	(_xtoa$1081+1)^0,c
  1696  000AE4  5036               	movf	_xtoa$1081^0,w,c
  1697  000AE6  1037               	iorwf	(_xtoa$1081+1)^0,w,c
  1698  000AE8  B4D8               	btfsc	status,2,c
  1699  000AEA  EF79  F005         	goto	u2051
  1700  000AEE  EF7B  F005         	goto	u2050
  1701  000AF2                     u2051:
  1702  000AF2  EF85  F005         	goto	l2288
  1703  000AF6                     u2050:
  1704  000AF6                     
  1705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  1706  000AF6  C046  F00C         	movff	xtoa@c,toupper@c
  1707  000AFA  C047  F00D         	movff	xtoa@c+1,toupper@c+1
  1708  000AFE  EC77  F00A         	call	_toupper	;wreg free
  1709  000B02  C00C  F046         	movff	?_toupper,xtoa@c
  1710  000B06  C00D  F047         	movff	?_toupper+1,xtoa@c+1
  1711  000B0A                     l2288:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  1714  000B0A  0E83               	movlw	low _dbuf
  1715  000B0C  2444               	addwf	xtoa@i^0,w,c
  1716  000B0E  6ED9               	movwf	fsr2l,c
  1717  000B10  0E00               	movlw	high _dbuf
  1718  000B12  2045               	addwfc	(xtoa@i+1)^0,w,c
  1719  000B14  6EDA               	movwf	fsr2h,c
  1720  000B16  C046  FFDF         	movff	xtoa@c,indf2
  1721  000B1A                     
  1722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  1723  000B1A  0638               	decf	xtoa@p^0,f,c
  1724  000B1C  A0D8               	btfss	status,0,c
  1725  000B1E  0639               	decf	(xtoa@p+1)^0,f,c
  1726  000B20                     
  1727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  1728  000B20  063A               	decf	xtoa@w^0,f,c
  1729  000B22  A0D8               	btfss	status,0,c
  1730  000B24  063B               	decf	(xtoa@w+1)^0,f,c
  1731  000B26                     
  1732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  1733  000B26  C03C  F02C         	movff	xtoa@n,??_xtoa
  1734  000B2A  C03D  F02D         	movff	xtoa@n+1,??_xtoa+1
  1735  000B2E  C03E  F02E         	movff	xtoa@n+2,??_xtoa+2
  1736  000B32  C03F  F02F         	movff	xtoa@n+3,??_xtoa+3
  1737  000B36  C040  F030         	movff	xtoa@n+4,??_xtoa+4
  1738  000B3A  C041  F031         	movff	xtoa@n+5,??_xtoa+5
  1739  000B3E  C042  F032         	movff	xtoa@n+6,??_xtoa+6
  1740  000B42  C043  F033         	movff	xtoa@n+7,??_xtoa+7
  1741  000B46  0E05               	movlw	5
  1742  000B48  EFAF  F005         	goto	u2060
  1743  000B4C                     u2065:
  1744  000B4C  90D8               	bcf	status,0,c
  1745  000B4E  3233               	rrcf	(??_xtoa+7)^0,f,c
  1746  000B50  3232               	rrcf	(??_xtoa+6)^0,f,c
  1747  000B52  3231               	rrcf	(??_xtoa+5)^0,f,c
  1748  000B54  3230               	rrcf	(??_xtoa+4)^0,f,c
  1749  000B56  322F               	rrcf	(??_xtoa+3)^0,f,c
  1750  000B58  322E               	rrcf	(??_xtoa+2)^0,f,c
  1751  000B5A  322D               	rrcf	(??_xtoa+1)^0,f,c
  1752  000B5C  322C               	rrcf	??_xtoa^0,f,c
  1753  000B5E                     u2060:
  1754  000B5E  2EE8               	decfsz	wreg,f,c
  1755  000B60  EFA6  F005         	goto	u2065
  1756  000B64  C02C  F03C         	movff	??_xtoa,xtoa@n
  1757  000B68  C02D  F03D         	movff	??_xtoa+1,xtoa@n+1
  1758  000B6C  C02E  F03E         	movff	??_xtoa+2,xtoa@n+2
  1759  000B70  C02F  F03F         	movff	??_xtoa+3,xtoa@n+3
  1760  000B74  C030  F040         	movff	??_xtoa+4,xtoa@n+4
  1761  000B78  C031  F041         	movff	??_xtoa+5,xtoa@n+5
  1762  000B7C  C032  F042         	movff	??_xtoa+6,xtoa@n+6
  1763  000B80  C033  F043         	movff	??_xtoa+7,xtoa@n+7
  1764  000B84                     l2296:
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1767  000B84  BE45               	btfsc	(xtoa@i+1)^0,7,c
  1768  000B86  EFCE  F005         	goto	u2071
  1769  000B8A  5045               	movf	(xtoa@i+1)^0,w,c
  1770  000B8C  E109               	bnz	u2070
  1771  000B8E  0E02               	movlw	2
  1772  000B90  5C44               	subwf	xtoa@i^0,w,c
  1773  000B92  A0D8               	btfss	status,0,c
  1774  000B94  EFCE  F005         	goto	u2071
  1775  000B98  EFD0  F005         	goto	u2070
  1776  000B9C                     u2071:
  1777  000B9C  EF00  F006         	goto	l879
  1778  000BA0                     u2070:
  1779  000BA0  503C               	movf	xtoa@n^0,w,c
  1780  000BA2  103D               	iorwf	(xtoa@n+1)^0,w,c
  1781  000BA4  103E               	iorwf	(xtoa@n+2)^0,w,c
  1782  000BA6  103F               	iorwf	(xtoa@n+3)^0,w,c
  1783  000BA8  1040               	iorwf	(xtoa@n+4)^0,w,c
  1784  000BAA  1041               	iorwf	(xtoa@n+5)^0,w,c
  1785  000BAC  1042               	iorwf	(xtoa@n+6)^0,w,c
  1786  000BAE  1043               	iorwf	(xtoa@n+7)^0,w,c
  1787  000BB0  A4D8               	btfss	status,2,c
  1788  000BB2  EFDD  F005         	goto	u2081
  1789  000BB6  EFDF  F005         	goto	u2080
  1790  000BBA                     u2081:
  1791  000BBA  EF0F  F005         	goto	l2266
  1792  000BBE                     u2080:
  1793  000BBE  BE39               	btfsc	(xtoa@p+1)^0,7,c
  1794  000BC0  EFEC  F005         	goto	u2090
  1795  000BC4  5039               	movf	(xtoa@p+1)^0,w,c
  1796  000BC6  E106               	bnz	u2091
  1797  000BC8  0438               	decf	xtoa@p^0,w,c
  1798  000BCA  B0D8               	btfsc	status,0,c
  1799  000BCC  EFEA  F005         	goto	u2091
  1800  000BD0  EFEC  F005         	goto	u2090
  1801  000BD4                     u2091:
  1802  000BD4  EF0F  F005         	goto	l2266
  1803  000BD8                     u2090:
  1804  000BD8  BE3B               	btfsc	(xtoa@w+1)^0,7,c
  1805  000BDA  EFF7  F005         	goto	u2101
  1806  000BDE  503B               	movf	(xtoa@w+1)^0,w,c
  1807  000BE0  E108               	bnz	u2100
  1808  000BE2  043A               	decf	xtoa@w^0,w,c
  1809  000BE4  A0D8               	btfss	status,0,c
  1810  000BE6  EFF7  F005         	goto	u2101
  1811  000BEA  EFF9  F005         	goto	u2100
  1812  000BEE                     u2101:
  1813  000BEE  EF00  F006         	goto	l879
  1814  000BF2                     u2100:
  1815  000BF2  B274               	btfsc	_flags^0,1,c
  1816  000BF4  EFFE  F005         	goto	u2111
  1817  000BF8  EF00  F006         	goto	u2110
  1818  000BFC                     u2111:
  1819  000BFC  EF0F  F005         	goto	l2266
  1820  000C00                     u2110:
  1821  000C00                     l879:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  1824  000C00  A874               	btfss	_flags^0,4,c
  1825  000C02  EF05  F006         	goto	u2121
  1826  000C06  EF07  F006         	goto	u2120
  1827  000C0A                     u2121:
  1828  000C0A  EF1D  F006         	goto	l2312
  1829  000C0E                     u2120:
  1830  000C0E                     
  1831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  1832  000C0E  0644               	decf	xtoa@i^0,f,c
  1833  000C10  A0D8               	btfss	status,0,c
  1834  000C12  0645               	decf	(xtoa@i+1)^0,f,c
  1835  000C14                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  1837  000C14  0E83               	movlw	low _dbuf
  1838  000C16  2444               	addwf	xtoa@i^0,w,c
  1839  000C18  6ED9               	movwf	fsr2l,c
  1840  000C1A  0E00               	movlw	high _dbuf
  1841  000C1C  2045               	addwfc	(xtoa@i+1)^0,w,c
  1842  000C1E  6EDA               	movwf	fsr2h,c
  1843  000C20  C02B  FFDF         	movff	xtoa@x,indf2
  1844  000C24                     
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  1846  000C24  0644               	decf	xtoa@i^0,f,c
  1847  000C26  A0D8               	btfss	status,0,c
  1848  000C28  0645               	decf	(xtoa@i+1)^0,f,c
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  1851  000C2A  0E83               	movlw	low _dbuf
  1852  000C2C  2444               	addwf	xtoa@i^0,w,c
  1853  000C2E  6ED9               	movwf	fsr2l,c
  1854  000C30  0E00               	movlw	high _dbuf
  1855  000C32  2045               	addwfc	(xtoa@i+1)^0,w,c
  1856  000C34  6EDA               	movwf	fsr2h,c
  1857  000C36  0E30               	movlw	48
  1858  000C38  6EDF               	movwf	indf2,c
  1859  000C3A                     l2312:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  1862  000C3A  C021  F016         	movff	xtoa@fp,pad@fp
  1863  000C3E  C022  F017         	movff	xtoa@fp+1,pad@fp+1
  1864  000C42  0E83               	movlw	low _dbuf
  1865  000C44  2444               	addwf	xtoa@i^0,w,c
  1866  000C46  6E18               	movwf	pad@buf^0,c
  1867  000C48  0E00               	movlw	high _dbuf
  1868  000C4A  2045               	addwfc	(xtoa@i+1)^0,w,c
  1869  000C4C  6E19               	movwf	(pad@buf+1)^0,c
  1870  000C4E  C03A  F01A         	movff	xtoa@w,pad@p
  1871  000C52  C03B  F01B         	movff	xtoa@w+1,pad@p+1
  1872  000C56  ECC1  F007         	call	_pad	;wreg free
  1873  000C5A  C016  F021         	movff	?_pad,?_xtoa
  1874  000C5E  C017  F022         	movff	?_pad+1,?_xtoa+1
  1875  000C62  0012               	return		;funcret
  1876  000C64                     __end_of_xtoa:
  1877                           	callstack 0
  1878                           
  1879 ;; *************** function _toupper *****************
  1880 ;; Defined at:
  1881 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  c               2   11[COMRAM] int 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  2   11[COMRAM] int 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1895 ;;      Params:         2       0       0       0       0       0       0
  1896 ;;      Locals:         2       0       0       0       0       0       0
  1897 ;;      Temps:          4       0       0       0       0       0       0
  1898 ;;      Totals:         8       0       0       0       0       0       0
  1899 ;;Total ram usage:        8 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 3
  1902 ;; This function calls:
  1903 ;;		_islower
  1904 ;; This function is called by:
  1905 ;;		_xtoa
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text5
  1910  0014EE                     __ptext5:
  1911                           	callstack 0
  1912  0014EE                     _toupper:
  1913                           	callstack 23
  1914  0014EE  0E9F               	movlw	159
  1915  0014F0  6E0E               	movwf	??_toupper^0,c
  1916  0014F2  0EFF               	movlw	255
  1917  0014F4  6E0F               	movwf	(??_toupper+1)^0,c
  1918  0014F6  C00C  F010         	movff	toupper@c,??_toupper+2
  1919  0014FA  C00D  F011         	movff	toupper@c+1,??_toupper+3
  1920  0014FE  500E               	movf	??_toupper^0,w,c
  1921  001500  2610               	addwf	(??_toupper+2)^0,f,c
  1922  001502  500F               	movf	(??_toupper+1)^0,w,c
  1923  001504  2211               	addwfc	(??_toupper+3)^0,f,c
  1924  001506  5011               	movf	(??_toupper+3)^0,w,c
  1925  001508  E10A               	bnz	u1890
  1926  00150A  0E1A               	movlw	26
  1927  00150C  5C10               	subwf	(??_toupper+2)^0,w,c
  1928  00150E  A0D8               	btfss	status,0,c
  1929  001510  EF8C  F00A         	goto	u1891
  1930  001514  EF8F  F00A         	goto	u1890
  1931  001518                     u1891:
  1932  001518  0E01               	movlw	1
  1933  00151A  EF90  F00A         	goto	u1900
  1934  00151E                     u1890:
  1935  00151E  0E00               	movlw	0
  1936  001520                     u1900:
  1937  001520  6E12               	movwf	_toupper$1196^0,c
  1938  001522  6A13               	clrf	(_toupper$1196+1)^0,c
  1939  001524  5012               	movf	_toupper$1196^0,w,c
  1940  001526  1013               	iorwf	(_toupper$1196+1)^0,w,c
  1941  001528  B4D8               	btfsc	status,2,c
  1942  00152A  EF99  F00A         	goto	u1911
  1943  00152E  EF9B  F00A         	goto	u1910
  1944  001532                     u1911:
  1945  001532  EFA1  F00A         	goto	l1008
  1946  001536                     u1910:
  1947  001536  0E5F               	movlw	95
  1948  001538  140C               	andwf	toupper@c^0,w,c
  1949  00153A  6E0C               	movwf	?_toupper^0,c
  1950  00153C  6A0D               	clrf	(?_toupper+1)^0,c
  1951  00153E  EFA5  F00A         	goto	l1013
  1952  001542                     l1008:
  1953  001542  C00C  F00C         	movff	toupper@c,?_toupper
  1954  001546  C00D  F00D         	movff	toupper@c+1,?_toupper+1
  1955  00154A                     l1013:
  1956  00154A  0012               	return		;funcret
  1957  00154C                     __end_of_toupper:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function _islower *****************
  1961 ;; Defined at:
  1962 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  c               2    5[COMRAM] int 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2    5[COMRAM] int 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1976 ;;      Params:         2       0       0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0
  1978 ;;      Temps:          4       0       0       0       0       0       0
  1979 ;;      Totals:         6       0       0       0       0       0       0
  1980 ;;Total ram usage:        6 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 2
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_toupper
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text6
  1991  001736                     __ptext6:
  1992                           	callstack 0
  1993  001736                     _islower:
  1994                           	callstack 23
  1995  001736  0E9F               	movlw	159
  1996  001738  6E08               	movwf	??_islower^0,c
  1997  00173A  0EFF               	movlw	255
  1998  00173C  6E09               	movwf	(??_islower+1)^0,c
  1999  00173E  C006  F00A         	movff	islower@c,??_islower+2
  2000  001742  C007  F00B         	movff	islower@c+1,??_islower+3
  2001  001746  5008               	movf	??_islower^0,w,c
  2002  001748  260A               	addwf	(??_islower+2)^0,f,c
  2003  00174A  5009               	movf	(??_islower+1)^0,w,c
  2004  00174C  220B               	addwfc	(??_islower+3)^0,f,c
  2005  00174E  500B               	movf	(??_islower+3)^0,w,c
  2006  001750  E10A               	bnz	u1790
  2007  001752  0E1A               	movlw	26
  2008  001754  5C0A               	subwf	(??_islower+2)^0,w,c
  2009  001756  A0D8               	btfss	status,0,c
  2010  001758  EFB0  F00B         	goto	u1791
  2011  00175C  EFB3  F00B         	goto	u1790
  2012  001760                     u1791:
  2013  001760  0E01               	movlw	1
  2014  001762  EFB4  F00B         	goto	u1800
  2015  001766                     u1790:
  2016  001766  0E00               	movlw	0
  2017  001768                     u1800:
  2018  001768  6E06               	movwf	?_islower^0,c
  2019  00176A  6A07               	clrf	(?_islower+1)^0,c
  2020  00176C  0012               	return		;funcret
  2021  00176E                     __end_of_islower:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _pad *****************
  2025 ;; Defined at:
  2026 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  2029 ;;		 -> sprintf@f(6), 
  2030 ;;  buf             2   23[COMRAM] PTR unsigned char 
  2031 ;;		 -> dbuf(32), 
  2032 ;;  p               2   25[COMRAM] int 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  w               2   30[COMRAM] int 
  2035 ;;  i               2   28[COMRAM] int 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2   21[COMRAM] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2045 ;;      Params:         6       0       0       0       0       0       0
  2046 ;;      Locals:         4       0       0       0       0       0       0
  2047 ;;      Temps:          1       0       0       0       0       0       0
  2048 ;;      Totals:        11       0       0       0       0       0       0
  2049 ;;Total ram usage:       11 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 5
  2052 ;; This function calls:
  2053 ;;		_fputc
  2054 ;;		_fputs
  2055 ;;		_strlen
  2056 ;; This function is called by:
  2057 ;;		_xtoa
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text7
  2062  000F82                     __ptext7:
  2063                           	callstack 0
  2064  000F82                     _pad:
  2065                           	callstack 21
  2066  000F82                     
  2067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2068  000F82  A074               	btfss	_flags^0,0,c
  2069  000F84  EFC6  F007         	goto	u1811
  2070  000F88  EFC8  F007         	goto	u1810
  2071  000F8C                     u1811:
  2072  000F8C  EFD2  F007         	goto	l2198
  2073  000F90                     u1810:
  2074  000F90                     
  2075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2076  000F90  C018  F00F         	movff	pad@buf,fputs@s
  2077  000F94  C019  F010         	movff	pad@buf+1,fputs@s+1
  2078  000F98  C016  F011         	movff	pad@fp,fputs@fp
  2079  000F9C  C017  F012         	movff	pad@fp+1,fputs@fp+1
  2080  000FA0  EC20  F00B         	call	_fputs	;wreg free
  2081  000FA4                     l2198:
  2082                           
  2083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2084  000FA4  BE1B               	btfsc	(pad@p+1)^0,7,c
  2085  000FA6  EFD7  F007         	goto	u1821
  2086  000FAA  EFD9  F007         	goto	u1820
  2087  000FAE                     u1821:
  2088  000FAE  EFDF  F007         	goto	l2202
  2089  000FB2                     u1820:
  2090  000FB2  C01A  F01F         	movff	pad@p,pad@w
  2091  000FB6  C01B  F020         	movff	pad@p+1,pad@w+1
  2092  000FBA  EFE3  F007         	goto	l846
  2093  000FBE                     l2202:
  2094  000FBE  0E00               	movlw	0
  2095  000FC0  6E20               	movwf	(pad@w+1)^0,c
  2096  000FC2  0E00               	movlw	0
  2097  000FC4  6E1F               	movwf	pad@w^0,c
  2098  000FC6                     l846:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2101  000FC6  0E00               	movlw	0
  2102  000FC8  6E1E               	movwf	(pad@i+1)^0,c
  2103  000FCA  0E00               	movlw	0
  2104  000FCC  6E1D               	movwf	pad@i^0,c
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2107  000FCE  EFF5  F007         	goto	l2208
  2108  000FD2                     l2204:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2111  000FD2  0E00               	movlw	0
  2112  000FD4  6E07               	movwf	(fputc@c+1)^0,c
  2113  000FD6  0E20               	movlw	32
  2114  000FD8  6E06               	movwf	fputc@c^0,c
  2115  000FDA  C016  F008         	movff	pad@fp,fputc@fp
  2116  000FDE  C017  F009         	movff	pad@fp+1,fputc@fp+1
  2117  000FE2  ECFA  F006         	call	_fputc	;wreg free
  2118  000FE6                     
  2119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2120  000FE6  4A1D               	infsnz	pad@i^0,f,c
  2121  000FE8  2A1E               	incf	(pad@i+1)^0,f,c
  2122  000FEA                     l2208:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2125  000FEA  501F               	movf	pad@w^0,w,c
  2126  000FEC  5C1D               	subwf	pad@i^0,w,c
  2127  000FEE  501E               	movf	(pad@i+1)^0,w,c
  2128  000FF0  0A80               	xorlw	128
  2129  000FF2  6E1C               	movwf	??_pad^0,c
  2130  000FF4  5020               	movf	(pad@w+1)^0,w,c
  2131  000FF6  0A80               	xorlw	128
  2132  000FF8  581C               	subwfb	??_pad^0,w,c
  2133  000FFA  A0D8               	btfss	status,0,c
  2134  000FFC  EF02  F008         	goto	u1831
  2135  001000  EF04  F008         	goto	u1830
  2136  001004                     u1831:
  2137  001004  EFE9  F007         	goto	l2204
  2138  001008                     u1830:
  2139  001008                     
  2140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2141  001008  B074               	btfsc	_flags^0,0,c
  2142  00100A  EF09  F008         	goto	u1841
  2143  00100E  EF0B  F008         	goto	u1840
  2144  001012                     u1841:
  2145  001012  EF15  F008         	goto	l2212
  2146  001016                     u1840:
  2147  001016                     
  2148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2149  001016  C018  F00F         	movff	pad@buf,fputs@s
  2150  00101A  C019  F010         	movff	pad@buf+1,fputs@s+1
  2151  00101E  C016  F011         	movff	pad@fp,fputs@fp
  2152  001022  C017  F012         	movff	pad@fp+1,fputs@fp+1
  2153  001026  EC20  F00B         	call	_fputs	;wreg free
  2154  00102A                     l2212:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2157  00102A  C018  F006         	movff	pad@buf,strlen@s
  2158  00102E  C019  F007         	movff	pad@buf+1,strlen@s+1
  2159  001032  ECEF  F00B         	call	_strlen	;wreg free
  2160  001036  501F               	movf	pad@w^0,w,c
  2161  001038  2406               	addwf	?_strlen^0,w,c
  2162  00103A  6E16               	movwf	?_pad^0,c
  2163  00103C  5020               	movf	(pad@w+1)^0,w,c
  2164  00103E  2007               	addwfc	(?_strlen+1)^0,w,c
  2165  001040  6E17               	movwf	(?_pad+1)^0,c
  2166  001042  0012               	return		;funcret
  2167  001044                     __end_of_pad:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function _strlen *****************
  2171 ;; Defined at:
  2172 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2175 ;;		 -> dbuf(32), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2178 ;;		 -> dbuf(32), 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2    5[COMRAM] unsigned int 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2188 ;;      Params:         2       0       0       0       0       0       0
  2189 ;;      Locals:         2       0       0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0
  2191 ;;      Totals:         4       0       0       0       0       0       0
  2192 ;;Total ram usage:        4 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 2
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_pad
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text8
  2203  0017DE                     __ptext8:
  2204                           	callstack 0
  2205  0017DE                     _strlen:
  2206                           	callstack 23
  2207  0017DE  C006  F008         	movff	strlen@s,strlen@a
  2208  0017E2  C007  F009         	movff	strlen@s+1,strlen@a+1
  2209  0017E6  EFF7  F00B         	goto	l2178
  2210  0017EA                     l2176:
  2211  0017EA  4A06               	infsnz	strlen@s^0,f,c
  2212  0017EC  2A07               	incf	(strlen@s+1)^0,f,c
  2213  0017EE                     l2178:
  2214  0017EE  C006  FFD9         	movff	strlen@s,fsr2l
  2215  0017F2  C007  FFDA         	movff	strlen@s+1,fsr2h
  2216  0017F6  50DF               	movf	indf2,w,c
  2217  0017F8  A4D8               	btfss	status,2,c
  2218  0017FA  EF01  F00C         	goto	u1781
  2219  0017FE  EF03  F00C         	goto	u1780
  2220  001802                     u1781:
  2221  001802  EFF5  F00B         	goto	l2176
  2222  001806                     u1780:
  2223  001806  5008               	movf	strlen@a^0,w,c
  2224  001808  5C06               	subwf	strlen@s^0,w,c
  2225  00180A  6E06               	movwf	?_strlen^0,c
  2226  00180C  5009               	movf	(strlen@a+1)^0,w,c
  2227  00180E  5807               	subwfb	(strlen@s+1)^0,w,c
  2228  001810  6E07               	movwf	(?_strlen+1)^0,c
  2229  001812  0012               	return		;funcret
  2230  001814                     __end_of_strlen:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _fputs *****************
  2234 ;; Defined at:
  2235 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  s               2   14[COMRAM] PTR const unsigned char 
  2238 ;;		 -> dbuf(32), 
  2239 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2240 ;;		 -> sprintf@f(6), 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  i               2   19[COMRAM] int 
  2243 ;;  c               1   18[COMRAM] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  2   14[COMRAM] int 
  2246 ;; Registers used:
  2247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2253 ;;      Params:         4       0       0       0       0       0       0
  2254 ;;      Locals:         3       0       0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0
  2256 ;;      Totals:         7       0       0       0       0       0       0
  2257 ;;Total ram usage:        7 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 4
  2260 ;; This function calls:
  2261 ;;		_fputc
  2262 ;; This function is called by:
  2263 ;;		_pad
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text9
  2268  001640                     __ptext9:
  2269                           	callstack 0
  2270  001640                     _fputs:
  2271                           	callstack 21
  2272  001640  0E00               	movlw	0
  2273  001642  6E15               	movwf	(fputs@i+1)^0,c
  2274  001644  0E00               	movlw	0
  2275  001646  6E14               	movwf	fputs@i^0,c
  2276  001648  EF31  F00B         	goto	l2172
  2277  00164C                     l2168:
  2278  00164C  C013  F006         	movff	fputs@c,fputc@c
  2279  001650  6A07               	clrf	(fputc@c+1)^0,c
  2280  001652  C011  F008         	movff	fputs@fp,fputc@fp
  2281  001656  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  2282  00165A  ECFA  F006         	call	_fputc	;wreg free
  2283  00165E  4A14               	infsnz	fputs@i^0,f,c
  2284  001660  2A15               	incf	(fputs@i+1)^0,f,c
  2285  001662                     l2172:
  2286  001662  5014               	movf	fputs@i^0,w,c
  2287  001664  240F               	addwf	fputs@s^0,w,c
  2288  001666  6ED9               	movwf	fsr2l,c
  2289  001668  5015               	movf	(fputs@i+1)^0,w,c
  2290  00166A  2010               	addwfc	(fputs@s+1)^0,w,c
  2291  00166C  6EDA               	movwf	fsr2h,c
  2292  00166E  50DF               	movf	indf2,w,c
  2293  001670  6E13               	movwf	fputs@c^0,c
  2294  001672  5013               	movf	fputs@c^0,w,c
  2295  001674  A4D8               	btfss	status,2,c
  2296  001676  EF3F  F00B         	goto	u1771
  2297  00167A  EF41  F00B         	goto	u1770
  2298  00167E                     u1771:
  2299  00167E  EF26  F00B         	goto	l2168
  2300  001682                     u1770:
  2301  001682  0012               	return		;funcret
  2302  001684                     __end_of_fputs:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _fputc *****************
  2306 ;; Defined at:
  2307 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  c               2    5[COMRAM] int 
  2310 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  2311 ;;		 -> sprintf@f(6), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  2    5[COMRAM] int 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2323 ;;      Params:         4       0       0       0       0       0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0
  2325 ;;      Temps:          5       0       0       0       0       0       0
  2326 ;;      Totals:         9       0       0       0       0       0       0
  2327 ;;Total ram usage:        9 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 3
  2330 ;; This function calls:
  2331 ;;		_putch
  2332 ;; This function is called by:
  2333 ;;		_pad
  2334 ;;		_vfpfcnvrt
  2335 ;;		_fputs
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text10
  2340  000DF4                     __ptext10:
  2341                           	callstack 0
  2342  000DF4                     _fputc:
  2343                           	callstack 21
  2344  000DF4  5008               	movf	fputc@fp^0,w,c
  2345  000DF6  1009               	iorwf	(fputc@fp+1)^0,w,c
  2346  000DF8  B4D8               	btfsc	status,2,c
  2347  000DFA  EF01  F007         	goto	u1731
  2348  000DFE  EF03  F007         	goto	u1730
  2349  000E02                     u1731:
  2350  000E02  EF0C  F007         	goto	l2156
  2351  000E06                     u1730:
  2352  000E06  5008               	movf	fputc@fp^0,w,c
  2353  000E08  1009               	iorwf	(fputc@fp+1)^0,w,c
  2354  000E0A  A4D8               	btfss	status,2,c
  2355  000E0C  EF0A  F007         	goto	u1741
  2356  000E10  EF0C  F007         	goto	u1740
  2357  000E14                     u1741:
  2358  000E14  EF11  F007         	goto	l2158
  2359  000E18                     u1740:
  2360  000E18                     l2156:
  2361  000E18  5006               	movf	fputc@c^0,w,c
  2362  000E1A  EC54  F00C         	call	_putch
  2363  000E1E  EF5E  F007         	goto	l986
  2364  000E22                     l2158:
  2365  000E22  EE20 F004          	lfsr	2,4
  2366  000E26  5008               	movf	fputc@fp^0,w,c
  2367  000E28  26D9               	addwf	fsr2l,f,c
  2368  000E2A  5009               	movf	(fputc@fp+1)^0,w,c
  2369  000E2C  22DA               	addwfc	fsr2h,f,c
  2370  000E2E  50DE               	movf	postinc2,w,c
  2371  000E30  10DE               	iorwf	postinc2,w,c
  2372  000E32  B4D8               	btfsc	status,2,c
  2373  000E34  EF1E  F007         	goto	u1751
  2374  000E38  EF20  F007         	goto	u1750
  2375  000E3C                     u1751:
  2376  000E3C  EF3B  F007         	goto	l2162
  2377  000E40                     u1750:
  2378  000E40  EE20 F004          	lfsr	2,4
  2379  000E44  5008               	movf	fputc@fp^0,w,c
  2380  000E46  26D9               	addwf	fsr2l,f,c
  2381  000E48  5009               	movf	(fputc@fp+1)^0,w,c
  2382  000E4A  22DA               	addwfc	fsr2h,f,c
  2383  000E4C  EE10 F002          	lfsr	1,2
  2384  000E50  5008               	movf	fputc@fp^0,w,c
  2385  000E52  26E1               	addwf	fsr1l,f,c
  2386  000E54  5009               	movf	(fputc@fp+1)^0,w,c
  2387  000E56  22E2               	addwfc	fsr1h,f,c
  2388  000E58  50DE               	movf	postinc2,w,c
  2389  000E5A  5CE6               	subwf	postinc1,w,c
  2390  000E5C  50E6               	movf	postinc1,w,c
  2391  000E5E  0A80               	xorlw	128
  2392  000E60  6E0E               	movwf	(??_fputc+4)^0,c
  2393  000E62  50DE               	movf	postinc2,w,c
  2394  000E64  0A80               	xorlw	128
  2395  000E66  580E               	subwfb	(??_fputc+4)^0,w,c
  2396  000E68  B0D8               	btfsc	status,0,c
  2397  000E6A  EF39  F007         	goto	u1761
  2398  000E6E  EF3B  F007         	goto	u1760
  2399  000E72                     u1761:
  2400  000E72  EF5E  F007         	goto	l986
  2401  000E76                     u1760:
  2402  000E76                     l2162:
  2403  000E76  EE20 F002          	lfsr	2,2
  2404  000E7A  5008               	movf	fputc@fp^0,w,c
  2405  000E7C  26D9               	addwf	fsr2l,f,c
  2406  000E7E  5009               	movf	(fputc@fp+1)^0,w,c
  2407  000E80  22DA               	addwfc	fsr2h,f,c
  2408  000E82  CFDE F00A          	movff	postinc2,??_fputc
  2409  000E86  CFDD F00B          	movff	postdec2,??_fputc+1
  2410  000E8A  C008  FFD9         	movff	fputc@fp,fsr2l
  2411  000E8E  C009  FFDA         	movff	fputc@fp+1,fsr2h
  2412  000E92  CFDE F00C          	movff	postinc2,??_fputc+2
  2413  000E96  CFDD F00D          	movff	postdec2,??_fputc+3
  2414  000E9A  500A               	movf	??_fputc^0,w,c
  2415  000E9C  240C               	addwf	(??_fputc+2)^0,w,c
  2416  000E9E  6ED9               	movwf	fsr2l,c
  2417  000EA0  500B               	movf	(??_fputc+1)^0,w,c
  2418  000EA2  200D               	addwfc	(??_fputc+3)^0,w,c
  2419  000EA4  6EDA               	movwf	fsr2h,c
  2420  000EA6  C006  FFDF         	movff	fputc@c,indf2
  2421  000EAA  EE20 F002          	lfsr	2,2
  2422  000EAE  5008               	movf	fputc@fp^0,w,c
  2423  000EB0  26D9               	addwf	fsr2l,f,c
  2424  000EB2  5009               	movf	(fputc@fp+1)^0,w,c
  2425  000EB4  22DA               	addwfc	fsr2h,f,c
  2426  000EB6  2ADE               	incf	postinc2,f,c
  2427  000EB8  0E00               	movlw	0
  2428  000EBA  22DD               	addwfc	postdec2,f,c
  2429  000EBC                     l986:
  2430  000EBC  0012               	return		;funcret
  2431  000EBE                     __end_of_fputc:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _putch *****************
  2435 ;; Defined at:
  2436 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  c               1    wreg     unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  c               1    0[COMRAM] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2450 ;;      Params:         0       0       0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 2
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_fputc
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text11
  2465  0018A8                     __ptext11:
  2466                           	callstack 0
  2467  0018A8                     _putch:
  2468                           	callstack 21
  2469  0018A8  0012               	return		;funcret
  2470  0018AA                     __end_of_putch:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _isupper *****************
  2474 ;; Defined at:
  2475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  c               2    5[COMRAM] int 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  2    5[COMRAM] int 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2489 ;;      Params:         2       0       0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0
  2491 ;;      Temps:          4       0       0       0       0       0       0
  2492 ;;      Totals:         6       0       0       0       0       0       0
  2493 ;;Total ram usage:        6 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 2
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_xtoa
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text12
  2504  00176E                     __ptext12:
  2505                           	callstack 0
  2506  00176E                     _isupper:
  2507                           	callstack 24
  2508  00176E  0EBF               	movlw	191
  2509  001770  6E08               	movwf	??_isupper^0,c
  2510  001772  0EFF               	movlw	255
  2511  001774  6E09               	movwf	(??_isupper+1)^0,c
  2512  001776  C006  F00A         	movff	isupper@c,??_isupper+2
  2513  00177A  C007  F00B         	movff	isupper@c+1,??_isupper+3
  2514  00177E  5008               	movf	??_isupper^0,w,c
  2515  001780  260A               	addwf	(??_isupper+2)^0,f,c
  2516  001782  5009               	movf	(??_isupper+1)^0,w,c
  2517  001784  220B               	addwfc	(??_isupper+3)^0,f,c
  2518  001786  500B               	movf	(??_isupper+3)^0,w,c
  2519  001788  E10A               	bnz	u1850
  2520  00178A  0E1A               	movlw	26
  2521  00178C  5C0A               	subwf	(??_isupper+2)^0,w,c
  2522  00178E  A0D8               	btfss	status,0,c
  2523  001790  EFCC  F00B         	goto	u1851
  2524  001794  EFCF  F00B         	goto	u1850
  2525  001798                     u1851:
  2526  001798  0E01               	movlw	1
  2527  00179A  EFD0  F00B         	goto	u1860
  2528  00179E                     u1850:
  2529  00179E  0E00               	movlw	0
  2530  0017A0                     u1860:
  2531  0017A0  6E06               	movwf	?_isupper^0,c
  2532  0017A2  6A07               	clrf	(?_isupper+1)^0,c
  2533  0017A4  0012               	return		;funcret
  2534  0017A6                     __end_of_isupper:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _isalpha *****************
  2538 ;; Defined at:
  2539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  c               2    5[COMRAM] int 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2    5[COMRAM] int 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2553 ;;      Params:         2       0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0
  2555 ;;      Temps:          4       0       0       0       0       0       0
  2556 ;;      Totals:         6       0       0       0       0       0       0
  2557 ;;Total ram usage:        6 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 2
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_xtoa
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text13
  2568  001684                     __ptext13:
  2569                           	callstack 0
  2570  001684                     _isalpha:
  2571                           	callstack 24
  2572  001684  0E9F               	movlw	159
  2573  001686  6E08               	movwf	??_isalpha^0,c
  2574  001688  0EFF               	movlw	255
  2575  00168A  6E09               	movwf	(??_isalpha+1)^0,c
  2576  00168C  0E20               	movlw	32
  2577  00168E  1006               	iorwf	isalpha@c^0,w,c
  2578  001690  6E0A               	movwf	(??_isalpha+2)^0,c
  2579  001692  0E00               	movlw	0
  2580  001694  1007               	iorwf	(isalpha@c+1)^0,w,c
  2581  001696  6E0B               	movwf	(??_isalpha+3)^0,c
  2582  001698  5008               	movf	??_isalpha^0,w,c
  2583  00169A  260A               	addwf	(??_isalpha+2)^0,f,c
  2584  00169C  5009               	movf	(??_isalpha+1)^0,w,c
  2585  00169E  220B               	addwfc	(??_isalpha+3)^0,f,c
  2586  0016A0  500B               	movf	(??_isalpha+3)^0,w,c
  2587  0016A2  E10A               	bnz	u1870
  2588  0016A4  0E1A               	movlw	26
  2589  0016A6  5C0A               	subwf	(??_isalpha+2)^0,w,c
  2590  0016A8  A0D8               	btfss	status,0,c
  2591  0016AA  EF59  F00B         	goto	u1871
  2592  0016AE  EF5C  F00B         	goto	u1870
  2593  0016B2                     u1871:
  2594  0016B2  0E01               	movlw	1
  2595  0016B4  EF5D  F00B         	goto	u1880
  2596  0016B8                     u1870:
  2597  0016B8  0E00               	movlw	0
  2598  0016BA                     u1880:
  2599  0016BA  6E06               	movwf	?_isalpha^0,c
  2600  0016BC  6A07               	clrf	(?_isalpha+1)^0,c
  2601  0016BE  0012               	return		;funcret
  2602  0016C0                     __end_of_isalpha:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function _atoi *****************
  2606 ;; Defined at:
  2607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  s               2   12[COMRAM] PTR const unsigned char 
  2610 ;;		 -> STR_1(9), 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  n               2   25[COMRAM] int 
  2613 ;;  neg             2   18[COMRAM] int 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  2   12[COMRAM] int 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2623 ;;      Params:         2       0       0       0       0       0       0
  2624 ;;      Locals:         9       0       0       0       0       0       0
  2625 ;;      Temps:          4       0       0       0       0       0       0
  2626 ;;      Totals:        15       0       0       0       0       0       0
  2627 ;;Total ram usage:       15 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 3
  2630 ;; This function calls:
  2631 ;;		___wmul
  2632 ;;		_isdigit
  2633 ;;		_isspace
  2634 ;; This function is called by:
  2635 ;;		_vfpfcnvrt
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text14
  2640  000C64                     __ptext14:
  2641                           	callstack 0
  2642  000C64                     _atoi:
  2643                           	callstack 24
  2644  000C64  0E00               	movlw	0
  2645  000C66  6E1B               	movwf	(atoi@n+1)^0,c
  2646  000C68  0E00               	movlw	0
  2647  000C6A  6E1A               	movwf	atoi@n^0,c
  2648  000C6C  0E00               	movlw	0
  2649  000C6E  6E14               	movwf	(atoi@neg+1)^0,c
  2650  000C70  0E00               	movlw	0
  2651  000C72  6E13               	movwf	atoi@neg^0,c
  2652  000C74  EF3E  F006         	goto	l2320
  2653  000C78                     l2318:
  2654  000C78  4A0D               	infsnz	atoi@s^0,f,c
  2655  000C7A  2A0E               	incf	(atoi@s+1)^0,f,c
  2656  000C7C                     l2320:
  2657  000C7C  0E01               	movlw	1
  2658  000C7E  6E19               	movwf	_atoi$1115^0,c
  2659  000C80  C00D  FFF6         	movff	atoi@s,tblptrl
  2660  000C84  C00E  FFF7         	movff	atoi@s+1,tblptrh
  2661  000C88                     	if	0	;tblptru may be non-zero
  2662  000C88                     	endif
  2663  000C88                     	if	0	;tblptru may be non-zero
  2664  000C88                     	endif
  2665  000C88  0008               	tblrd		*
  2666  000C8A  50F5               	movf	tablat,w,c
  2667  000C8C  0A20               	xorlw	32
  2668  000C8E  B4D8               	btfsc	status,2,c
  2669  000C90  EF4C  F006         	goto	u2131
  2670  000C94  EF4E  F006         	goto	u2130
  2671  000C98                     u2131:
  2672  000C98  EF6B  F006         	goto	l2328
  2673  000C9C                     u2130:
  2674  000C9C  0EF7               	movlw	247
  2675  000C9E  6E0F               	movwf	??_atoi^0,c
  2676  000CA0  0EFF               	movlw	255
  2677  000CA2  6E10               	movwf	(??_atoi+1)^0,c
  2678  000CA4  C00D  FFF6         	movff	atoi@s,tblptrl
  2679  000CA8  C00E  FFF7         	movff	atoi@s+1,tblptrh
  2680  000CAC                     	if	0	;tblptru may be non-zero
  2681  000CAC                     	endif
  2682  000CAC                     	if	0	;tblptru may be non-zero
  2683  000CAC                     	endif
  2684  000CAC  0008               	tblrd		*
  2685  000CAE  50F5               	movf	tablat,w,c
  2686  000CB0  6E11               	movwf	(??_atoi+2)^0,c
  2687  000CB2  6A12               	clrf	(??_atoi+3)^0,c
  2688  000CB4  500F               	movf	??_atoi^0,w,c
  2689  000CB6  2611               	addwf	(??_atoi+2)^0,f,c
  2690  000CB8  5010               	movf	(??_atoi+1)^0,w,c
  2691  000CBA  2212               	addwfc	(??_atoi+3)^0,f,c
  2692  000CBC  5012               	movf	(??_atoi+3)^0,w,c
  2693  000CBE  E109               	bnz	u2140
  2694  000CC0  0E05               	movlw	5
  2695  000CC2  5C11               	subwf	(??_atoi+2)^0,w,c
  2696  000CC4  A0D8               	btfss	status,0,c
  2697  000CC6  EF67  F006         	goto	u2141
  2698  000CCA  EF69  F006         	goto	u2140
  2699  000CCE                     u2141:
  2700  000CCE  EF6B  F006         	goto	l2328
  2701  000CD2                     u2140:
  2702  000CD2  0E00               	movlw	0
  2703  000CD4  6E19               	movwf	_atoi$1115^0,c
  2704  000CD6                     l2328:
  2705  000CD6  C019  F015         	movff	_atoi$1115,_atoi$1114
  2706  000CDA  6A16               	clrf	(_atoi$1114+1)^0,c
  2707  000CDC  5015               	movf	_atoi$1114^0,w,c
  2708  000CDE  1016               	iorwf	(_atoi$1114+1)^0,w,c
  2709  000CE0  A4D8               	btfss	status,2,c
  2710  000CE2  EF75  F006         	goto	u2151
  2711  000CE6  EF77  F006         	goto	u2150
  2712  000CEA                     u2151:
  2713  000CEA  EF3C  F006         	goto	l2318
  2714  000CEE                     u2150:
  2715  000CEE  EF81  F006         	goto	l2338
  2716  000CF2                     l2334:
  2717  000CF2  0E00               	movlw	0
  2718  000CF4  6E14               	movwf	(atoi@neg+1)^0,c
  2719  000CF6  0E01               	movlw	1
  2720  000CF8  6E13               	movwf	atoi@neg^0,c
  2721  000CFA                     l2336:
  2722  000CFA  4A0D               	infsnz	atoi@s^0,f,c
  2723  000CFC  2A0E               	incf	(atoi@s+1)^0,f,c
  2724  000CFE  EFB6  F006         	goto	l2344
  2725  000D02                     l2338:
  2726  000D02  C00D  FFF6         	movff	atoi@s,tblptrl
  2727  000D06  C00E  FFF7         	movff	atoi@s+1,tblptrh
  2728  000D0A                     	if	0	;tblptru may be non-zero
  2729  000D0A                     	endif
  2730  000D0A                     	if	0	;tblptru may be non-zero
  2731  000D0A                     	endif
  2732  000D0A  0008               	tblrd		*
  2733  000D0C  50F5               	movf	tablat,w,c
  2734  000D0E  6E0F               	movwf	??_atoi^0,c
  2735  000D10  6A10               	clrf	(??_atoi+1)^0,c
  2736                           
  2737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2738                           ; Switch size 1, requested type "simple"
  2739                           ; Number of cases is 1, Range of values is 0 to 0
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte            4     3 (average)
  2743                           ;	Chosen strategy is simple_byte
  2744  000D12  5010               	movf	(??_atoi+1)^0,w,c
  2745  000D14  0A00               	xorlw	0	; case 0
  2746  000D16  B4D8               	btfsc	status,2,c
  2747  000D18  EF90  F006         	goto	l2550
  2748  000D1C  EFB6  F006         	goto	l2344
  2749  000D20                     l2550:
  2750                           
  2751                           ; Switch size 1, requested type "simple"
  2752                           ; Number of cases is 2, Range of values is 43 to 45
  2753                           ; switch strategies available:
  2754                           ; Name         Instructions Cycles
  2755                           ; simple_byte            7     4 (average)
  2756                           ;	Chosen strategy is simple_byte
  2757  000D20  500F               	movf	??_atoi^0,w,c
  2758  000D22  0A2B               	xorlw	43	; case 43
  2759  000D24  B4D8               	btfsc	status,2,c
  2760  000D26  EF7D  F006         	goto	l2336
  2761  000D2A  0A06               	xorlw	6	; case 45
  2762  000D2C  B4D8               	btfsc	status,2,c
  2763  000D2E  EF79  F006         	goto	l2334
  2764  000D32  EFB6  F006         	goto	l2344
  2765  000D36                     l2340:
  2766  000D36  C01A  F006         	movff	atoi@n,___wmul@multiplier
  2767  000D3A  C01B  F007         	movff	atoi@n+1,___wmul@multiplier+1
  2768  000D3E  0E00               	movlw	0
  2769  000D40  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  2770  000D42  0E0A               	movlw	10
  2771  000D44  6E08               	movwf	___wmul@multiplicand^0,c
  2772  000D46  EC21  F00C         	call	___wmul	;wreg free
  2773  000D4A  C00D  FFF6         	movff	atoi@s,tblptrl
  2774  000D4E  C00E  FFF7         	movff	atoi@s+1,tblptrh
  2775  000D52                     	if	0	;tblptru may be non-zero
  2776  000D52                     	endif
  2777  000D52                     	if	0	;tblptru may be non-zero
  2778  000D52                     	endif
  2779  000D52  0008               	tblrd		*
  2780  000D54  50F5               	movf	tablat,w,c
  2781  000D56  5E06               	subwf	?___wmul^0,f,c
  2782  000D58  0E00               	movlw	0
  2783  000D5A  5A07               	subwfb	(?___wmul+1)^0,f,c
  2784  000D5C  0E30               	movlw	48
  2785  000D5E  2406               	addwf	?___wmul^0,w,c
  2786  000D60  6E1A               	movwf	atoi@n^0,c
  2787  000D62  0E00               	movlw	0
  2788  000D64  2007               	addwfc	(?___wmul+1)^0,w,c
  2789  000D66  6E1B               	movwf	(atoi@n+1)^0,c
  2790  000D68  EF7D  F006         	goto	l2336
  2791  000D6C                     l2344:
  2792  000D6C  0ED0               	movlw	208
  2793  000D6E  6E0F               	movwf	??_atoi^0,c
  2794  000D70  0EFF               	movlw	255
  2795  000D72  6E10               	movwf	(??_atoi+1)^0,c
  2796  000D74  C00D  FFF6         	movff	atoi@s,tblptrl
  2797  000D78  C00E  FFF7         	movff	atoi@s+1,tblptrh
  2798  000D7C                     	if	0	;tblptru may be non-zero
  2799  000D7C                     	endif
  2800  000D7C                     	if	0	;tblptru may be non-zero
  2801  000D7C                     	endif
  2802  000D7C  0008               	tblrd		*
  2803  000D7E  50F5               	movf	tablat,w,c
  2804  000D80  6E11               	movwf	(??_atoi+2)^0,c
  2805  000D82  6A12               	clrf	(??_atoi+3)^0,c
  2806  000D84  500F               	movf	??_atoi^0,w,c
  2807  000D86  2611               	addwf	(??_atoi+2)^0,f,c
  2808  000D88  5010               	movf	(??_atoi+1)^0,w,c
  2809  000D8A  2212               	addwfc	(??_atoi+3)^0,f,c
  2810  000D8C  5012               	movf	(??_atoi+3)^0,w,c
  2811  000D8E  E10A               	bnz	u2160
  2812  000D90  0E0A               	movlw	10
  2813  000D92  5C11               	subwf	(??_atoi+2)^0,w,c
  2814  000D94  A0D8               	btfss	status,0,c
  2815  000D96  EFCF  F006         	goto	u2161
  2816  000D9A  EFD2  F006         	goto	u2160
  2817  000D9E                     u2161:
  2818  000D9E  0E01               	movlw	1
  2819  000DA0  EFD3  F006         	goto	u2170
  2820  000DA4                     u2160:
  2821  000DA4  0E00               	movlw	0
  2822  000DA6                     u2170:
  2823  000DA6  6E17               	movwf	_atoi$1116^0,c
  2824  000DA8  6A18               	clrf	(_atoi$1116+1)^0,c
  2825  000DAA  5017               	movf	_atoi$1116^0,w,c
  2826  000DAC  1018               	iorwf	(_atoi$1116+1)^0,w,c
  2827  000DAE  A4D8               	btfss	status,2,c
  2828  000DB0  EFDC  F006         	goto	u2181
  2829  000DB4  EFDE  F006         	goto	u2180
  2830  000DB8                     u2181:
  2831  000DB8  EF9B  F006         	goto	l2340
  2832  000DBC                     u2180:
  2833  000DBC  5013               	movf	atoi@neg^0,w,c
  2834  000DBE  1014               	iorwf	(atoi@neg+1)^0,w,c
  2835  000DC0  A4D8               	btfss	status,2,c
  2836  000DC2  EFE5  F006         	goto	u2191
  2837  000DC6  EFE7  F006         	goto	u2190
  2838  000DCA                     u2191:
  2839  000DCA  EFF5  F006         	goto	l945
  2840  000DCE                     u2190:
  2841  000DCE  C01A  F00F         	movff	atoi@n,??_atoi
  2842  000DD2  C01B  F010         	movff	atoi@n+1,??_atoi+1
  2843  000DD6  1E0F               	comf	??_atoi^0,f,c
  2844  000DD8  1E10               	comf	(??_atoi+1)^0,f,c
  2845  000DDA  4A0F               	infsnz	??_atoi^0,f,c
  2846  000DDC  2A10               	incf	(??_atoi+1)^0,f,c
  2847  000DDE  C00F  F00D         	movff	??_atoi,?_atoi
  2848  000DE2  C010  F00E         	movff	??_atoi+1,?_atoi+1
  2849  000DE6  EFF9  F006         	goto	l948
  2850  000DEA                     l945:
  2851  000DEA  C01A  F00D         	movff	atoi@n,?_atoi
  2852  000DEE  C01B  F00E         	movff	atoi@n+1,?_atoi+1
  2853  000DF2                     l948:
  2854  000DF2  0012               	return		;funcret
  2855  000DF4                     __end_of_atoi:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _isspace *****************
  2859 ;; Defined at:
  2860 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  c               2    5[COMRAM] int 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  2    5[COMRAM] int 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2874 ;;      Params:         2       0       0       0       0       0       0
  2875 ;;      Locals:         1       0       0       0       0       0       0
  2876 ;;      Temps:          4       0       0       0       0       0       0
  2877 ;;      Totals:         7       0       0       0       0       0       0
  2878 ;;Total ram usage:        7 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 2
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_atoi
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text15
  2889  00159E                     __ptext15:
  2890                           	callstack 0
  2891  00159E                     _isspace:
  2892                           	callstack 24
  2893  00159E  0E01               	movlw	1
  2894  0015A0  6E0C               	movwf	_isspace$1141^0,c
  2895  0015A2  0E20               	movlw	32
  2896  0015A4  1806               	xorwf	isspace@c^0,w,c
  2897  0015A6  1007               	iorwf	(isspace@c+1)^0,w,c
  2898  0015A8  B4D8               	btfsc	status,2,c
  2899  0015AA  EFD9  F00A         	goto	u1941
  2900  0015AE  EFDB  F00A         	goto	u1940
  2901  0015B2                     u1941:
  2902  0015B2  EFF4  F00A         	goto	l2246
  2903  0015B6                     u1940:
  2904  0015B6  0EF7               	movlw	247
  2905  0015B8  6E08               	movwf	??_isspace^0,c
  2906  0015BA  0EFF               	movlw	255
  2907  0015BC  6E09               	movwf	(??_isspace+1)^0,c
  2908  0015BE  C006  F00A         	movff	isspace@c,??_isspace+2
  2909  0015C2  C007  F00B         	movff	isspace@c+1,??_isspace+3
  2910  0015C6  5008               	movf	??_isspace^0,w,c
  2911  0015C8  260A               	addwf	(??_isspace+2)^0,f,c
  2912  0015CA  5009               	movf	(??_isspace+1)^0,w,c
  2913  0015CC  220B               	addwfc	(??_isspace+3)^0,f,c
  2914  0015CE  500B               	movf	(??_isspace+3)^0,w,c
  2915  0015D0  E109               	bnz	u1950
  2916  0015D2  0E05               	movlw	5
  2917  0015D4  5C0A               	subwf	(??_isspace+2)^0,w,c
  2918  0015D6  A0D8               	btfss	status,0,c
  2919  0015D8  EFF0  F00A         	goto	u1951
  2920  0015DC  EFF2  F00A         	goto	u1950
  2921  0015E0                     u1951:
  2922  0015E0  EFF4  F00A         	goto	l2246
  2923  0015E4                     u1950:
  2924  0015E4  0E00               	movlw	0
  2925  0015E6  6E0C               	movwf	_isspace$1141^0,c
  2926  0015E8                     l2246:
  2927  0015E8  C00C  F006         	movff	_isspace$1141,?_isspace
  2928  0015EC  6A07               	clrf	(?_isspace+1)^0,c
  2929  0015EE  0012               	return		;funcret
  2930  0015F0                     __end_of_isspace:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _isdigit *****************
  2934 ;; Defined at:
  2935 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  c               2    5[COMRAM] int 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  2    5[COMRAM] int 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2949 ;;      Params:         2       0       0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0
  2951 ;;      Temps:          4       0       0       0       0       0       0
  2952 ;;      Totals:         6       0       0       0       0       0       0
  2953 ;;Total ram usage:        6 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 2
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_vfpfcnvrt
  2960 ;;		_atoi
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text16
  2965  0017A6                     __ptext16:
  2966                           	callstack 0
  2967  0017A6                     _isdigit:
  2968                           	callstack 25
  2969  0017A6  0ED0               	movlw	208
  2970  0017A8  6E08               	movwf	??_isdigit^0,c
  2971  0017AA  0EFF               	movlw	255
  2972  0017AC  6E09               	movwf	(??_isdigit+1)^0,c
  2973  0017AE  C006  F00A         	movff	isdigit@c,??_isdigit+2
  2974  0017B2  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  2975  0017B6  5008               	movf	??_isdigit^0,w,c
  2976  0017B8  260A               	addwf	(??_isdigit+2)^0,f,c
  2977  0017BA  5009               	movf	(??_isdigit+1)^0,w,c
  2978  0017BC  220B               	addwfc	(??_isdigit+3)^0,f,c
  2979  0017BE  500B               	movf	(??_isdigit+3)^0,w,c
  2980  0017C0  E10A               	bnz	u1920
  2981  0017C2  0E0A               	movlw	10
  2982  0017C4  5C0A               	subwf	(??_isdigit+2)^0,w,c
  2983  0017C6  A0D8               	btfss	status,0,c
  2984  0017C8  EFE8  F00B         	goto	u1921
  2985  0017CC  EFEB  F00B         	goto	u1920
  2986  0017D0                     u1921:
  2987  0017D0  0E01               	movlw	1
  2988  0017D2  EFEC  F00B         	goto	u1930
  2989  0017D6                     u1920:
  2990  0017D6  0E00               	movlw	0
  2991  0017D8                     u1930:
  2992  0017D8  6E06               	movwf	?_isdigit^0,c
  2993  0017DA  6A07               	clrf	(?_isdigit+1)^0,c
  2994  0017DC  0012               	return		;funcret
  2995  0017DE                     __end_of_isdigit:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function ___wmul *****************
  2999 ;; Defined at:
  3000 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  multiplier      2    5[COMRAM] unsigned int 
  3003 ;;  multiplicand    2    7[COMRAM] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  product         2    9[COMRAM] unsigned int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  2    5[COMRAM] unsigned int 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, prodl, prodh
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3015 ;;      Params:         4       0       0       0       0       0       0
  3016 ;;      Locals:         2       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0
  3018 ;;      Totals:         6       0       0       0       0       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 2
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_atoi
  3026 ;;		_BCD_2_DEC
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text17
  3031  001842                     __ptext17:
  3032                           	callstack 0
  3033  001842                     ___wmul:
  3034                           	callstack 24
  3035  001842  5006               	movf	___wmul@multiplier^0,w,c
  3036  001844  0208               	mulwf	___wmul@multiplicand^0,c
  3037  001846  CFF3 F00A          	movff	prodl,___wmul@product
  3038  00184A  CFF4 F00B          	movff	prodh,___wmul@product+1
  3039  00184E  5006               	movf	___wmul@multiplier^0,w,c
  3040  001850  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  3041  001852  50F3               	movf	243,w,c
  3042  001854  260B               	addwf	(___wmul@product+1)^0,f,c
  3043  001856  5007               	movf	(___wmul@multiplier+1)^0,w,c
  3044  001858  0208               	mulwf	___wmul@multiplicand^0,c
  3045  00185A  50F3               	movf	243,w,c
  3046  00185C  260B               	addwf	(___wmul@product+1)^0,f,c
  3047  00185E  C00A  F006         	movff	___wmul@product,?___wmul
  3048  001862  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  3049  001866  0012               	return		;funcret
  3050  001868                     __end_of___wmul:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _UART_Init *****************
  3054 ;; Defined at:
  3055 ;;		line 34 in file "main.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  baudrate        4   30[COMRAM] const unsigned long 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  baudrate_cal    2   42[COMRAM] unsigned short 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3069 ;;      Params:         4       0       0       0       0       0       0
  3070 ;;      Locals:         2       0       0       0       0       0       0
  3071 ;;      Temps:          8       0       0       0       0       0       0
  3072 ;;      Totals:        14       0       0       0       0       0       0
  3073 ;;Total ram usage:       14 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 3
  3076 ;; This function calls:
  3077 ;;		___lldiv
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text18
  3084  00130E                     __ptext18:
  3085                           	callstack 0
  3086  00130E                     _UART_Init:
  3087                           	callstack 27
  3088  00130E                     
  3089                           ;main.c: 34: void UART_Init(const uint32_t baudrate);main.c: 35: {;main.c: 37:  uint16_t
      +                           baudrate_calculated = (20000000 - baudrate * 4) /(baudrate * 4);
  3090  00130E  C01F  F023         	movff	UART_Init@baudrate,??_UART_Init
  3091  001312  C020  F024         	movff	UART_Init@baudrate+1,??_UART_Init+1
  3092  001316  C021  F025         	movff	UART_Init@baudrate+2,??_UART_Init+2
  3093  00131A  C022  F026         	movff	UART_Init@baudrate+3,??_UART_Init+3
  3094  00131E  0E02               	movlw	2
  3095  001320                     u1695:
  3096  001320  90D8               	bcf	status,0,c
  3097  001322  3623               	rlcf	??_UART_Init^0,f,c
  3098  001324  3624               	rlcf	(??_UART_Init+1)^0,f,c
  3099  001326  3625               	rlcf	(??_UART_Init+2)^0,f,c
  3100  001328  3626               	rlcf	(??_UART_Init+3)^0,f,c
  3101  00132A  2EE8               	decfsz	wreg,f,c
  3102  00132C  EF90  F009         	goto	u1695
  3103  001330  5023               	movf	??_UART_Init^0,w,c
  3104  001332  0800               	sublw	0
  3105  001334  6E12               	movwf	___lldiv@dividend^0,c
  3106  001336  0E2D               	movlw	45
  3107  001338  5424               	subfwb	(??_UART_Init+1)^0,w,c
  3108  00133A  6E13               	movwf	(___lldiv@dividend+1)^0,c
  3109  00133C  0E31               	movlw	49
  3110  00133E  5425               	subfwb	(??_UART_Init+2)^0,w,c
  3111  001340  6E14               	movwf	(___lldiv@dividend+2)^0,c
  3112  001342  0E01               	movlw	1
  3113  001344  5426               	subfwb	(??_UART_Init+3)^0,w,c
  3114  001346  6E15               	movwf	(___lldiv@dividend+3)^0,c
  3115  001348  C01F  F027         	movff	UART_Init@baudrate,??_UART_Init+4
  3116  00134C  C020  F028         	movff	UART_Init@baudrate+1,??_UART_Init+5
  3117  001350  C021  F029         	movff	UART_Init@baudrate+2,??_UART_Init+6
  3118  001354  C022  F02A         	movff	UART_Init@baudrate+3,??_UART_Init+7
  3119  001358  0E02               	movlw	2
  3120  00135A                     u1705:
  3121  00135A  90D8               	bcf	status,0,c
  3122  00135C  3627               	rlcf	(??_UART_Init+4)^0,f,c
  3123  00135E  3628               	rlcf	(??_UART_Init+5)^0,f,c
  3124  001360  3629               	rlcf	(??_UART_Init+6)^0,f,c
  3125  001362  362A               	rlcf	(??_UART_Init+7)^0,f,c
  3126  001364  2EE8               	decfsz	wreg,f,c
  3127  001366  EFAD  F009         	goto	u1705
  3128  00136A  C027  F016         	movff	??_UART_Init+4,___lldiv@divisor
  3129  00136E  C028  F017         	movff	??_UART_Init+5,___lldiv@divisor+1
  3130  001372  C029  F018         	movff	??_UART_Init+6,___lldiv@divisor+2
  3131  001376  C02A  F019         	movff	??_UART_Init+7,___lldiv@divisor+3
  3132  00137A  EC35  F009         	call	___lldiv	;wreg free
  3133  00137E  C012  F02B         	movff	?___lldiv,UART_Init@baudrate_calculated
  3134  001382  C013  F02C         	movff	?___lldiv+1,UART_Init@baudrate_calculated+1
  3135  001386                     
  3136                           ;main.c: 39:     TXSTAbits.BRGH = 1;
  3137  001386  84AC               	bsf	172,2,c	;volatile
  3138  001388                     
  3139                           ;main.c: 40:     BAUDCONbits.BRG16 = 1;
  3140  001388  86B8               	bsf	184,3,c	;volatile
  3141  00138A                     
  3142                           ;main.c: 42:     SPBRG = (baudrate_calculated & 0x00FF);
  3143  00138A  C02B  FFAF         	movff	UART_Init@baudrate_calculated,4015	;volatile
  3144  00138E                     
  3145                           ;main.c: 43:     SPBRGH = (baudrate_calculated & 0xFF00) >> 8;
  3146  00138E  502C               	movf	(UART_Init@baudrate_calculated+1)^0,w,c
  3147  001390  6EB0               	movwf	176,c	;volatile
  3148  001392                     
  3149                           ;main.c: 45:     TXSTAbits.SYNC = 0;
  3150  001392  98AC               	bcf	172,4,c	;volatile
  3151  001394                     
  3152                           ;main.c: 46:     TXSTAbits.TX9 = 0;
  3153  001394  9CAC               	bcf	172,6,c	;volatile
  3154  001396                     
  3155                           ;main.c: 47:     RCSTAbits.SPEN = 1;
  3156  001396  8EAB               	bsf	171,7,c	;volatile
  3157  001398                     
  3158                           ;main.c: 48:     TRISCbits.RC6 = 1;
  3159  001398  8C94               	bsf	148,6,c	;volatile
  3160  00139A                     
  3161                           ;main.c: 49:     TRISCbits.RC7 = 1;
  3162  00139A  8E94               	bsf	148,7,c	;volatile
  3163  00139C                     
  3164                           ;main.c: 50:     RCSTAbits.CREN = 1;
  3165  00139C  88AB               	bsf	171,4,c	;volatile
  3166  00139E                     
  3167                           ;main.c: 51:     TXSTAbits.TXEN = 1;
  3168  00139E  8AAC               	bsf	172,5,c	;volatile
  3169  0013A0  0012               	return		;funcret
  3170  0013A2                     __end_of_UART_Init:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _Set_Time_Date *****************
  3174 ;; Defined at:
  3175 ;;		line 140 in file "main.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3189 ;;      Params:         0       0       0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0
  3192 ;;      Totals:         0       0       0       0       0       0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 4
  3196 ;; This function calls:
  3197 ;;		_DEC_2_BCD
  3198 ;;		_I2C_Begin
  3199 ;;		_I2C_End
  3200 ;;		_I2C_Write
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text19
  3207  001044                     __ptext19:
  3208                           	callstack 0
  3209  001044                     _Set_Time_Date:
  3210                           	callstack 26
  3211  001044                     
  3212                           ;main.c: 142:    I2C_Begin();
  3213  001044  EC50  F00C         	call	_I2C_Begin	;wreg free
  3214                           
  3215                           ;main.c: 143:    I2C_Write((0xD0));
  3216  001048  0E00               	movlw	0
  3217  00104A  6E13               	movwf	(I2C_Write@data+1)^0,c
  3218  00104C  0ED0               	movlw	208
  3219  00104E  6E12               	movwf	I2C_Write@data^0,c
  3220  001050  EC47  F00C         	call	_I2C_Write	;wreg free
  3221                           
  3222                           ;main.c: 144:    I2C_Write(0);
  3223  001054  0E00               	movlw	0
  3224  001056  6E13               	movwf	(I2C_Write@data+1)^0,c
  3225  001058  0E00               	movlw	0
  3226  00105A  6E12               	movwf	I2C_Write@data^0,c
  3227  00105C  EC47  F00C         	call	_I2C_Write	;wreg free
  3228                           
  3229                           ;main.c: 145:    I2C_Write(DEC_2_BCD(00));
  3230  001060  0E00               	movlw	0
  3231  001062  6E0F               	movwf	(DEC_2_BCD@to_convert+1)^0,c
  3232  001064  0E00               	movlw	0
  3233  001066  6E0E               	movwf	DEC_2_BCD@to_convert^0,c
  3234  001068  ECF8  F00A         	call	_DEC_2_BCD	;wreg free
  3235  00106C  C00E  F012         	movff	?_DEC_2_BCD,I2C_Write@data
  3236  001070  C00F  F013         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3237  001074  EC47  F00C         	call	_I2C_Write	;wreg free
  3238                           
  3239                           ;main.c: 146:    I2C_Write(DEC_2_BCD(14));
  3240  001078  0E00               	movlw	0
  3241  00107A  6E0F               	movwf	(DEC_2_BCD@to_convert+1)^0,c
  3242  00107C  0E0E               	movlw	14
  3243  00107E  6E0E               	movwf	DEC_2_BCD@to_convert^0,c
  3244  001080  ECF8  F00A         	call	_DEC_2_BCD	;wreg free
  3245  001084  C00E  F012         	movff	?_DEC_2_BCD,I2C_Write@data
  3246  001088  C00F  F013         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3247  00108C  EC47  F00C         	call	_I2C_Write	;wreg free
  3248                           
  3249                           ;main.c: 147:    I2C_Write(DEC_2_BCD(15));
  3250  001090  0E00               	movlw	0
  3251  001092  6E0F               	movwf	(DEC_2_BCD@to_convert+1)^0,c
  3252  001094  0E0F               	movlw	15
  3253  001096  6E0E               	movwf	DEC_2_BCD@to_convert^0,c
  3254  001098  ECF8  F00A         	call	_DEC_2_BCD	;wreg free
  3255  00109C  C00E  F012         	movff	?_DEC_2_BCD,I2C_Write@data
  3256  0010A0  C00F  F013         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3257  0010A4  EC47  F00C         	call	_I2C_Write	;wreg free
  3258                           
  3259                           ;main.c: 148:    I2C_Write(1);
  3260  0010A8  0E00               	movlw	0
  3261  0010AA  6E13               	movwf	(I2C_Write@data+1)^0,c
  3262  0010AC  0E01               	movlw	1
  3263  0010AE  6E12               	movwf	I2C_Write@data^0,c
  3264  0010B0  EC47  F00C         	call	_I2C_Write	;wreg free
  3265                           
  3266                           ;main.c: 149:    I2C_Write(DEC_2_BCD(17));
  3267  0010B4  0E00               	movlw	0
  3268  0010B6  6E0F               	movwf	(DEC_2_BCD@to_convert+1)^0,c
  3269  0010B8  0E11               	movlw	17
  3270  0010BA  6E0E               	movwf	DEC_2_BCD@to_convert^0,c
  3271  0010BC  ECF8  F00A         	call	_DEC_2_BCD	;wreg free
  3272  0010C0  C00E  F012         	movff	?_DEC_2_BCD,I2C_Write@data
  3273  0010C4  C00F  F013         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3274  0010C8  EC47  F00C         	call	_I2C_Write	;wreg free
  3275                           
  3276                           ;main.c: 150:    I2C_Write(DEC_2_BCD(10));
  3277  0010CC  0E00               	movlw	0
  3278  0010CE  6E0F               	movwf	(DEC_2_BCD@to_convert+1)^0,c
  3279  0010D0  0E0A               	movlw	10
  3280  0010D2  6E0E               	movwf	DEC_2_BCD@to_convert^0,c
  3281  0010D4  ECF8  F00A         	call	_DEC_2_BCD	;wreg free
  3282  0010D8  C00E  F012         	movff	?_DEC_2_BCD,I2C_Write@data
  3283  0010DC  C00F  F013         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3284  0010E0  EC47  F00C         	call	_I2C_Write	;wreg free
  3285                           
  3286                           ;main.c: 151:    I2C_Write(DEC_2_BCD(21));
  3287  0010E4  0E00               	movlw	0
  3288  0010E6  6E0F               	movwf	(DEC_2_BCD@to_convert+1)^0,c
  3289  0010E8  0E15               	movlw	21
  3290  0010EA  6E0E               	movwf	DEC_2_BCD@to_convert^0,c
  3291  0010EC  ECF8  F00A         	call	_DEC_2_BCD	;wreg free
  3292  0010F0  C00E  F012         	movff	?_DEC_2_BCD,I2C_Write@data
  3293  0010F4  C00F  F013         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3294  0010F8  EC47  F00C         	call	_I2C_Write	;wreg free
  3295                           
  3296                           ;main.c: 152:    I2C_End();
  3297  0010FC  EC4C  F00C         	call	_I2C_End	;wreg free
  3298  001100  0012               	return		;funcret
  3299  001102                     __end_of_Set_Time_Date:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _I2C_Write *****************
  3303 ;; Defined at:
  3304 ;;		line 102 in file "main.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  data            2   17[COMRAM] unsigned int 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3318 ;;      Params:         2       0       0       0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0
  3321 ;;      Totals:         2       0       0       0       0       0       0
  3322 ;;Total ram usage:        2 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 3
  3325 ;; This function calls:
  3326 ;;		_I2C_Idle
  3327 ;; This function is called by:
  3328 ;;		_Set_Time_Date
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text20
  3334  00188E                     __ptext20:
  3335                           	callstack 0
  3336  00188E                     _I2C_Write:
  3337                           	callstack 26
  3338  00188E                     
  3339                           ;main.c: 102: void I2C_Write(unsigned data);main.c: 103: {;main.c: 104:   I2C_Idle();
  3340  00188E  EC34  F00C         	call	_I2C_Idle	;wreg free
  3341  001892                     
  3342                           ;main.c: 105:   SSPBUF = data;
  3343  001892  C012  FFC9         	movff	I2C_Write@data,4041	;volatile
  3344  001896  0012               	return		;funcret
  3345  001898                     __end_of_I2C_Write:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _I2C_End *****************
  3349 ;; Defined at:
  3350 ;;		line 96 in file "main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3364 ;;      Params:         0       0       0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 3
  3371 ;; This function calls:
  3372 ;;		_I2C_Idle
  3373 ;; This function is called by:
  3374 ;;		_Set_Time_Date
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text21
  3380  001898                     __ptext21:
  3381                           	callstack 0
  3382  001898                     _I2C_End:
  3383                           	callstack 26
  3384  001898                     
  3385                           ;main.c: 98:   I2C_Idle();
  3386  001898  EC34  F00C         	call	_I2C_Idle	;wreg free
  3387  00189C                     
  3388                           ;main.c: 99:   PEN = 1;
  3389  00189C  84C5               	bsf	4037,2,c	;volatile
  3390  00189E  0012               	return		;funcret
  3391  0018A0                     __end_of_I2C_End:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function _I2C_Begin *****************
  3395 ;; Defined at:
  3396 ;;		line 90 in file "main.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3410 ;;      Params:         0       0       0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 3
  3417 ;; This function calls:
  3418 ;;		_I2C_Idle
  3419 ;; This function is called by:
  3420 ;;		_Set_Time_Date
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text22
  3426  0018A0                     __ptext22:
  3427                           	callstack 0
  3428  0018A0                     _I2C_Begin:
  3429                           	callstack 26
  3430  0018A0                     
  3431                           ;main.c: 92:   I2C_Idle();
  3432  0018A0  EC34  F00C         	call	_I2C_Idle	;wreg free
  3433  0018A4                     
  3434                           ;main.c: 93:   SEN = 1;
  3435  0018A4  80C5               	bsf	4037,0,c	;volatile
  3436  0018A6  0012               	return		;funcret
  3437  0018A8                     __end_of_I2C_Begin:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _DEC_2_BCD *****************
  3441 ;; Defined at:
  3442 ;;		line 135 in file "main.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  to_convert      2   13[COMRAM] int 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2   13[COMRAM] int 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3456 ;;      Params:         2       0       0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0
  3458 ;;      Temps:          2       0       0       0       0       0       0
  3459 ;;      Totals:         4       0       0       0       0       0       0
  3460 ;;Total ram usage:        4 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 3
  3463 ;; This function calls:
  3464 ;;		___awdiv
  3465 ;;		___awmod
  3466 ;; This function is called by:
  3467 ;;		_Set_Time_Date
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text23
  3472  0015F0                     __ptext23:
  3473                           	callstack 0
  3474  0015F0                     _DEC_2_BCD:
  3475                           	callstack 26
  3476  0015F0                     
  3477                           ;main.c: 135: int DEC_2_BCD (int to_convert);main.c: 136: {;main.c: 137:    return ((to_
      +                          convert / 10) << 4) + (to_convert % 10);
  3478  0015F0  C00E  F006         	movff	DEC_2_BCD@to_convert,___awdiv@dividend
  3479  0015F4  C00F  F007         	movff	DEC_2_BCD@to_convert+1,___awdiv@dividend+1
  3480  0015F8  0E00               	movlw	0
  3481  0015FA  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3482  0015FC  0E0A               	movlw	10
  3483  0015FE  6E08               	movwf	___awdiv@divisor^0,c
  3484  001600  EC5F  F007         	call	___awdiv	;wreg free
  3485  001604  C006  F010         	movff	?___awdiv,??_DEC_2_BCD
  3486  001608  C007  F011         	movff	?___awdiv+1,??_DEC_2_BCD+1
  3487  00160C  3A10               	swapf	??_DEC_2_BCD^0,f,c
  3488  00160E  3A11               	swapf	(??_DEC_2_BCD+1)^0,f,c
  3489  001610  0EF0               	movlw	240
  3490  001612  1611               	andwf	(??_DEC_2_BCD+1)^0,f,c
  3491  001614  5010               	movf	??_DEC_2_BCD^0,w,c
  3492  001616  0B0F               	andlw	15
  3493  001618  1211               	iorwf	(??_DEC_2_BCD+1)^0,f,c
  3494  00161A  0EF0               	movlw	240
  3495  00161C  1610               	andwf	??_DEC_2_BCD^0,f,c
  3496  00161E  C00E  F006         	movff	DEC_2_BCD@to_convert,___awmod@dividend
  3497  001622  C00F  F007         	movff	DEC_2_BCD@to_convert+1,___awmod@dividend+1
  3498  001626  0E00               	movlw	0
  3499  001628  6E09               	movwf	(___awmod@divisor+1)^0,c
  3500  00162A  0E0A               	movlw	10
  3501  00162C  6E08               	movwf	___awmod@divisor^0,c
  3502  00162E  ECDD  F008         	call	___awmod	;wreg free
  3503  001632  5006               	movf	?___awmod^0,w,c
  3504  001634  2410               	addwf	??_DEC_2_BCD^0,w,c
  3505  001636  6E0E               	movwf	?_DEC_2_BCD^0,c
  3506  001638  5007               	movf	(?___awmod+1)^0,w,c
  3507  00163A  2011               	addwfc	(??_DEC_2_BCD+1)^0,w,c
  3508  00163C  6E0F               	movwf	(?_DEC_2_BCD+1)^0,c
  3509  00163E  0012               	return		;funcret
  3510  001640                     __end_of_DEC_2_BCD:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function ___awmod *****************
  3514 ;; Defined at:
  3515 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  dividend        2    5[COMRAM] int 
  3518 ;;  divisor         2    7[COMRAM] int 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  sign            1   10[COMRAM] unsigned char 
  3521 ;;  counter         1    9[COMRAM] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2    5[COMRAM] int 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3531 ;;      Params:         4       0       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0
  3534 ;;      Totals:         6       0       0       0       0       0       0
  3535 ;;Total ram usage:        6 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; Hardware stack levels required when called: 2
  3538 ;; This function calls:
  3539 ;;		Nothing
  3540 ;; This function is called by:
  3541 ;;		_DEC_2_BCD
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text24
  3546  0011BA                     __ptext24:
  3547                           	callstack 0
  3548  0011BA                     ___awmod:
  3549                           	callstack 26
  3550  0011BA  0E00               	movlw	0
  3551  0011BC  6E0B               	movwf	___awmod@sign^0,c
  3552  0011BE  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  3553  0011C0  EFE6  F008         	goto	u1460
  3554  0011C4  EFE4  F008         	goto	u1461
  3555  0011C8                     u1461:
  3556  0011C8  EFEC  F008         	goto	l1860
  3557  0011CC                     u1460:
  3558  0011CC  6C06               	negf	___awmod@dividend^0,c
  3559  0011CE  1E07               	comf	(___awmod@dividend+1)^0,f,c
  3560  0011D0  B0D8               	btfsc	status,0,c
  3561  0011D2  2A07               	incf	(___awmod@dividend+1)^0,f,c
  3562  0011D4  0E01               	movlw	1
  3563  0011D6  6E0B               	movwf	___awmod@sign^0,c
  3564  0011D8                     l1860:
  3565  0011D8  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  3566  0011DA  EFF3  F008         	goto	u1470
  3567  0011DE  EFF1  F008         	goto	u1471
  3568  0011E2                     u1471:
  3569  0011E2  EFF7  F008         	goto	l1864
  3570  0011E6                     u1470:
  3571  0011E6  6C08               	negf	___awmod@divisor^0,c
  3572  0011E8  1E09               	comf	(___awmod@divisor+1)^0,f,c
  3573  0011EA  B0D8               	btfsc	status,0,c
  3574  0011EC  2A09               	incf	(___awmod@divisor+1)^0,f,c
  3575  0011EE                     l1864:
  3576  0011EE  5008               	movf	___awmod@divisor^0,w,c
  3577  0011F0  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  3578  0011F2  B4D8               	btfsc	status,2,c
  3579  0011F4  EFFE  F008         	goto	u1481
  3580  0011F8  EF00  F009         	goto	u1480
  3581  0011FC                     u1481:
  3582  0011FC  EF24  F009         	goto	l1880
  3583  001200                     u1480:
  3584  001200  0E01               	movlw	1
  3585  001202  6E0A               	movwf	___awmod@counter^0,c
  3586  001204  EF08  F009         	goto	l1870
  3587  001208                     l1868:
  3588  001208  90D8               	bcf	status,0,c
  3589  00120A  3608               	rlcf	___awmod@divisor^0,f,c
  3590  00120C  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  3591  00120E  2A0A               	incf	___awmod@counter^0,f,c
  3592  001210                     l1870:
  3593  001210  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  3594  001212  EF0D  F009         	goto	u1491
  3595  001216  EF0F  F009         	goto	u1490
  3596  00121A                     u1491:
  3597  00121A  EF04  F009         	goto	l1868
  3598  00121E                     u1490:
  3599  00121E                     l1872:
  3600  00121E  5008               	movf	___awmod@divisor^0,w,c
  3601  001220  5C06               	subwf	___awmod@dividend^0,w,c
  3602  001222  5009               	movf	(___awmod@divisor+1)^0,w,c
  3603  001224  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  3604  001226  A0D8               	btfss	status,0,c
  3605  001228  EF18  F009         	goto	u1501
  3606  00122C  EF1A  F009         	goto	u1500
  3607  001230                     u1501:
  3608  001230  EF1E  F009         	goto	l1876
  3609  001234                     u1500:
  3610  001234  5008               	movf	___awmod@divisor^0,w,c
  3611  001236  5E06               	subwf	___awmod@dividend^0,f,c
  3612  001238  5009               	movf	(___awmod@divisor+1)^0,w,c
  3613  00123A  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  3614  00123C                     l1876:
  3615  00123C  90D8               	bcf	status,0,c
  3616  00123E  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  3617  001240  3208               	rrcf	___awmod@divisor^0,f,c
  3618  001242  2E0A               	decfsz	___awmod@counter^0,f,c
  3619  001244  EF0F  F009         	goto	l1872
  3620  001248                     l1880:
  3621  001248  500B               	movf	___awmod@sign^0,w,c
  3622  00124A  B4D8               	btfsc	status,2,c
  3623  00124C  EF2A  F009         	goto	u1511
  3624  001250  EF2C  F009         	goto	u1510
  3625  001254                     u1511:
  3626  001254  EF30  F009         	goto	l1884
  3627  001258                     u1510:
  3628  001258  6C06               	negf	___awmod@dividend^0,c
  3629  00125A  1E07               	comf	(___awmod@dividend+1)^0,f,c
  3630  00125C  B0D8               	btfsc	status,0,c
  3631  00125E  2A07               	incf	(___awmod@dividend+1)^0,f,c
  3632  001260                     l1884:
  3633  001260  C006  F006         	movff	___awmod@dividend,?___awmod
  3634  001264  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  3635  001268  0012               	return		;funcret
  3636  00126A                     __end_of___awmod:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function ___awdiv *****************
  3640 ;; Defined at:
  3641 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  dividend        2    5[COMRAM] int 
  3644 ;;  divisor         2    7[COMRAM] int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  quotient        2   11[COMRAM] int 
  3647 ;;  sign            1   10[COMRAM] unsigned char 
  3648 ;;  counter         1    9[COMRAM] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2    5[COMRAM] int 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3658 ;;      Params:         4       0       0       0       0       0       0
  3659 ;;      Locals:         4       0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0
  3661 ;;      Totals:         8       0       0       0       0       0       0
  3662 ;;Total ram usage:        8 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 2
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_DEC_2_BCD
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text25
  3673  000EBE                     __ptext25:
  3674                           	callstack 0
  3675  000EBE                     ___awdiv:
  3676                           	callstack 26
  3677  000EBE  0E00               	movlw	0
  3678  000EC0  6E0B               	movwf	___awdiv@sign^0,c
  3679  000EC2  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  3680  000EC4  EF68  F007         	goto	u1400
  3681  000EC8  EF66  F007         	goto	u1401
  3682  000ECC                     u1401:
  3683  000ECC  EF6E  F007         	goto	l1816
  3684  000ED0                     u1400:
  3685  000ED0  6C08               	negf	___awdiv@divisor^0,c
  3686  000ED2  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  3687  000ED4  B0D8               	btfsc	status,0,c
  3688  000ED6  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  3689  000ED8  0E01               	movlw	1
  3690  000EDA  6E0B               	movwf	___awdiv@sign^0,c
  3691  000EDC                     l1816:
  3692  000EDC  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  3693  000EDE  EF75  F007         	goto	u1410
  3694  000EE2  EF73  F007         	goto	u1411
  3695  000EE6                     u1411:
  3696  000EE6  EF7B  F007         	goto	l1822
  3697  000EEA                     u1410:
  3698  000EEA  6C06               	negf	___awdiv@dividend^0,c
  3699  000EEC  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  3700  000EEE  B0D8               	btfsc	status,0,c
  3701  000EF0  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  3702  000EF2  0E01               	movlw	1
  3703  000EF4  1A0B               	xorwf	___awdiv@sign^0,f,c
  3704  000EF6                     l1822:
  3705  000EF6  0E00               	movlw	0
  3706  000EF8  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  3707  000EFA  0E00               	movlw	0
  3708  000EFC  6E0C               	movwf	___awdiv@quotient^0,c
  3709  000EFE  5008               	movf	___awdiv@divisor^0,w,c
  3710  000F00  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  3711  000F02  B4D8               	btfsc	status,2,c
  3712  000F04  EF86  F007         	goto	u1421
  3713  000F08  EF88  F007         	goto	u1420
  3714  000F0C                     u1421:
  3715  000F0C  EFB0  F007         	goto	l1844
  3716  000F10                     u1420:
  3717  000F10  0E01               	movlw	1
  3718  000F12  6E0A               	movwf	___awdiv@counter^0,c
  3719  000F14  EF90  F007         	goto	l1830
  3720  000F18                     l1828:
  3721  000F18  90D8               	bcf	status,0,c
  3722  000F1A  3608               	rlcf	___awdiv@divisor^0,f,c
  3723  000F1C  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  3724  000F1E  2A0A               	incf	___awdiv@counter^0,f,c
  3725  000F20                     l1830:
  3726  000F20  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3727  000F22  EF95  F007         	goto	u1431
  3728  000F26  EF97  F007         	goto	u1430
  3729  000F2A                     u1431:
  3730  000F2A  EF8C  F007         	goto	l1828
  3731  000F2E                     u1430:
  3732  000F2E                     l1832:
  3733  000F2E  90D8               	bcf	status,0,c
  3734  000F30  360C               	rlcf	___awdiv@quotient^0,f,c
  3735  000F32  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  3736  000F34  5008               	movf	___awdiv@divisor^0,w,c
  3737  000F36  5C06               	subwf	___awdiv@dividend^0,w,c
  3738  000F38  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3739  000F3A  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  3740  000F3C  A0D8               	btfss	status,0,c
  3741  000F3E  EFA3  F007         	goto	u1441
  3742  000F42  EFA5  F007         	goto	u1440
  3743  000F46                     u1441:
  3744  000F46  EFAA  F007         	goto	l1840
  3745  000F4A                     u1440:
  3746  000F4A  5008               	movf	___awdiv@divisor^0,w,c
  3747  000F4C  5E06               	subwf	___awdiv@dividend^0,f,c
  3748  000F4E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3749  000F50  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  3750  000F52  800C               	bsf	___awdiv@quotient^0,0,c
  3751  000F54                     l1840:
  3752  000F54  90D8               	bcf	status,0,c
  3753  000F56  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  3754  000F58  3208               	rrcf	___awdiv@divisor^0,f,c
  3755  000F5A  2E0A               	decfsz	___awdiv@counter^0,f,c
  3756  000F5C  EF97  F007         	goto	l1832
  3757  000F60                     l1844:
  3758  000F60  500B               	movf	___awdiv@sign^0,w,c
  3759  000F62  B4D8               	btfsc	status,2,c
  3760  000F64  EFB6  F007         	goto	u1451
  3761  000F68  EFB8  F007         	goto	u1450
  3762  000F6C                     u1451:
  3763  000F6C  EFBC  F007         	goto	l1848
  3764  000F70                     u1450:
  3765  000F70  6C0C               	negf	___awdiv@quotient^0,c
  3766  000F72  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  3767  000F74  B0D8               	btfsc	status,0,c
  3768  000F76  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  3769  000F78                     l1848:
  3770  000F78  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  3771  000F7C  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  3772  000F80  0012               	return		;funcret
  3773  000F82                     __end_of___awdiv:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _I2C_Read *****************
  3777 ;; Defined at:
  3778 ;;		line 108 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  ack             1    wreg     unsigned char 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  ack             1    6[COMRAM] unsigned char 
  3783 ;;  incoming        1    7[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      unsigned char 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3793 ;;      Params:         0       0       0       0       0       0       0
  3794 ;;      Locals:         2       0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0
  3796 ;;      Totals:         2       0       0       0       0       0       0
  3797 ;;Total ram usage:        2 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 3
  3800 ;; This function calls:
  3801 ;;		_I2C_Idle
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text26
  3808  001814                     __ptext26:
  3809                           	callstack 0
  3810  001814                     _I2C_Read:
  3811                           	callstack 27
  3812                           
  3813                           ;incstack = 0
  3814                           ;I2C_Read@ack stored from wreg
  3815  001814  6E07               	movwf	I2C_Read@ack^0,c
  3816  001816                     
  3817                           ;main.c: 108: uint8_t I2C_Read(uint8_t ack);main.c: 109: {;main.c: 110:   uint8_t incomi
      +                          ng;;main.c: 111:   I2C_Idle();
  3818  001816  EC34  F00C         	call	_I2C_Idle	;wreg free
  3819  00181A                     
  3820                           ;main.c: 112:   RCEN = 1;
  3821  00181A  86C5               	bsf	4037,3,c	;volatile
  3822                           
  3823                           ;main.c: 114:   I2C_Idle();
  3824  00181C  EC34  F00C         	call	_I2C_Idle	;wreg free
  3825  001820                     
  3826                           ;main.c: 115:   incoming = SSPBUF;
  3827  001820  CFC9 F008          	movff	4041,I2C_Read@incoming	;volatile
  3828                           
  3829                           ;main.c: 117:   I2C_Idle();
  3830  001824  EC34  F00C         	call	_I2C_Idle	;wreg free
  3831  001828                     
  3832                           ;main.c: 118:   ACKDT = (ack)?0:1;
  3833  001828  5007               	movf	I2C_Read@ack^0,w,c
  3834  00182A  B4D8               	btfsc	status,2,c
  3835  00182C  EF1A  F00C         	goto	u821
  3836  001830  EF1D  F00C         	goto	u820
  3837  001834                     u821:
  3838  001834  8AC5               	bsf	4037,5,c	;volatile
  3839  001836  EF1E  F00C         	goto	u835
  3840  00183A                     u820:
  3841  00183A  9AC5               	bcf	4037,5,c	;volatile
  3842  00183C                     u835:
  3843  00183C                     
  3844                           ;main.c: 119:   ACKEN = 1;
  3845  00183C  88C5               	bsf	4037,4,c	;volatile
  3846  00183E                     
  3847                           ;main.c: 121:   return incoming;
  3848  00183E  5008               	movf	I2C_Read@incoming^0,w,c
  3849  001840  0012               	return		;funcret
  3850  001842                     __end_of_I2C_Read:
  3851                           	callstack 0
  3852                           
  3853 ;; *************** function _I2C_Idle *****************
  3854 ;; Defined at:
  3855 ;;		line 85 in file "main.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2, status,0
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3869 ;;      Params:         0       0       0       0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0
  3871 ;;      Temps:          1       0       0       0       0       0       0
  3872 ;;      Totals:         1       0       0       0       0       0       0
  3873 ;;Total ram usage:        1 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 2
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_I2C_Begin
  3880 ;;		_I2C_End
  3881 ;;		_I2C_Write
  3882 ;;		_I2C_Read
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text27
  3887  001868                     __ptext27:
  3888                           	callstack 0
  3889  001868                     _I2C_Idle:
  3890                           	callstack 26
  3891  001868                     l1232:
  3892  001868  CFC5 F006          	movff	4037,??_I2C_Idle	;volatile
  3893  00186C  0E1F               	movlw	31
  3894  00186E  1606               	andwf	??_I2C_Idle^0,f,c
  3895  001870  A4D8               	btfss	status,2,c
  3896  001872  EF3D  F00C         	goto	u481
  3897  001876  EF3F  F00C         	goto	u480
  3898  00187A                     u481:
  3899  00187A  EF34  F00C         	goto	l1232
  3900  00187E                     u480:
  3901  00187E  B4C7               	btfsc	199,2,c	;volatile
  3902  001880  EF44  F00C         	goto	u491
  3903  001884  EF46  F00C         	goto	u490
  3904  001888                     u491:
  3905  001888  EF34  F00C         	goto	l1232
  3906  00188C                     u490:
  3907  00188C  0012               	return		;funcret
  3908  00188E                     __end_of_I2C_Idle:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _I2C_Initialize *****************
  3912 ;; Defined at:
  3913 ;;		line 74 in file "main.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  feq_K           4   30[COMRAM] const unsigned long 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0, cstack
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3927 ;;      Params:         4       0       0       0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0
  3929 ;;      Temps:          4       0       0       0       0       0       0
  3930 ;;      Totals:         8       0       0       0       0       0       0
  3931 ;;Total ram usage:        8 bytes
  3932 ;; Hardware stack levels used: 1
  3933 ;; Hardware stack levels required when called: 3
  3934 ;; This function calls:
  3935 ;;		___lldiv
  3936 ;;		___lmul
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text28
  3943  0013A2                     __ptext28:
  3944                           	callstack 0
  3945  0013A2                     _I2C_Initialize:
  3946                           	callstack 27
  3947  0013A2                     
  3948                           ;main.c: 74: void I2C_Initialize(const unsigned long feq_K);main.c: 75: {;main.c: 76:   
      +                          TRISC3 = 1; TRISC4 = 1;
  3949  0013A2  8694               	bsf	3988,3,c	;volatile
  3950  0013A4  8894               	bsf	3988,4,c	;volatile
  3951  0013A6                     
  3952                           ;main.c: 78:   SSPCON1 = 0b00101000;
  3953  0013A6  0E28               	movlw	40
  3954  0013A8  6EC6               	movwf	198,c	;volatile
  3955                           
  3956                           ;main.c: 79:   SSPCON2 = 0b00000000;
  3957  0013AA  0E00               	movlw	0
  3958  0013AC  6EC5               	movwf	197,c	;volatile
  3959  0013AE                     
  3960                           ;main.c: 81:   SSPADD = (20000000/(4*feq_K*100))-1;
  3961  0013AE  0E00               	movlw	0
  3962  0013B0  6E12               	movwf	___lldiv@dividend^0,c
  3963  0013B2  0E2D               	movlw	45
  3964  0013B4  6E13               	movwf	(___lldiv@dividend+1)^0,c
  3965  0013B6  0E31               	movlw	49
  3966  0013B8  6E14               	movwf	(___lldiv@dividend+2)^0,c
  3967  0013BA  0E01               	movlw	1
  3968  0013BC  6E15               	movwf	(___lldiv@dividend+3)^0,c
  3969  0013BE  C01F  F023         	movff	I2C_Initialize@feq_K,??_I2C_Initialize
  3970  0013C2  C020  F024         	movff	I2C_Initialize@feq_K+1,??_I2C_Initialize+1
  3971  0013C6  C021  F025         	movff	I2C_Initialize@feq_K+2,??_I2C_Initialize+2
  3972  0013CA  C022  F026         	movff	I2C_Initialize@feq_K+3,??_I2C_Initialize+3
  3973  0013CE  0E02               	movlw	2
  3974  0013D0                     u1715:
  3975  0013D0  90D8               	bcf	status,0,c
  3976  0013D2  3623               	rlcf	??_I2C_Initialize^0,f,c
  3977  0013D4  3624               	rlcf	(??_I2C_Initialize+1)^0,f,c
  3978  0013D6  3625               	rlcf	(??_I2C_Initialize+2)^0,f,c
  3979  0013D8  3626               	rlcf	(??_I2C_Initialize+3)^0,f,c
  3980  0013DA  2EE8               	decfsz	wreg,f,c
  3981  0013DC  EFE8  F009         	goto	u1715
  3982  0013E0  C023  F006         	movff	??_I2C_Initialize,___lmul@multiplier
  3983  0013E4  C024  F007         	movff	??_I2C_Initialize+1,___lmul@multiplier+1
  3984  0013E8  C025  F008         	movff	??_I2C_Initialize+2,___lmul@multiplier+2
  3985  0013EC  C026  F009         	movff	??_I2C_Initialize+3,___lmul@multiplier+3
  3986  0013F0  0E64               	movlw	100
  3987  0013F2  6E0A               	movwf	___lmul@multiplicand^0,c
  3988  0013F4  0E00               	movlw	0
  3989  0013F6  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  3990  0013F8  0E00               	movlw	0
  3991  0013FA  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  3992  0013FC  0E00               	movlw	0
  3993  0013FE  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  3994  001400  EC11  F00A         	call	___lmul	;wreg free
  3995  001404  C006  F016         	movff	?___lmul,___lldiv@divisor
  3996  001408  C007  F017         	movff	?___lmul+1,___lldiv@divisor+1
  3997  00140C  C008  F018         	movff	?___lmul+2,___lldiv@divisor+2
  3998  001410  C009  F019         	movff	?___lmul+3,___lldiv@divisor+3
  3999  001414  EC35  F009         	call	___lldiv	;wreg free
  4000  001418  0412               	decf	?___lldiv^0,w,c
  4001  00141A  6EC8               	movwf	200,c	;volatile
  4002  00141C                     
  4003                           ;main.c: 82:   SSPSTAT = 0b00000000;
  4004  00141C  0E00               	movlw	0
  4005  00141E  6EC7               	movwf	199,c	;volatile
  4006  001420  0012               	return		;funcret
  4007  001422                     __end_of_I2C_Initialize:
  4008                           	callstack 0
  4009                           
  4010 ;; *************** function ___lmul *****************
  4011 ;; Defined at:
  4012 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  multiplier      4    5[COMRAM] unsigned long 
  4015 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  product         4   13[COMRAM] unsigned long 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  4    5[COMRAM] unsigned long 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4027 ;;      Params:         8       0       0       0       0       0       0
  4028 ;;      Locals:         4       0       0       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0
  4030 ;;      Totals:        12       0       0       0       0       0       0
  4031 ;;Total ram usage:       12 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 2
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_I2C_Initialize
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text29
  4042  001422                     __ptext29:
  4043                           	callstack 0
  4044  001422                     ___lmul:
  4045                           	callstack 27
  4046  001422  0E00               	movlw	0
  4047  001424  6E0E               	movwf	___lmul@product^0,c
  4048  001426  0E00               	movlw	0
  4049  001428  6E0F               	movwf	(___lmul@product+1)^0,c
  4050  00142A  0E00               	movlw	0
  4051  00142C  6E10               	movwf	(___lmul@product+2)^0,c
  4052  00142E  0E00               	movlw	0
  4053  001430  6E11               	movwf	(___lmul@product+3)^0,c
  4054  001432                     l1998:
  4055  001432  A006               	btfss	___lmul@multiplier^0,0,c
  4056  001434  EF1E  F00A         	goto	u1631
  4057  001438  EF20  F00A         	goto	u1630
  4058  00143C                     u1631:
  4059  00143C  EF28  F00A         	goto	l2002
  4060  001440                     u1630:
  4061  001440  500A               	movf	___lmul@multiplicand^0,w,c
  4062  001442  260E               	addwf	___lmul@product^0,f,c
  4063  001444  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4064  001446  220F               	addwfc	(___lmul@product+1)^0,f,c
  4065  001448  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4066  00144A  2210               	addwfc	(___lmul@product+2)^0,f,c
  4067  00144C  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4068  00144E  2211               	addwfc	(___lmul@product+3)^0,f,c
  4069  001450                     l2002:
  4070  001450  90D8               	bcf	status,0,c
  4071  001452  360A               	rlcf	___lmul@multiplicand^0,f,c
  4072  001454  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4073  001456  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4074  001458  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4075  00145A  90D8               	bcf	status,0,c
  4076  00145C  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4077  00145E  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4078  001460  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4079  001462  3206               	rrcf	___lmul@multiplier^0,f,c
  4080  001464  5006               	movf	___lmul@multiplier^0,w,c
  4081  001466  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4082  001468  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4083  00146A  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4084  00146C  A4D8               	btfss	status,2,c
  4085  00146E  EF3B  F00A         	goto	u1641
  4086  001472  EF3D  F00A         	goto	u1640
  4087  001476                     u1641:
  4088  001476  EF19  F00A         	goto	l1998
  4089  00147A                     u1640:
  4090  00147A  C00E  F006         	movff	___lmul@product,?___lmul
  4091  00147E  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4092  001482  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4093  001486  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4094  00148A  0012               	return		;funcret
  4095  00148C                     __end_of___lmul:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function ___lldiv *****************
  4099 ;; Defined at:
  4100 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  dividend        4   17[COMRAM] unsigned long 
  4103 ;;  divisor         4   21[COMRAM] unsigned long 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  quotient        4   25[COMRAM] unsigned long 
  4106 ;;  counter         1   29[COMRAM] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  4   17[COMRAM] unsigned long 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4116 ;;      Params:         8       0       0       0       0       0       0
  4117 ;;      Locals:         5       0       0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0
  4119 ;;      Totals:        13       0       0       0       0       0       0
  4120 ;;Total ram usage:       13 bytes
  4121 ;; Hardware stack levels used: 1
  4122 ;; Hardware stack levels required when called: 2
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_UART_Init
  4127 ;;		_I2C_Initialize
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text30
  4132  00126A                     __ptext30:
  4133                           	callstack 0
  4134  00126A                     ___lldiv:
  4135                           	callstack 27
  4136  00126A  0E00               	movlw	0
  4137  00126C  6E1A               	movwf	___lldiv@quotient^0,c
  4138  00126E  0E00               	movlw	0
  4139  001270  6E1B               	movwf	(___lldiv@quotient+1)^0,c
  4140  001272  0E00               	movlw	0
  4141  001274  6E1C               	movwf	(___lldiv@quotient+2)^0,c
  4142  001276  0E00               	movlw	0
  4143  001278  6E1D               	movwf	(___lldiv@quotient+3)^0,c
  4144  00127A  5016               	movf	___lldiv@divisor^0,w,c
  4145  00127C  1017               	iorwf	(___lldiv@divisor+1)^0,w,c
  4146  00127E  1018               	iorwf	(___lldiv@divisor+2)^0,w,c
  4147  001280  1019               	iorwf	(___lldiv@divisor+3)^0,w,c
  4148  001282  B4D8               	btfsc	status,2,c
  4149  001284  EF46  F009         	goto	u1651
  4150  001288  EF48  F009         	goto	u1650
  4151  00128C                     u1651:
  4152  00128C  EF7E  F009         	goto	l160
  4153  001290                     u1650:
  4154  001290  0E01               	movlw	1
  4155  001292  6E1E               	movwf	___lldiv@counter^0,c
  4156  001294  EF52  F009         	goto	l2014
  4157  001298                     l2012:
  4158  001298  90D8               	bcf	status,0,c
  4159  00129A  3616               	rlcf	___lldiv@divisor^0,f,c
  4160  00129C  3617               	rlcf	(___lldiv@divisor+1)^0,f,c
  4161  00129E  3618               	rlcf	(___lldiv@divisor+2)^0,f,c
  4162  0012A0  3619               	rlcf	(___lldiv@divisor+3)^0,f,c
  4163  0012A2  2A1E               	incf	___lldiv@counter^0,f,c
  4164  0012A4                     l2014:
  4165  0012A4  AE19               	btfss	(___lldiv@divisor+3)^0,7,c
  4166  0012A6  EF57  F009         	goto	u1661
  4167  0012AA  EF59  F009         	goto	u1660
  4168  0012AE                     u1661:
  4169  0012AE  EF4C  F009         	goto	l2012
  4170  0012B2                     u1660:
  4171  0012B2                     l2016:
  4172  0012B2  90D8               	bcf	status,0,c
  4173  0012B4  361A               	rlcf	___lldiv@quotient^0,f,c
  4174  0012B6  361B               	rlcf	(___lldiv@quotient+1)^0,f,c
  4175  0012B8  361C               	rlcf	(___lldiv@quotient+2)^0,f,c
  4176  0012BA  361D               	rlcf	(___lldiv@quotient+3)^0,f,c
  4177  0012BC  5016               	movf	___lldiv@divisor^0,w,c
  4178  0012BE  5C12               	subwf	___lldiv@dividend^0,w,c
  4179  0012C0  5017               	movf	(___lldiv@divisor+1)^0,w,c
  4180  0012C2  5813               	subwfb	(___lldiv@dividend+1)^0,w,c
  4181  0012C4  5018               	movf	(___lldiv@divisor+2)^0,w,c
  4182  0012C6  5814               	subwfb	(___lldiv@dividend+2)^0,w,c
  4183  0012C8  5019               	movf	(___lldiv@divisor+3)^0,w,c
  4184  0012CA  5815               	subwfb	(___lldiv@dividend+3)^0,w,c
  4185  0012CC  A0D8               	btfss	status,0,c
  4186  0012CE  EF6B  F009         	goto	u1671
  4187  0012D2  EF6D  F009         	goto	u1670
  4188  0012D6                     u1671:
  4189  0012D6  EF76  F009         	goto	l2024
  4190  0012DA                     u1670:
  4191  0012DA  5016               	movf	___lldiv@divisor^0,w,c
  4192  0012DC  5E12               	subwf	___lldiv@dividend^0,f,c
  4193  0012DE  5017               	movf	(___lldiv@divisor+1)^0,w,c
  4194  0012E0  5A13               	subwfb	(___lldiv@dividend+1)^0,f,c
  4195  0012E2  5018               	movf	(___lldiv@divisor+2)^0,w,c
  4196  0012E4  5A14               	subwfb	(___lldiv@dividend+2)^0,f,c
  4197  0012E6  5019               	movf	(___lldiv@divisor+3)^0,w,c
  4198  0012E8  5A15               	subwfb	(___lldiv@dividend+3)^0,f,c
  4199  0012EA  801A               	bsf	___lldiv@quotient^0,0,c
  4200  0012EC                     l2024:
  4201  0012EC  90D8               	bcf	status,0,c
  4202  0012EE  3219               	rrcf	(___lldiv@divisor+3)^0,f,c
  4203  0012F0  3218               	rrcf	(___lldiv@divisor+2)^0,f,c
  4204  0012F2  3217               	rrcf	(___lldiv@divisor+1)^0,f,c
  4205  0012F4  3216               	rrcf	___lldiv@divisor^0,f,c
  4206  0012F6  2E1E               	decfsz	___lldiv@counter^0,f,c
  4207  0012F8  EF59  F009         	goto	l2016
  4208  0012FC                     l160:
  4209  0012FC  C01A  F012         	movff	___lldiv@quotient,?___lldiv
  4210  001300  C01B  F013         	movff	___lldiv@quotient+1,?___lldiv+1
  4211  001304  C01C  F014         	movff	___lldiv@quotient+2,?___lldiv+2
  4212  001308  C01D  F015         	movff	___lldiv@quotient+3,?___lldiv+3
  4213  00130C  0012               	return		;funcret
  4214  00130E                     __end_of___lldiv:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _low_isr *****************
  4218 ;; Defined at:
  4219 ;;		line 210 in file "main.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4233 ;;      Params:         0       0       0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0
  4235 ;;      Temps:          4       0       0       0       0       0       0
  4236 ;;      Totals:         4       0       0       0       0       0       0
  4237 ;;Total ram usage:        4 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 1
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		Interrupt level 1
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	intcodelo
  4248  000018                     __pintcodelo:
  4249                           	callstack 0
  4250  000018                     _low_isr:
  4251                           	callstack 21
  4252                           
  4253                           ;incstack = 0
  4254  000018  8077               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4255  00001A  CFD8 F003          	movff	status,??_low_isr+1
  4256  00001E  CFE8 F004          	movff	wreg,??_low_isr+2
  4257  000022  CFE0 F005          	movff	bsr,??_low_isr+3
  4258  000026                     
  4259                           ;main.c: 212:     INTCONbits.GIEL = 0;
  4260  000026  9CF2               	bcf	242,6,c	;volatile
  4261                           
  4262                           ;main.c: 214:     if (PIR1bits.RCIF == 1)
  4263  000028  AA9E               	btfss	158,5,c	;volatile
  4264  00002A  EF19  F000         	goto	i1u90_21
  4265  00002E  EF1B  F000         	goto	i1u90_20
  4266  000032                     i1u90_21:
  4267  000032  EF2F  F000         	goto	i1l1588
  4268  000036                     i1u90_20:
  4269  000036                     
  4270                           ;main.c: 215:     {;main.c: 216:         LATBbits.LATB6 = ~LATBbits.LATB6;
  4271  000036  BC8A               	btfsc	138,6,c	;volatile
  4272  000038  EF20  F000         	goto	i1u91_21
  4273  00003C  EF23  F000         	goto	i1u91_20
  4274  000040                     i1u91_21:
  4275  000040  0E01               	movlw	1
  4276  000042  EF24  F000         	goto	i1u91_26
  4277  000046                     i1u91_20:
  4278  000046  0E00               	movlw	0
  4279  000048                     i1u91_26:
  4280  000048  0AFF               	xorlw	255
  4281  00004A  6E02               	movwf	??_low_isr^0,c
  4282  00004C  3A02               	swapf	??_low_isr^0,f,c
  4283  00004E  4602               	rlncf	??_low_isr^0,f,c
  4284  000050  4602               	rlncf	??_low_isr^0,f,c
  4285  000052  508A               	movf	138,w,c	;volatile
  4286  000054  1802               	xorwf	??_low_isr^0,w,c
  4287  000056  0BBF               	andlw	-65
  4288  000058  1802               	xorwf	??_low_isr^0,w,c
  4289  00005A  6E8A               	movwf	138,c	;volatile
  4290  00005C                     
  4291                           ;main.c: 218:         PIR1bits.RCIF = 0;
  4292  00005C  9A9E               	bcf	158,5,c	;volatile
  4293  00005E                     i1l1588:
  4294                           
  4295                           ;main.c: 221:     INTCONbits.GIEL = 1;
  4296  00005E  8CF2               	bsf	242,6,c	;volatile
  4297  000060  C005  FFE0         	movff	??_low_isr+3,bsr
  4298  000064  C004  FFE8         	movff	??_low_isr+2,wreg
  4299  000068  C003  FFD8         	movff	??_low_isr+1,status
  4300  00006C  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4301  00006E  0010               	retfie	
  4302  000070                     __end_of_low_isr:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _high_isr *****************
  4306 ;; Defined at:
  4307 ;;		line 195 in file "main.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4321 ;;      Params:         0       0       0       0       0       0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0
  4323 ;;      Temps:          1       0       0       0       0       0       0
  4324 ;;      Totals:         1       0       0       0       0       0       0
  4325 ;;Total ram usage:        1 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		Interrupt level 2
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	intcode
  4335  000008                     __pintcode:
  4336                           	callstack 0
  4337  000008                     _high_isr:
  4338                           	callstack 21
  4339                           
  4340                           ;incstack = 0
  4341  000008  8277               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4342  00000A  ED60  F00B         	call	int_func,f	;refresh shadow registers
  4343                           
  4344                           	psect	intcode_body
  4345  0016C0                     __pintcode_body:
  4346                           	callstack 21
  4347  0016C0                     int_func:
  4348                           	callstack 21
  4349  0016C0  0006               	pop		; remove dummy address from shadow register refresh
  4350  0016C2                     
  4351                           ;main.c: 197:     INTCONbits.GIEH = 0;
  4352  0016C2  9EF2               	bcf	242,7,c	;volatile
  4353                           
  4354                           ;main.c: 199:     if (PIR1bits.TXIF == 1)
  4355  0016C4  A89E               	btfss	158,4,c	;volatile
  4356  0016C6  EF67  F00B         	goto	i2u88_41
  4357  0016CA  EF69  F00B         	goto	i2u88_40
  4358  0016CE                     i2u88_41:
  4359  0016CE  EF7B  F00B         	goto	i2l1580
  4360  0016D2                     i2u88_40:
  4361  0016D2                     
  4362                           ;main.c: 200:     {;main.c: 202:        LATBbits.LATB7 = ~LATBbits.LATB7;
  4363  0016D2  BE8A               	btfsc	138,7,c	;volatile
  4364  0016D4  EF6E  F00B         	goto	i2u89_41
  4365  0016D8  EF71  F00B         	goto	i2u89_40
  4366  0016DC                     i2u89_41:
  4367  0016DC  0E01               	movlw	1
  4368  0016DE  EF72  F00B         	goto	i2u89_46
  4369  0016E2                     i2u89_40:
  4370  0016E2  0E00               	movlw	0
  4371  0016E4                     i2u89_46:
  4372  0016E4  0AFF               	xorlw	255
  4373  0016E6  6E01               	movwf	??_high_isr^0,c
  4374  0016E8  3201               	rrcf	??_high_isr^0,f,c
  4375  0016EA  3201               	rrcf	??_high_isr^0,f,c
  4376  0016EC  508A               	movf	138,w,c	;volatile
  4377  0016EE  1801               	xorwf	??_high_isr^0,w,c
  4378  0016F0  0B7F               	andlw	-129
  4379  0016F2  1801               	xorwf	??_high_isr^0,w,c
  4380  0016F4  6E8A               	movwf	138,c	;volatile
  4381  0016F6                     i2l1580:
  4382                           
  4383                           ;main.c: 205:     INTCONbits.GIEH = 1;
  4384  0016F6  8EF2               	bsf	242,7,c	;volatile
  4385  0016F8  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4386  0016FA  0011               	retfie		f
  4387  0016FC                     __end_of_high_isr:
  4388                           	callstack 0
  4389                           
  4390                           	psect	rparam
  4391  0000                     
  4392                           	psect	temp
  4393  000077                     btemp:
  4394                           	callstack 0
  4395  000077                     	ds	1
  4396  0000                     int$flags	set	btemp
  4397  0000                     wtemp8	set	btemp+1
  4398  0000                     ttemp5	set	btemp+1
  4399  0000                     ttemp6	set	btemp+4
  4400  0000                     ttemp7	set	btemp+8
  4401                           
  4402                           	psect	idloc
  4403                           
  4404                           ;Config register IDLOC0 @ 0x200000
  4405                           ;	unspecified, using default values
  4406  200000                     	org	2097152
  4407  200000  FF                 	db	255
  4408                           
  4409                           ;Config register IDLOC1 @ 0x200001
  4410                           ;	unspecified, using default values
  4411  200001                     	org	2097153
  4412  200001  FF                 	db	255
  4413                           
  4414                           ;Config register IDLOC2 @ 0x200002
  4415                           ;	unspecified, using default values
  4416  200002                     	org	2097154
  4417  200002  FF                 	db	255
  4418                           
  4419                           ;Config register IDLOC3 @ 0x200003
  4420                           ;	unspecified, using default values
  4421  200003                     	org	2097155
  4422  200003  FF                 	db	255
  4423                           
  4424                           ;Config register IDLOC4 @ 0x200004
  4425                           ;	unspecified, using default values
  4426  200004                     	org	2097156
  4427  200004  FF                 	db	255
  4428                           
  4429                           ;Config register IDLOC5 @ 0x200005
  4430                           ;	unspecified, using default values
  4431  200005                     	org	2097157
  4432  200005  FF                 	db	255
  4433                           
  4434                           ;Config register IDLOC6 @ 0x200006
  4435                           ;	unspecified, using default values
  4436  200006                     	org	2097158
  4437  200006  FF                 	db	255
  4438                           
  4439                           ;Config register IDLOC7 @ 0x200007
  4440                           ;	unspecified, using default values
  4441  200007                     	org	2097159
  4442  200007  FF                 	db	255
  4443                           
  4444                           	psect	config
  4445                           
  4446                           ; Padding undefined space
  4447  300000                     	org	3145728
  4448  300000  FF                 	db	255
  4449                           
  4450                           ;Config register CONFIG1H @ 0x300001
  4451                           ;	Oscillator Selection bits
  4452                           ;	OSC = HS, HS oscillator
  4453                           ;	Fail-Safe Clock Monitor Enable bit
  4454                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4455                           ;	Internal/External Oscillator Switchover bit
  4456                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4457  300001                     	org	3145729
  4458  300001  02                 	db	2
  4459                           
  4460                           ;Config register CONFIG2L @ 0x300002
  4461                           ;	Power-up Timer Enable bit
  4462                           ;	PWRT = OFF, PWRT disabled
  4463                           ;	Brown-out Reset Enable bits
  4464                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4465                           ;	Brown Out Reset Voltage bits
  4466                           ;	BORV = 3, Minimum setting
  4467  300002                     	org	3145730
  4468  300002  19                 	db	25
  4469                           
  4470                           ;Config register CONFIG2H @ 0x300003
  4471                           ;	Watchdog Timer Enable bit
  4472                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4473                           ;	Watchdog Timer Postscale Select bits
  4474                           ;	WDTPS = 32768, 1:32768
  4475  300003                     	org	3145731
  4476  300003  1E                 	db	30
  4477                           
  4478                           ; Padding undefined space
  4479  300004                     	org	3145732
  4480  300004  FF                 	db	255
  4481                           
  4482                           ;Config register CONFIG3H @ 0x300005
  4483                           ;	CCP2 MUX bit
  4484                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4485                           ;	PORTB A/D Enable bit
  4486                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4487                           ;	Low-Power Timer1 Oscillator Enable bit
  4488                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4489                           ;	MCLR Pin Enable bit
  4490                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  4491  300005                     	org	3145733
  4492  300005  03                 	db	3
  4493                           
  4494                           ;Config register CONFIG4L @ 0x300006
  4495                           ;	Stack Full/Underflow Reset Enable bit
  4496                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4497                           ;	Single-Supply ICSP Enable bit
  4498                           ;	LVP = ON, Single-Supply ICSP enabled
  4499                           ;	Extended Instruction Set Enable bit
  4500                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4501                           ;	Background Debugger Enable bit
  4502                           ;	DEBUG = 0x1, unprogrammed default
  4503  300006                     	org	3145734
  4504  300006  85                 	db	133
  4505                           
  4506                           ; Padding undefined space
  4507  300007                     	org	3145735
  4508  300007  FF                 	db	255
  4509                           
  4510                           ;Config register CONFIG5L @ 0x300008
  4511                           ;	Code Protection bit
  4512                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4513                           ;	Code Protection bit
  4514                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4515                           ;	Code Protection bit
  4516                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4517                           ;	Code Protection bit
  4518                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4519  300008                     	org	3145736
  4520  300008  0F                 	db	15
  4521                           
  4522                           ;Config register CONFIG5H @ 0x300009
  4523                           ;	Boot Block Code Protection bit
  4524                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4525                           ;	Data EEPROM Code Protection bit
  4526                           ;	CPD = OFF, Data EEPROM not code-protected
  4527  300009                     	org	3145737
  4528  300009  C0                 	db	192
  4529                           
  4530                           ;Config register CONFIG6L @ 0x30000A
  4531                           ;	Write Protection bit
  4532                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4533                           ;	Write Protection bit
  4534                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4535                           ;	Write Protection bit
  4536                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4537                           ;	Write Protection bit
  4538                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4539  30000A                     	org	3145738
  4540  30000A  0F                 	db	15
  4541                           
  4542                           ;Config register CONFIG6H @ 0x30000B
  4543                           ;	Configuration Register Write Protection bit
  4544                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4545                           ;	Boot Block Write Protection bit
  4546                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4547                           ;	Data EEPROM Write Protection bit
  4548                           ;	WRTD = OFF, Data EEPROM not write-protected
  4549  30000B                     	org	3145739
  4550  30000B  E0                 	db	224
  4551                           
  4552                           ;Config register CONFIG7L @ 0x30000C
  4553                           ;	Table Read Protection bit
  4554                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4555                           ;	Table Read Protection bit
  4556                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4557                           ;	Table Read Protection bit
  4558                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4559                           ;	Table Read Protection bit
  4560                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4561  30000C                     	org	3145740
  4562  30000C  0F                 	db	15
  4563                           
  4564                           ;Config register CONFIG7H @ 0x30000D
  4565                           ;	Boot Block Table Read Protection bit
  4566                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4567  30000D                     	org	3145741
  4568  30000D  40                 	db	64
  4569                           tosu	equ	0xFFF
  4570                           tosh	equ	0xFFE
  4571                           tosl	equ	0xFFD
  4572                           stkptr	equ	0xFFC
  4573                           pclatu	equ	0xFFB
  4574                           pclath	equ	0xFFA
  4575                           pcl	equ	0xFF9
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           prodh	equ	0xFF4
  4581                           prodl	equ	0xFF3
  4582                           indf0	equ	0xFEF
  4583                           postinc0	equ	0xFEE
  4584                           postdec0	equ	0xFED
  4585                           preinc0	equ	0xFEC
  4586                           plusw0	equ	0xFEB
  4587                           fsr0h	equ	0xFEA
  4588                           fsr0l	equ	0xFE9
  4589                           wreg	equ	0xFE8
  4590                           indf1	equ	0xFE7
  4591                           postinc1	equ	0xFE6
  4592                           postdec1	equ	0xFE5
  4593                           preinc1	equ	0xFE4
  4594                           plusw1	equ	0xFE3
  4595                           fsr1h	equ	0xFE2
  4596                           fsr1l	equ	0xFE1
  4597                           bsr	equ	0xFE0
  4598                           indf2	equ	0xFDF
  4599                           postinc2	equ	0xFDE
  4600                           postdec2	equ	0xFDD
  4601                           preinc2	equ	0xFDC
  4602                           plusw2	equ	0xFDB
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         298
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    111     118
    BANK0           128      8      43
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S986_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _UART_Init->___lldiv
    _Set_Time_Date->_I2C_Write
    _I2C_Write->_DEC_2_BCD
    _I2C_End->_I2C_Idle
    _I2C_Begin->_I2C_Idle
    _DEC_2_BCD->___awdiv
    _I2C_Read->_I2C_Idle
    _I2C_Initialize->___lldiv
    ___lldiv->___lmul

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15762
                                            108 COMRAM     3     3      0
                          _I2C_Begin
                            _I2C_End
                     _I2C_Initialize
                           _I2C_Read
                          _I2C_Write
                      _Set_Time_Date
                          _UART_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   10865
                                            102 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   10373
                                             94 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    9840
                                             71 COMRAM    23    17      6
                               _atoi
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5447
                                             32 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             11 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1795
                                             12 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     692
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     631
                                             30 COMRAM    14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _Set_Time_Date                                        0     0      0    2334
                          _DEC_2_BCD
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     934
                                             17 COMRAM     2     0      2
                          _DEC_2_BCD (ARG)
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _DEC_2_BCD                                            4     2      2    1400
                                             13 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             2     2      0      30
                                              6 COMRAM     2     2      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Idle                                             1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       8     4      4     934
                                             30 COMRAM     8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                             17 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                              4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Begin
     _I2C_Idle
   _I2C_End
     _I2C_Idle
   _I2C_Initialize
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _I2C_Read
     _I2C_Idle
   _I2C_Write
     _DEC_2_BCD (ARG)
       ___awdiv
       ___awmod
     _I2C_Idle (ARG)
   _Set_Time_Date
     _DEC_2_BCD
     _I2C_Begin
     _I2C_End
     _I2C_Write
   _UART_Init
     ___lldiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
           _toupper
             _islower

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      8      2B       5       33.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6F      76       1       93.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A1      15        0.0%
DATA                 0      0     1A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 17 15:19:36 2021

          __size_of_I2C_Begin 0008            __size_of_I2C_Write 000A                            l80 1420  
                          l65 13A0                            l92 189E                            l86 188C  
                          l95 1896                            l89 18A6                            l98 1840  
                ___awdiv@sign 000B            __size_of_DEC_2_BCD 0050                            bsr 000FE0  
         ___wmul@multiplicand 0008                           l104 163E                           l107 1100  
                         l133 1866                           l160 12FC                           l144 147A  
                         l145 148A                           l167 130C                           l364 0F80  
                         l377 1268                           l811 159C                           l910 098E  
                         l851 1042                           l916 14E4                           l917 14EC  
                         l846 0FC6                           l951 16BE                           l856 09C6  
                         l945 0DEA                           l849 1008                           l881 0C62  
                         l865 0A64                           l858 09CE                           l971 17A4  
                         l948 0DF2                           l957 17DC                           l965 15EE  
                         l879 0C00                           l895 06FC                           l986 0EBC  
                         l994 1682                           l997 18A8                           _PEN 007E2A  
                         u480 187E                           u481 187A                           u490 188C  
                         u491 1888                           u820 183A                           _SEN 007E28  
                         u821 1834                           u835 183C                           _pad 0F82  
             __end_of_I2C_End 18A0                  ___awmod@sign 000B                           wreg 000FE8  
                        l1003 1812                          l1013 154A                          l2000 1440  
                        l1008 1542                          l2010 1290                          l2002 1450  
                        l1019 176C                          l2020 12DA                          l2012 1298  
                        l2004 145A                          l2022 12EA                          l2014 12A4  
                        l2006 126A                          l1230 1868                          l2024 12EC  
                        l2016 12B2                          l2008 127A                          l1232 1868  
                        l2040 1388                          l2200 0FB2                          l2026 12F6  
                        l2018 12BC                          l1234 187E                          l2050 1396  
                        l2042 138A                          l2210 1016                          l2202 0FBE  
                        l2060 13A2                          l1420 1898                          l2052 1398  
                        l2044 138E                          l2036 130E                          l2220 1684  
                        l2212 102A                          l2204 0FD2                          l2300 0BBE  
                        l2062 13A6                          l1510 1828                          l1422 189C  
                        l2054 139A                          l2046 1392                          l2038 1386  
                        l2206 0FE6                          l2230 1536                          l2310 0C24  
                        l2302 0BD8                          l2064 13AE                          l1512 183C  
                        l1504 1816                          l1416 18A0                          l2056 139C  
                        l2048 1394                          l2240 15A2                          l2320 0C7C  
                        l2216 176E                          l2160 0E40                          l2152 0DF4  
                        l2208 0FEA                          l2224 14EE                          l2312 0C3A  
                        l2304 0BF2                          l2400 0730                          l2066 141C  
                        l1514 183E                          l1506 181A                          l1418 18A4  
                        l2058 139E                          l2234 17A6                          l2242 15B6  
                        l2322 0C80                          l2162 0E76                          l2154 0E06  
                        l2170 165E                          l2306 0C0E                          l2250 0990  
                        l2410 07B0                          l2402 0766                          l1508 1820  
                        l2068 1044                          l2244 15E4                          l2340 0D36  
                        l2332 0CDC                          l2324 0C9C                          l2316 0C64  
                        l2156 0E18                          l2172 1662                          l2180 1806  
                        l2228 1524                          l2308 0C14                          l2260 09EC  
                        l2252 099E                          l2420 0850                          l2404 0774  
                        l2500 1174                          l2190 185E                          l2246 15E8  
                        l2238 159E                          l2350 0DBC                          l2334 0CF2  
                        l2326 0CD2                          l2318 0C78                          l2158 0E22  
                        l2166 1640                          l2174 17DE                          l2270 0A2C  
                        l2262 0A0C                          l2254 09A0                          l2422 0866  
                        l2430 08EC                          l2414 07F6                          l2406 0782  
                        l2502 117C                          l2352 0DCE                          l2344 0D6C  
                        l2336 0CFA                          l2328 0CD6                          l2168 164C  
                        l2176 17EA                          l2184 1736                          l2280 0AAA  
                        l2272 0A48                          l2264 0A14                          l2256 09BA  
                        l2432 0910                          l2440 093E                          l2424 0874  
                        l2408 07A2                          l2416 0808                          l2360 0630  
                        l2504 1180                          l1810 0EC2                          l2338 0D02  
                        l2178 17EE                          l2194 0F82                          l2290 0B1A  
                        l2274 0A58                          l2266 0A1E                          l2258 09E4  
                        l2442 094C                          l2434 091E                          l2426 08B0  
                        l2418 082C                          l2370 0660                          l2362 063E  
                        l2506 119A                          l1820 0EF2                          l1812 0ED0  
                        l2188 1842                          l2348 0DAA                          l2196 0F90  
                        l2292 0B20                          l2284 0AE4                          l2268 0A24  
                        l2436 0932                          l2380 067E                          l2372 0672  
                        l2364 064E                          l2460 1494                          l1830 0F20  
                        l1822 0EF6                          l1814 0ED8                          l2550 0D20  
                        l2198 0FA4                          l2294 0B26                          l2286 0AF6  
                        l2278 0A98                          l2366 0652                          l2446 0958  
                        l2358 060C                          l2462 14A2                          l2470 1566  
                        l1840 0F54                          l1832 0F2E                          l1824 0EFE  
                        l1816 0EDC                          l1808 0EBE                          l2288 0B0A  
                        l2296 0B84                          l2448 097C                          l2392 0696  
                        l2384 0684                          l2376 0678                          l2368 065E  
                        l2464 14C8                          l2472 156E                          l1842 0F5A  
                        l1834 0F34                          l1826 0F10                          l1818 0EEA  
                        l2298 0BA0                          l2394 06EA                          l2458 148C  
                        l2474 158A                          l2466 154C                          l2490 1148  
                        l2482 1102                          l1836 0F4A                          l1828 0F18  
                        l1844 0F60                          l1860 11D8                          l1852 11BA  
                        l2396 070A                          l2548 06BC                          l2388 068A  
                        l2468 155E                          l2492 1154                          l2484 112A  
                        l1846 0F70                          l1838 0F52                          l1870 1210  
                        l1862 11E6                          l1854 11BE                          l2398 070C  
                        l2494 1160                          l2486 1140                          l1848 0F78  
                        l1872 121E                          l1880 1248                          l1864 11EE  
                        l1856 11CC                          l2496 1164                          l2488 1144  
                        l1882 1258                          l1874 1234                          l1866 1200  
                        l1858 11D4                          l2498 1168                          l1884 1260  
                        l1876 123C                          l1868 1208                          l1878 1242  
                        l1990 1892                          ?_pad 0016                          l1992 15F0  
                        l1996 1422                          l1988 188E                          l1998 1432  
                        STR_1 0601                          u2000 0A92                          u2001 0A8C  
                        u2010 0A94                          u2100 0BF2                          u2020 0AAA  
                        u2101 0BEE                          u2021 0AA6                          u2110 0C00  
                        u2030 0ADE                          u2111 0BFC                          u2031 0AD8  
                        u1400 0ED0                          u2120 0C0E                          u2040 0AE0  
                        u2200 0630                          u1401 0ECC                          u2121 0C0A  
                        u2201 062C                          u1410 0EEA                          u2130 0C9C  
                        u2050 0AF6                          u2210 06FC                          u1411 0EE6  
                        u2131 0C98                          u2051 0AF2                          u2211 06F8  
                        u1420 0F10                          u1500 1234                          u2140 0CD2  
                        u2060 0B5E                          u2300 0910                          u2220 070A  
                        u1421 0F0C                          u1501 1230                          u2141 0CCE  
                        u2301 090C                          u2221 0706                          u1430 0F2E  
                        u1510 1258                          u2150 0CEE                          u2070 0BA0  
                        u2230 0730                          u2310 14E4                          u1431 0F2A  
                        u1511 1254                          u2151 0CEA                          u2071 0B9C  
                        u2231 072C                          u2311 14E0                          u1440 0F4A  
                        u2160 0DA4                          u2080 0BBE                          u2240 0774  
                        u1441 0F46                          u2161 0D9E                          u2081 0BBA  
                        u2065 0B4C                          u2241 0770                          u1450 0F70  
                        u2170 0DA6                          u2090 0BD8                          u2250 07F0  
                        u1451 0F6C                          u2091 0BD4                          u2251 07EA  
                        u1460 11CC                          u2180 0DBC                          u2260 07F2  
                        u1461 11C8                          u2181 0DB8                          u1630 1440  
                        u1470 11E6                          u2190 0DCE                          u2270 0808  
                        u1631 143C                          u1471 11E2                          u2191 0DCA  
                        u2271 0804                          u1640 147A                          u1480 1200  
                        u1800 1768                          u2280 082C                          u1641 1476  
                        u1481 11FC                          u1705 135A                          u2281 0828  
                        u2337 1134                          u1650 1290                          u1490 121E  
                        u1730 0E06                          u1810 0F90                          u2290 0850  
                        u1651 128C                          u1715 13D0                          u1491 121A  
                        u1731 0E02                          u1811 0F8C                          u2291 084C  
                        u2347 11A4                          u1660 12B2                          u1740 0E18  
                        u1820 0FB2                          u1900 1520                          u1661 12AE  
                        u1741 0E14                          u1821 0FAE                          u1670 12DA  
                        u1750 0E40                          u1830 1008                          u1910 1536  
                        u1671 12D6                          u1751 0E3C                          u1831 1004  
                        u1911 1532                          u1920 17D6                          u1760 0E76  
                        u1840 1016                          u1921 17D0                          u1761 0E72  
                        u1841 1012                          u1930 17D8                          u1850 179E  
                        u1770 1682                          u1851 1798                          u1771 167E  
                        u1940 15B6                          u1860 17A0                          u1780 1806  
                        u1941 15B2                          u1781 1802                          u1950 15E4  
                        u1870 16B8                          u1790 1766                          u1695 1320  
                        u1951 15E0                          u1871 16B2                          u1791 1760  
                        u1880 16BA                          u1960 099E                          u1961 099A  
                        u1890 151E                          u1970 09BA                          u1891 1518  
                        u1971 09B6                          u1980 09E4                          u1981 09E0  
                        u1990 0A48                          u1991 0A44                          _RCEN 007E2B  
                        _TRMT 007D61                          _dbuf 0083                          _atoi 0C64  
                        _main 1102              __end_of_I2C_Idle 188E                          _prec 0072  
            __end_of_I2C_Read 1842                          _nout 0080                          pad@i 001D  
                        pad@p 001A                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001F  
                        fsr2l 000FD9                          btemp 0077                          _xtoa 0990  
                        prodh 000FF4                          prodl 000FF3                          start 0070  
                ___param_bank 000000                         ??_pad 001C                         ?_atoi 000D  
                       ?_main 0001                         _ACKEN 007E2C                         _ACKDT 007E2D  
             __end_of___awdiv 0F82               __end_of___awmod 126A               __end_of___lldiv 130E  
             ___awdiv@divisor 0008                         ?_xtoa 0021                         i1l127 0060  
                       i2l121 16F8               ___awdiv@counter 000A                  vfpfcnvrt@fmt 004A  
                vfpfcnvrt@llu 0052                         _SPBRG 000FAF                         _TXREG 000FAD  
         ___lmul@multiplicand 000A            __size_of_UART_Init 0094                         _flags 0074  
           __end_of_I2C_Begin 18A8                         _fputc 0DF4               __end_of_isalpha 16C0  
                       _fputs 1640               __end_of_isdigit 17DE                         atoi@n 001A  
                       pad@fp 0016                         atoi@s 000D                         _width 0070  
                       _putch 18A8               __end_of_islower 176E               __end_of_isspace 15F0  
             __end_of_low_isr 0070             __end_of_I2C_Write 1898               __end_of_isupper 17A6  
                       tablat 000FF5             __end_of_DEC_2_BCD 1640                         ttemp5 0078  
                       ttemp6 007B                         ttemp7 007F                         status 000FD8  
                       wtemp8 0078               __end_of_sprintf 159E                         xtoa@c 0046  
                       xtoa@d 0023                         xtoa@i 0044                         xtoa@n 003C  
                       xtoa@p 0038                         xtoa@w 003A                         xtoa@x 002B  
             __end_of_toupper 154C                  _toupper$1196 0012               __initialization 16FC  
                __end_of_atoi 0DF4                  __end_of_main 11BA                  __end_of_xtoa 0C64  
                   ??_I2C_End 0007                        ??_atoi 000F                        ??_main 006D  
                      ??_xtoa 002C                 __activetblptr 000002                        ?_fputc 0006  
                      ?_fputs 000F              ___awdiv@dividend 0006                        ?_putch 0001  
                      i1l1582 0026                        i1l1584 0036                        i1l1586 005C  
                      i1l1588 005E                        i2l1580 16F6                        i2l1576 16C2  
                      i2l1578 16D2                 vfpfcnvrt@done 005B                        _SPBRGH 000FB0  
                      _SSPADD 000FC8                        _TRISC3 007CA3                        _TRISC4 007CA4  
                      _SSPBUF 000FC9                  vfprintf@cfmt 0065             __end_of_UART_Init 13A2  
            __end_of_high_isr 16FC                        ___lmul 1422                        ___wmul 1842  
                   ??___awdiv 000A                     ??___awmod 000A                     ??___lldiv 001A  
                      clear_0 1704                        clear_1 1716                        clear_2 1722  
            ___awdiv@quotient 000C               ___awmod@divisor 0008                        isa$std 000001  
             ___awmod@counter 000A       __size_of_I2C_Initialize 0080                        pad@buf 0018  
                      _strlen 17DE                        fputc@c 0006                     ?_I2C_Idle 0001  
                      fputs@c 0013                        fputs@i 0014                        fputs@s 000F  
                   ??_isalpha 0008                     ??_isdigit 0008                     ?_I2C_Read 0001  
                   ??_islower 0008                  __mediumconst 0000                     ??_isspace 0008  
                   ??_low_isr 0002                        tblptrh 000FF7                     ??_isupper 0008  
                      tblptrl 000FF6                        tblptru 000FF8                        putch@c 0001  
            __end_of_vfprintf 14EE                     ??_sprintf 006D                        xtoa@fp 0021  
                   ??_toupper 000E                    __accesstop 0080       __end_of__initialization 1728  
               ___rparam_used 000001                __pcstackCOMRAM 0001                 __end_of_fputc 0EBE  
               __end_of_fputs 1684                 __end_of_putch 18AA                    ??_I2C_Idle 0006  
                  ??_I2C_Read 0007                       ??_fputc 000A                       ??_fputs 0013  
                     ??_putch 0006                    __pbssBANK0 0080                    __pbssBANK1 0100  
                     ?___lmul 0006                       ?___wmul 0006  UART_Init@baudrate_calculated 002B  
                     _I2C_End 1898                ___lmul@product 000E                       ?_strlen 0006  
            I2C_Read@incoming 0008            __size_of_vfpfcnvrt 0384        __size_of_Set_Time_Date 00BE  
                     i1u90_20 0036                       i1u90_21 0032                       i1u91_20 0046  
                     i1u91_21 0040                       i1u91_26 0048                       i2u88_40 16D2  
                     i2u88_41 16CE                       i2u89_40 16E2                       i2u89_41 16DC  
                     i2u89_46 16E4                       _SSPCON1 000FC6                       _SSPCON2 000FC5  
                   ?_high_isr 0001                       _SSPSTAT 000FC7                     _I2C_Begin 18A0  
                   _I2C_Write 188E                     _DEC_2_BCD 15F0                       __Hparam 0000  
                     __Lparam 0000                       ___awdiv 0EBE               __size_of___lmul 006A  
                     ___awmod 11BA                       ___lldiv 126A               __size_of___wmul 0026  
                   ?_vfprintf 005F                  __psmallconst 0600                       __pcinit 16FC  
              _I2C_Initialize 13A2                       __ramtop 0600                       __ptext0 1102  
                     __ptext1 154C                       __ptext2 148C                       __ptext3 060C  
                     __ptext4 0990                       __ptext5 14EE                       __ptext6 1736  
                     __ptext7 0F82                       __ptext8 17DE                       __ptext9 1640  
             __size_of_strlen 0036                       _counter 0076                  __size_of_pad 00C2  
                     _isalpha 1684                       _isdigit 17A6              ___awmod@dividend 0006  
                     _islower 1736                       _isspace 159E                       _low_isr 0018  
                     _isupper 176E                       atoi@neg 0013                       _sprintf 154C  
                     main@sec 006F                    ??_high_isr 0001                __pintcode_body 16C0  
                     _toupper 14EE          end_of_initialization 1728                    ?_I2C_Begin 0001  
                     fputc@fp 0008                 __Lmediumconst 0000                       int_func 16C0  
                     fputs@fp 0011                    ?_I2C_Write 0012                    ?_DEC_2_BCD 000E  
             ___lldiv@divisor 0016               ___lldiv@counter 001E                 _Set_Time_Date 1044  
           __end_of_vfpfcnvrt 0990                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE        __end_of_I2C_Initialize 1422                    ??_vfprintf 0065  
                     strlen@a 0008                       strlen@s 0006                     _UART_Init 130E  
                   _TRISCbits 000F94             __size_of_I2C_Idle 0026             __size_of_I2C_Read 002E  
                   _TXSTAbits 000FAC                ?_Set_Time_Date 0001               ?_I2C_Initialize 001F  
              __end_of___lmul 148C                   vfpfcnvrt@ap 004C                   vfpfcnvrt@fp 0048  
              __end_of___wmul 1868                   _BAUDCONbits 000FB8                    ?_UART_Init 001F  
              __end_of_strlen 1814           start_initialization 16FC                   __end_of_pad 1044  
                 ??_I2C_Begin 0007                   ??_I2C_Write 0014                   ??_DEC_2_BCD 0010  
                 vfprintf@fmt 0061                      ??___lmul 000E                      ??___wmul 000A  
                    ?_I2C_End 0001                      ??_strlen 0008                   __pbssCOMRAM 0070  
               __pcstackBANK0 00A3             __size_of_high_isr 16F4               ??_Set_Time_Date 0014  
                   _atoi$1114 0015                     _atoi$1115 0019                     _atoi$1116 0017  
                 I2C_Read@ack 0007                     __pintcode 0008                      ?___awdiv 0006  
                    ?___awmod 0006                      ?___lldiv 0012                   __pintcodelo 0018  
                 ??_UART_Init 0023             __size_of_vfprintf 0062                   __smallconst 0600  
                    _I2C_Idle 1868                      ?_isalpha 0006                      ?_isdigit 0006  
                    _I2C_Read 1814                      ?_islower 0006                      ?_isspace 0006  
                    ?_low_isr 0001                      ?_isupper 0006                      ?_sprintf 0067  
              __size_of_fputc 00CA                __size_of_fputs 0044                      ?_toupper 000C  
              __size_of_putch 0002                ___wmul@product 000A                      _LATBbits 000F8A  
                    _IPR1bits 000F9F                      _PIE1bits 000F9D                      _PIR1bits 000F9E  
                   _uart_data 0082                     _vfpfcnvrt 060C             UART_Init@baudrate 001F  
                   _xtoa$1080 0034                     _xtoa$1081 0036              __size_of_I2C_End 0008  
           ___wmul@multiplier 0006                  _isspace$1141 000C                    vfpfcnvrt@c 005A  
           ___lmul@multiplier 0006              ??_I2C_Initialize 0023                      __Hrparam 0000  
                  vfprintf@ap 0063                      __Lrparam 0000                    vfprintf@fp 005F  
               I2C_Write@data 0012              __size_of___awdiv 00C4              __size_of___awmod 00B0  
            __size_of___lldiv 00A4                    ?_vfpfcnvrt 0048                    sprintf@fmt 0069  
            __size_of_isalpha 003C              __size_of_isdigit 0038              __size_of_islower 0038  
            __size_of_isspace 0052              __size_of_low_isr 0058                      __ptext10 0DF4  
                    __ptext11 18A8                      __ptext20 188E                      __ptext12 176E  
                    __ptext21 1898                      __ptext13 1684                      __ptext30 126A  
                    __ptext22 18A0                      __ptext14 0C64                      __ptext23 15F0  
                    __ptext15 159E                      __ptext24 11BA                      __ptext16 17A6  
                    __ptext25 0EBE                      __ptext17 1842                      __ptext26 1814  
                    __ptext18 130E                      __ptext27 1868                      __ptext19 1044  
                    __ptext28 13A2                      __ptext29 1422              __size_of_isupper 0038  
                    _high_isr 0008              __size_of_sprintf 0052              __size_of_toupper 005E  
               __size_of_atoi 0190                 __size_of_main 00B8                 __size_of_xtoa 02D4  
         I2C_Initialize@feq_K 001F                      isa$xinst 000000                      int$flags 0077  
                    _vfprintf 148C                _vfpfcnvrt$1096 005D                    _INTCONbits 000FF2  
                    isalpha@c 0006                      isdigit@c 0006                      intlevel1 0000  
                    intlevel2 0000                     sprintf@ap 00A3                      islower@c 0006  
                    isspace@c 0006              ___lldiv@dividend 0012                      isupper@c 0006  
                 ??_vfpfcnvrt 004E                      sprintf@f 00A5                      sprintf@s 0067  
            ___lldiv@quotient 001A                  _print_buffer 0100                      toupper@c 000C  
       __end_of_Set_Time_Date 1102           DEC_2_BCD@to_convert 000E  
