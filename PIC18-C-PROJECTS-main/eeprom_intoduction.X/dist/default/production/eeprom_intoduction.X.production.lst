

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 13 17:55:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007F1C                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _numb
    58  007F1C  FDFC               	dw	65020
    59  007F1E  0000               	dw	0
    60  0000                     _TRISD	set	3989
    61  0000                     _LATD	set	3980
    62  0000                     _EECON2	set	4007
    63  0000                     _INTCONbits	set	4082
    64  0000                     _RCONbits	set	4048
    65  0000                     _EECON1bits	set	4006
    66  0000                     _EEADR	set	4009
    67  0000                     _EEDATA	set	4008
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72  007F30                     __pcinit:
    73                           	callstack 0
    74  007F30                     start_initialization:
    75                           	callstack 0
    76  007F30                     __initialization:
    77                           	callstack 0
    78                           
    79                           ; Initialize objects allocated to COMRAM (4 bytes)
    80                           ; load TBLPTR registers with __pidataCOMRAM
    81  007F30  0E1C               	movlw	low __pidataCOMRAM
    82  007F32  6EF6               	movwf	tblptrl,c
    83  007F34  0E7F               	movlw	high __pidataCOMRAM
    84  007F36  6EF7               	movwf	tblptrh,c
    85  007F38  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    86  007F3A  6EF8               	movwf	tblptru,c
    87  007F3C  EE00  F006         	lfsr	0,__pdataCOMRAM
    88  007F40  EE10 F004          	lfsr	1,4
    89  007F44                     copy_data0:
    90  007F44  0009               	tblrd		*+
    91  007F46  CFF5 FFEE          	movff	tablat,postinc0
    92  007F4A  50E5               	movf	postdec1,w,c
    93  007F4C  50E1               	movf	fsr1l,w,c
    94  007F4E  E1FA               	bnz	copy_data0
    95                           
    96                           ; Clear objects allocated to COMRAM (1 bytes)
    97  007F50  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    98  007F52                     end_of_initialization:
    99                           	callstack 0
   100  007F52                     __end_of__initialization:
   101                           	callstack 0
   102  007F52  0100               	movlb	0
   103  007F54  EFD6  F03F         	goto	_main	;jump to C main() function
   104                           
   105                           	psect	bssCOMRAM
   106  00000A                     __pbssCOMRAM:
   107                           	callstack 0
   108  00000A                     _led:
   109                           	callstack 0
   110  00000A                     	ds	1
   111                           
   112                           	psect	dataCOMRAM
   113  000006                     __pdataCOMRAM:
   114                           	callstack 0
   115  000006                     _numb:
   116                           	callstack 0
   117  000006                     	ds	4
   118                           
   119                           	psect	cstackCOMRAM
   120  000001                     __pcstackCOMRAM:
   121                           	callstack 0
   122  000001                     EEPROMread@address:
   123                           	callstack 0
   124  000001                     EEPROMwrite@ptr:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x0
   128  000001                     	ds	2
   129  000003                     EEPROMwrite@address:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x2
   133  000003                     	ds	1
   134  000004                     ??_main:
   135                           
   136                           ; 1 bytes @ 0x3
   137  000004                     	ds	2
   138                           
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 74 in file "main.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;                  1    wreg      void 
   151 ;; Registers used:
   152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   153 ;; Tracked objects:
   154 ;;		On entry : 0/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   158 ;;      Params:         0       0       0       0       0       0       0
   159 ;;      Locals:         0       0       0       0       0       0       0
   160 ;;      Temps:          2       0       0       0       0       0       0
   161 ;;      Totals:         2       0       0       0       0       0       0
   162 ;;Total ram usage:        2 bytes
   163 ;; Hardware stack levels required when called: 1
   164 ;; This function calls:
   165 ;;		_EEPROMread
   166 ;;		_EEPROMwrite
   167 ;; This function is called by:
   168 ;;		Startup code after reset
   169 ;; This function uses a non-reentrant model
   170 ;;
   171                           
   172                           	psect	text0
   173  007FAC                     __ptext0:
   174                           	callstack 0
   175  007FAC                     _main:
   176                           	callstack 30
   177  007FAC                     
   178                           ;main.c: 76:     LATD = 0;
   179  007FAC  0E00               	movlw	0
   180  007FAE  6E8C               	movwf	140,c	;volatile
   181                           
   182                           ;main.c: 77:     TRISD = 0;
   183  007FB0  0E00               	movlw	0
   184  007FB2  6E95               	movwf	149,c	;volatile
   185  007FB4                     l795:
   186                           
   187                           ;main.c: 80:     {;main.c: 81:         EEPROMwrite(&led, 0x00);
   188  007FB4  0E0A               	movlw	low _led
   189  007FB6  6E01               	movwf	EEPROMwrite@ptr^0,c
   190  007FB8  0E00               	movlw	high _led
   191  007FBA  6E02               	movwf	(EEPROMwrite@ptr+1)^0,c
   192  007FBC  0E00               	movlw	0
   193  007FBE  6E03               	movwf	EEPROMwrite@address^0,c
   194  007FC0  ECAC  F03F         	call	_EEPROMwrite	;wreg free
   195  007FC4                     
   196                           ;main.c: 82:         LATD = EEPROMread(0x00);
   197  007FC4  0E00               	movlw	0
   198  007FC6  EC90  F03F         	call	_EEPROMread
   199  007FCA  6E8C               	movwf	140,c	;volatile
   200  007FCC                     
   201                           ;main.c: 84:         _delay((unsigned long)((500)*(10000000/4000.0)));
   202  007FCC  0E07               	movlw	7
   203  007FCE  6E05               	movwf	(??_main+1)^0,c
   204  007FD0  0E58               	movlw	88
   205  007FD2  6E04               	movwf	??_main^0,c
   206  007FD4  0E5A               	movlw	90
   207  007FD6                     u77:
   208  007FD6  2EE8               	decfsz	wreg,f,c
   209  007FD8  D7FE               	bra	u77
   210  007FDA  2E04               	decfsz	??_main^0,f,c
   211  007FDC  D7FC               	bra	u77
   212  007FDE  2E05               	decfsz	(??_main+1)^0,f,c
   213  007FE0  D7FA               	bra	u77
   214  007FE2                     
   215                           ;main.c: 86:         if (led == 255)
   216  007FE2  280A               	incf	_led^0,w,c
   217  007FE4  A4D8               	btfss	status,2,c
   218  007FE6  EFF7  F03F         	goto	u61
   219  007FEA  EFF9  F03F         	goto	u60
   220  007FEE                     u61:
   221  007FEE  EFFB  F03F         	goto	l805
   222  007FF2                     u60:
   223  007FF2                     
   224                           ;main.c: 87:             led = 0;
   225  007FF2  0E00               	movlw	0
   226  007FF4  6E0A               	movwf	_led^0,c
   227  007FF6                     l805:
   228                           
   229                           ;main.c: 89:         led++;
   230  007FF6  2A0A               	incf	_led^0,f,c
   231  007FF8  EFDA  F03F         	goto	l795
   232  007FFC  EF00  F000         	goto	start
   233  008000                     __end_of_main:
   234                           	callstack 0
   235                           
   236 ;; *************** function _EEPROMwrite *****************
   237 ;; Defined at:
   238 ;;		line 22 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;  ptr             2    0[COMRAM] PTR unsigned char 
   241 ;;		 -> led(1), 
   242 ;;  address         1    2[COMRAM] unsigned char 
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      char 
   247 ;; Registers used:
   248 ;;		wreg, fsr2l, fsr2h, status,2
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   254 ;;      Params:         3       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0
   257 ;;      Totals:         3       0       0       0       0       0       0
   258 ;;Total ram usage:        3 bytes
   259 ;; Hardware stack levels used: 1
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		_main
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text1
   268  007F58                     __ptext1:
   269                           	callstack 0
   270  007F58                     _EEPROMwrite:
   271                           	callstack 30
   272  007F58                     
   273                           ;main.c: 22: int8_t EEPROMwrite(uint8_t * ptr, uint8_t address);main.c: 23: {;main.c: 25
      +                          :         EEDATA = *ptr;
   274  007F58  C001  FFD9         	movff	EEPROMwrite@ptr,fsr2l
   275  007F5C  C002  FFDA         	movff	EEPROMwrite@ptr+1,fsr2h
   276  007F60  50DF               	movf	indf2,w,c
   277  007F62  6EA8               	movwf	168,c	;volatile
   278  007F64                     
   279                           ;main.c: 26:         EEADR = address;
   280  007F64  C003  FFA9         	movff	EEPROMwrite@address,4009	;volatile
   281  007F68                     
   282                           ;main.c: 28:         EECON1bits.CFGS = 0;
   283  007F68  9CA6               	bcf	166,6,c	;volsfr
   284  007F6A                     
   285                           ;main.c: 29:         EECON1bits.WREN = 1;
   286  007F6A  84A6               	bsf	166,2,c	;volsfr
   287  007F6C                     
   288                           ;main.c: 31:         if (RCONbits.IPEN)
   289  007F6C  AED0               	btfss	208,7,c	;volatile
   290  007F6E  EFBB  F03F         	goto	u41
   291  007F72  EFBD  F03F         	goto	u40
   292  007F76                     u41:
   293  007F76  EFC1  F03F         	goto	l25
   294  007F7A                     u40:
   295  007F7A                     
   296                           ;main.c: 32:         {;main.c: 33:             INTCONbits.GIEH = 0;
   297  007F7A  9EF2               	bcf	242,7,c	;volatile
   298                           
   299                           ;main.c: 34:             INTCONbits.GIEL = 0;
   300  007F7C  9CF2               	bcf	242,6,c	;volatile
   301                           
   302                           ;main.c: 35:         }
   303  007F7E  EFC2  F03F         	goto	l781
   304  007F82                     l25:
   305                           
   306                           ;main.c: 37:             INTCONbits.GIE = 0;
   307  007F82  9EF2               	bcf	242,7,c	;volatile
   308  007F84                     l781:
   309                           
   310                           ;main.c: 40:         EECON2 = 0x55;
   311  007F84  0E55               	movlw	85
   312  007F86  6EA7               	movwf	167,c	;volsfr
   313                           
   314                           ;main.c: 41:         EECON2 = 0xAA;
   315  007F88  0EAA               	movlw	170
   316  007F8A  6EA7               	movwf	167,c	;volsfr
   317  007F8C                     
   318                           ;main.c: 42:         EECON1bits.WR = 1;
   319  007F8C  82A6               	bsf	166,1,c	;volsfr
   320  007F8E                     
   321                           ;main.c: 44:         if (RCONbits.IPEN)
   322  007F8E  AED0               	btfss	208,7,c	;volatile
   323  007F90  EFCC  F03F         	goto	u51
   324  007F94  EFCE  F03F         	goto	u50
   325  007F98                     u51:
   326  007F98  EFD2  F03F         	goto	l27
   327  007F9C                     u50:
   328  007F9C                     
   329                           ;main.c: 45:         {;main.c: 46:             INTCONbits.GIEH = 1;
   330  007F9C  8EF2               	bsf	242,7,c	;volatile
   331                           
   332                           ;main.c: 47:             INTCONbits.GIEL = 1;
   333  007F9E  8CF2               	bsf	242,6,c	;volatile
   334                           
   335                           ;main.c: 48:         }
   336  007FA0  EFD3  F03F         	goto	l28
   337  007FA4                     l27:
   338                           
   339                           ;main.c: 50:             INTCONbits.GIE = 1;
   340  007FA4  8EF2               	bsf	242,7,c	;volatile
   341  007FA6                     l28:
   342                           
   343                           ;main.c: 52:         EECON1bits.WR = 0;
   344  007FA6  92A6               	bcf	166,1,c	;volsfr
   345                           
   346                           ;main.c: 55:     if (EECON1bits.WRERR == 0)
   347  007FA8  50A6               	movf	166,w,c	;volsfr
   348  007FAA  0012               	return		;funcret
   349  007FAC                     __end_of_EEPROMwrite:
   350                           	callstack 0
   351                           
   352 ;; *************** function _EEPROMread *****************
   353 ;; Defined at:
   354 ;;		line 62 in file "main.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;  address         1    wreg     unsigned char 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  address         1    0[COMRAM] unsigned char 
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      unsigned char 
   361 ;; Registers used:
   362 ;;		wreg, status,2
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   368 ;;      Params:         0       0       0       0       0       0       0
   369 ;;      Locals:         1       0       0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0
   371 ;;      Totals:         1       0       0       0       0       0       0
   372 ;;Total ram usage:        1 bytes
   373 ;; Hardware stack levels used: 1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text2
   382  007F20                     __ptext2:
   383                           	callstack 0
   384  007F20                     _EEPROMread:
   385                           	callstack 30
   386                           
   387                           ;incstack = 0
   388                           ;EEPROMread@address stored from wreg
   389  007F20  6E01               	movwf	EEPROMread@address^0,c
   390  007F22                     
   391                           ;main.c: 62: uint8_t EEPROMread(uint8_t address);main.c: 63: {;main.c: 64:     EEADR = a
      +                          ddress;
   392  007F22  C001  FFA9         	movff	EEPROMread@address,4009	;volatile
   393  007F26                     
   394                           ;main.c: 65:     EECON1bits.EEPGD = 0;
   395  007F26  9EA6               	bcf	166,7,c	;volsfr
   396  007F28                     
   397                           ;main.c: 66:     EECON1bits.CFGS = 0;
   398  007F28  9CA6               	bcf	166,6,c	;volsfr
   399  007F2A                     
   400                           ;main.c: 67:     EECON1bits.WR = 1;
   401  007F2A  82A6               	bsf	166,1,c	;volsfr
   402  007F2C                     
   403                           ;main.c: 69:     return EEDATA;
   404  007F2C  50A8               	movf	168,w,c	;volatile
   405  007F2E  0012               	return		;funcret
   406  007F30                     __end_of_EEPROMread:
   407                           	callstack 0
   408  0000                     
   409                           	psect	rparam
   410  0000                     
   411                           	psect	idloc
   412                           
   413                           ;Config register IDLOC0 @ 0x200000
   414                           ;	unspecified, using default values
   415  200000                     	org	2097152
   416  200000  FF                 	db	255
   417                           
   418                           ;Config register IDLOC1 @ 0x200001
   419                           ;	unspecified, using default values
   420  200001                     	org	2097153
   421  200001  FF                 	db	255
   422                           
   423                           ;Config register IDLOC2 @ 0x200002
   424                           ;	unspecified, using default values
   425  200002                     	org	2097154
   426  200002  FF                 	db	255
   427                           
   428                           ;Config register IDLOC3 @ 0x200003
   429                           ;	unspecified, using default values
   430  200003                     	org	2097155
   431  200003  FF                 	db	255
   432                           
   433                           ;Config register IDLOC4 @ 0x200004
   434                           ;	unspecified, using default values
   435  200004                     	org	2097156
   436  200004  FF                 	db	255
   437                           
   438                           ;Config register IDLOC5 @ 0x200005
   439                           ;	unspecified, using default values
   440  200005                     	org	2097157
   441  200005  FF                 	db	255
   442                           
   443                           ;Config register IDLOC6 @ 0x200006
   444                           ;	unspecified, using default values
   445  200006                     	org	2097158
   446  200006  FF                 	db	255
   447                           
   448                           ;Config register IDLOC7 @ 0x200007
   449                           ;	unspecified, using default values
   450  200007                     	org	2097159
   451  200007  FF                 	db	255
   452                           
   453                           	psect	config
   454                           
   455                           ; Padding undefined space
   456  300000                     	org	3145728
   457  300000  FF                 	db	255
   458                           
   459                           ;Config register CONFIG1H @ 0x300001
   460                           ;	Oscillator Selection bits
   461                           ;	OSC = HS, HS oscillator
   462                           ;	Fail-Safe Clock Monitor Enable bit
   463                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   464                           ;	Internal/External Oscillator Switchover bit
   465                           ;	IESO = OFF, Oscillator Switchover mode disabled
   466  300001                     	org	3145729
   467  300001  02                 	db	2
   468                           
   469                           ;Config register CONFIG2L @ 0x300002
   470                           ;	Power-up Timer Enable bit
   471                           ;	PWRT = OFF, PWRT disabled
   472                           ;	Brown-out Reset Enable bits
   473                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   474                           ;	Brown Out Reset Voltage bits
   475                           ;	BORV = 3, Minimum setting
   476  300002                     	org	3145730
   477  300002  19                 	db	25
   478                           
   479                           ;Config register CONFIG2H @ 0x300003
   480                           ;	Watchdog Timer Enable bit
   481                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   482                           ;	Watchdog Timer Postscale Select bits
   483                           ;	WDTPS = 32768, 1:32768
   484  300003                     	org	3145731
   485  300003  1E                 	db	30
   486                           
   487                           ; Padding undefined space
   488  300004                     	org	3145732
   489  300004  FF                 	db	255
   490                           
   491                           ;Config register CONFIG3H @ 0x300005
   492                           ;	CCP2 MUX bit
   493                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   494                           ;	PORTB A/D Enable bit
   495                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   496                           ;	Low-Power Timer1 Oscillator Enable bit
   497                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   498                           ;	MCLR Pin Enable bit
   499                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   500  300005                     	org	3145733
   501  300005  03                 	db	3
   502                           
   503                           ;Config register CONFIG4L @ 0x300006
   504                           ;	Stack Full/Underflow Reset Enable bit
   505                           ;	STVREN = ON, Stack full/underflow will cause Reset
   506                           ;	Single-Supply ICSP Enable bit
   507                           ;	LVP = ON, Single-Supply ICSP enabled
   508                           ;	Extended Instruction Set Enable bit
   509                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   510                           ;	Background Debugger Enable bit
   511                           ;	DEBUG = 0x1, unprogrammed default
   512  300006                     	org	3145734
   513  300006  85                 	db	133
   514                           
   515                           ; Padding undefined space
   516  300007                     	org	3145735
   517  300007  FF                 	db	255
   518                           
   519                           ;Config register CONFIG5L @ 0x300008
   520                           ;	Code Protection bit
   521                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   522                           ;	Code Protection bit
   523                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   524                           ;	Code Protection bit
   525                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   526                           ;	Code Protection bit
   527                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   528  300008                     	org	3145736
   529  300008  0F                 	db	15
   530                           
   531                           ;Config register CONFIG5H @ 0x300009
   532                           ;	Boot Block Code Protection bit
   533                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   534                           ;	Data EEPROM Code Protection bit
   535                           ;	CPD = OFF, Data EEPROM not code-protected
   536  300009                     	org	3145737
   537  300009  C0                 	db	192
   538                           
   539                           ;Config register CONFIG6L @ 0x30000A
   540                           ;	Write Protection bit
   541                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   542                           ;	Write Protection bit
   543                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   544                           ;	Write Protection bit
   545                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   546                           ;	Write Protection bit
   547                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   548  30000A                     	org	3145738
   549  30000A  0F                 	db	15
   550                           
   551                           ;Config register CONFIG6H @ 0x30000B
   552                           ;	Configuration Register Write Protection bit
   553                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   554                           ;	Boot Block Write Protection bit
   555                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   556                           ;	Data EEPROM Write Protection bit
   557                           ;	WRTD = OFF, Data EEPROM not write-protected
   558  30000B                     	org	3145739
   559  30000B  E0                 	db	224
   560                           
   561                           ;Config register CONFIG7L @ 0x30000C
   562                           ;	Table Read Protection bit
   563                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   564                           ;	Table Read Protection bit
   565                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   566                           ;	Table Read Protection bit
   567                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   568                           ;	Table Read Protection bit
   569                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   570  30000C                     	org	3145740
   571  30000C  0F                 	db	15
   572                           
   573                           ;Config register CONFIG7H @ 0x30000D
   574                           ;	Boot Block Table Read Protection bit
   575                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   576  30000D                     	org	3145741
   577  30000D  40                 	db	64
   578                           tosu	equ	0xFFF
   579                           tosh	equ	0xFFE
   580                           tosl	equ	0xFFD
   581                           stkptr	equ	0xFFC
   582                           pclatu	equ	0xFFB
   583                           pclath	equ	0xFFA
   584                           pcl	equ	0xFF9
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           prodh	equ	0xFF4
   590                           prodl	equ	0xFF3
   591                           indf0	equ	0xFEF
   592                           postinc0	equ	0xFEE
   593                           postdec0	equ	0xFED
   594                           preinc0	equ	0xFEC
   595                           plusw0	equ	0xFEB
   596                           fsr0h	equ	0xFEA
   597                           fsr0l	equ	0xFE9
   598                           wreg	equ	0xFE8
   599                           indf1	equ	0xFE7
   600                           postinc1	equ	0xFE6
   601                           postdec1	equ	0xFE5
   602                           preinc1	equ	0xFE4
   603                           plusw1	equ	0xFE3
   604                           fsr1h	equ	0xFE2
   605                           fsr1l	equ	0xFE1
   606                           bsr	equ	0xFE0
   607                           indf2	equ	0xFDF
   608                           postinc2	equ	0xFDE
   609                           postdec2	equ	0xFDD
   610                           preinc2	equ	0xFDC
   611                           plusw2	equ	0xFDB
   612                           fsr2h	equ	0xFDA
   613                           fsr2l	equ	0xFD9
   614                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5      10
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    EEPROMwrite@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> led(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_EEPROMwrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     211
                                              3 COMRAM     2     2      0
                         _EEPROMread
                        _EEPROMwrite
 ---------------------------------------------------------------------------------
 (1) _EEPROMwrite                                          3     0      3     196
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _EEPROMread                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMread
   _EEPROMwrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      5       A       1        7.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      15        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 13 17:55:07 2021

                     l30 7FAA                       l25 7F82                       l34 7F2E  
                     l27 7FA4                       l28 7FA6                       u40 7F7A  
                     u41 7F76                       u50 7F9C                       u51 7F98  
                     u60 7FF2                       u61 7FEE                       u77 7FD6  
                    l801 7FE2                      l803 7FF2                      l805 7FF6  
                    l751 7F2C                      l743 7F22                      l745 7F26  
                    l747 7F28                      l771 7F64                      l749 7F2A  
                    l781 7F84                      l773 7F68                      l783 7F8C  
                    l775 7F6A                      l785 7F8E                      l777 7F6C  
                    l769 7F58                      l793 7FAC                      l787 7F9C  
                    l779 7F7A                      l795 7FB4                      l797 7FC4  
                    l799 7FCC                      _led 000A                      wreg 000FE8  
                   _LATD 000F8C                     _main 7FAC                     _numb 0006  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000      __size_of_EEPROMread 0010  
           ___param_bank 000000                    ?_main 0001                    _EEADR 000FA9  
                  _TRISD 000F95                    tablat 000FF5                    status 000FD8  
        __initialization 7F30             __end_of_main 8000     __size_of_EEPROMwrite 0054  
                 ??_main 0004            __activetblptr 000000                   _EEDATA 000FA8  
                 _EECON2 000FA7           EEPROMwrite@ptr 0001                   isa$std 000001  
           __pdataCOMRAM 0006             ??_EEPROMread 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 7F52            ___rparam_used 000001           __pcstackCOMRAM 0001  
     __end_of_EEPROMread 7F30                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F30                  __ramtop 0600                  __ptext0 7FAC  
                __ptext1 7F58                  __ptext2 7F20     end_of_initialization 7F52  
          ??_EEPROMwrite 0004                  postdec1 000FE5                  postinc0 000FEE  
    __end_of_EEPROMwrite 7FAC            __pidataCOMRAM 7F1C      start_initialization 7F30  
            __pbssCOMRAM 000A              _EEPROMwrite 7F58                 _RCONbits 000FD0  
              copy_data0 7F44               _EECON1bits 000FA6                 __Hrparam 0000  
               __Lrparam 0000               _EEPROMread 7F20            __size_of_main 0054  
               isa$xinst 000000        EEPROMread@address 0001       EEPROMwrite@address 0003  
             _INTCONbits 000FF2             ?_EEPROMwrite 0001              ?_EEPROMread 0001  
