

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 09 16:04:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _TRISCbits	set	3988
    56  0000                     _RCSTAbits	set	4011
    57  0000                     _SPBRGH	set	4016
    58  0000                     _SPBRG	set	4015
    59  0000                     _BAUDCONbits	set	4024
    60  0000                     _TXSTAbits	set	4012
    61  0000                     _LATBbits	set	3978
    62  0000                     _PIR1bits	set	3998
    63  0000                     _INTCONbits	set	4082
    64  0000                     _PORTD	set	3971
    65  0000                     _TRISD	set	3989
    66  0000                     _RCREG	set	4014
    67  0000                     _RCIF	set	31989
    68                           
    69                           ; #config settings
    70                           
    71                           	psect	cinit
    72  00021A                     __pcinit:
    73                           	callstack 0
    74  00021A                     start_initialization:
    75                           	callstack 0
    76  00021A                     __initialization:
    77                           	callstack 0
    78  00021A                     end_of_initialization:
    79                           	callstack 0
    80  00021A                     __end_of__initialization:
    81                           	callstack 0
    82  00021A  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83  00021C  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84  00021E  0100               	movlb	0
    85  000220  EFD6  F000         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	cstackCOMRAM
    88  000001                     __pcstackCOMRAM:
    89                           	callstack 0
    90  000001                     ??_low_isr:
    91                           
    92                           ; 1 bytes @ 0x0
    93  000001                     	ds	4
    94  000005                     ?___lldiv:
    95                           	callstack 0
    96  000005                     ___lldiv@dividend:
    97                           	callstack 0
    98                           
    99                           ; 4 bytes @ 0x4
   100  000005                     	ds	4
   101  000009                     ___lldiv@divisor:
   102                           	callstack 0
   103                           
   104                           ; 4 bytes @ 0x8
   105  000009                     	ds	4
   106  00000D                     ___lldiv@quotient:
   107                           	callstack 0
   108                           
   109                           ; 4 bytes @ 0xC
   110  00000D                     	ds	4
   111  000011                     ___lldiv@counter:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x10
   115  000011                     	ds	1
   116  000012                     UART_Init@baudrate:
   117                           	callstack 0
   118                           
   119                           ; 4 bytes @ 0x11
   120  000012                     	ds	4
   121  000016                     ??_UART_Init:
   122                           
   123                           ; 1 bytes @ 0x15
   124  000016                     	ds	8
   125  00001E                     UART_Init@baudrate_calculated:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x1D
   129  00001E                     	ds	2
   130  000020                     ??_main:
   131                           
   132                           ; 1 bytes @ 0x1F
   133  000020                     	ds	2
   134                           
   135 ;;
   136 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   137 ;;
   138 ;; *************** function _main *****************
   139 ;; Defined at:
   140 ;;		line 48 in file "main.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;		None
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1    wreg      void 
   147 ;; Registers used:
   148 ;;		wreg, status,2, status,0, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : 0/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   154 ;;      Params:         0       0       0       0       0       0       0
   155 ;;      Locals:         0       0       0       0       0       0       0
   156 ;;      Temps:          2       0       0       0       0       0       0
   157 ;;      Totals:         2       0       0       0       0       0       0
   158 ;;Total ram usage:        2 bytes
   159 ;; Hardware stack levels required when called: 4
   160 ;; This function calls:
   161 ;;		_UART_Data_Ready
   162 ;;		_UART_Init
   163 ;;		_UART_Read
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170  0001AC                     __ptext0:
   171                           	callstack 0
   172  0001AC                     _main:
   173                           	callstack 27
   174  0001AC                     
   175                           ;main.c: 51:     UART_Init((uint32_t)9600);
   176  0001AC  0E80               	movlw	128
   177  0001AE  6E12               	movwf	UART_Init@baudrate^0,c
   178  0001B0  0E25               	movlw	37
   179  0001B2  6E13               	movwf	(UART_Init@baudrate+1)^0,c
   180  0001B4  0E00               	movlw	0
   181  0001B6  6E14               	movwf	(UART_Init@baudrate+2)^0,c
   182  0001B8  0E00               	movlw	0
   183  0001BA  6E15               	movwf	(UART_Init@baudrate+3)^0,c
   184  0001BC  EC8C  F000         	call	_UART_Init	;wreg free
   185  0001C0                     
   186                           ;main.c: 53:     TRISD = 0;
   187  0001C0  0E00               	movlw	0
   188  0001C2  6E95               	movwf	149,c	;volatile
   189  0001C4                     l879:
   190                           
   191                           ;main.c: 63:     {;main.c: 65:       if(UART_Data_Ready())
   192  0001C4  EC12  F001         	call	_UART_Data_Ready	;wreg free
   193  0001C8  0900               	iorlw	0
   194  0001CA  B4D8               	btfsc	status,2,c
   195  0001CC  EFEA  F000         	goto	u161
   196  0001D0  EFEC  F000         	goto	u160
   197  0001D4                     u161:
   198  0001D4  EFEF  F000         	goto	l883
   199  0001D8                     u160:
   200  0001D8                     
   201                           ;main.c: 66:       {;main.c: 67:         PORTD = UART_Read();
   202  0001D8  ECFE  F000         	call	_UART_Read	;wreg free
   203  0001DC  6E83               	movwf	131,c	;volatile
   204  0001DE                     l883:
   205                           
   206                           ;main.c: 72:       _delay((unsigned long)((100)*(10000000/4000.0)));
   207  0001DE  0E02               	movlw	2
   208  0001E0  6E21               	movwf	(??_main+1)^0,c
   209  0001E2  0E45               	movlw	69
   210  0001E4  6E20               	movwf	??_main^0,c
   211  0001E6  0EAA               	movlw	170
   212  0001E8                     u177:
   213  0001E8  2EE8               	decfsz	wreg,f,c
   214  0001EA  D7FE               	bra	u177
   215  0001EC  2E20               	decfsz	??_main^0,f,c
   216  0001EE  D7FC               	bra	u177
   217  0001F0  2E21               	decfsz	(??_main+1)^0,f,c
   218  0001F2  D7FA               	bra	u177
   219  0001F4  EFE2  F000         	goto	l879
   220  0001F8  EF38  F000         	goto	start
   221  0001FC                     __end_of_main:
   222                           	callstack 0
   223                           
   224 ;; *************** function _UART_Read *****************
   225 ;; Defined at:
   226 ;;		line 33 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      unsigned char 
   233 ;; Registers used:
   234 ;;		wreg, status,2
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   240 ;;      Params:         0       0       0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0       0       0
   242 ;;      Temps:          0       0       0       0       0       0       0
   243 ;;      Totals:         0       0       0       0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; Hardware stack levels required when called: 2
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		_main
   251 ;;		_UART_Read_Text
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256  0001FC                     __ptext1:
   257                           	callstack 0
   258  0001FC                     _UART_Read:
   259                           	callstack 28
   260  0001FC                     l36:
   261  0001FC  AA9E               	btfss	3998,5,c	;volatile
   262  0001FE  EF03  F001         	goto	u41
   263  000202  EF05  F001         	goto	u40
   264  000206                     u41:
   265  000206  EFFE  F000         	goto	l36
   266  00020A                     u40:
   267  00020A                     
   268                           ;main.c: 36:   return RCREG;
   269  00020A  50AE               	movf	174,w,c	;volatile
   270  00020C  0012               	return		;funcret
   271  00020E                     __end_of_UART_Read:
   272                           	callstack 0
   273                           
   274 ;; *************** function _UART_Init *****************
   275 ;; Defined at:
   276 ;;		line 111 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;  baudrate        4   17[COMRAM] const unsigned long 
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  baudrate_cal    2   29[COMRAM] unsigned short 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   290 ;;      Params:         4       0       0       0       0       0       0
   291 ;;      Locals:         2       0       0       0       0       0       0
   292 ;;      Temps:          8       0       0       0       0       0       0
   293 ;;      Totals:        14       0       0       0       0       0       0
   294 ;;Total ram usage:       14 bytes
   295 ;; Hardware stack levels used: 1
   296 ;; Hardware stack levels required when called: 3
   297 ;; This function calls:
   298 ;;		___lldiv
   299 ;; This function is called by:
   300 ;;		_main
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text2
   305  000118                     __ptext2:
   306                           	callstack 0
   307  000118                     _UART_Init:
   308                           	callstack 27
   309  000118                     
   310                           ;main.c: 111: void UART_Init(const uint32_t baudrate);main.c: 112: {;main.c: 114:  uint1
      +                          6_t baudrate_calculated = (10000000 - baudrate * 4) /(baudrate * 4);
   311  000118  C012  F016         	movff	UART_Init@baudrate,??_UART_Init
   312  00011C  C013  F017         	movff	UART_Init@baudrate+1,??_UART_Init+1
   313  000120  C014  F018         	movff	UART_Init@baudrate+2,??_UART_Init+2
   314  000124  C015  F019         	movff	UART_Init@baudrate+3,??_UART_Init+3
   315  000128  0E02               	movlw	2
   316  00012A                     u145:
   317  00012A  90D8               	bcf	status,0,c
   318  00012C  3616               	rlcf	??_UART_Init^0,f,c
   319  00012E  3617               	rlcf	(??_UART_Init+1)^0,f,c
   320  000130  3618               	rlcf	(??_UART_Init+2)^0,f,c
   321  000132  3619               	rlcf	(??_UART_Init+3)^0,f,c
   322  000134  2EE8               	decfsz	wreg,f,c
   323  000136  EF95  F000         	goto	u145
   324  00013A  5016               	movf	??_UART_Init^0,w,c
   325  00013C  0880               	sublw	128
   326  00013E  6E05               	movwf	___lldiv@dividend^0,c
   327  000140  0E96               	movlw	150
   328  000142  5417               	subfwb	(??_UART_Init+1)^0,w,c
   329  000144  6E06               	movwf	(___lldiv@dividend+1)^0,c
   330  000146  0E98               	movlw	152
   331  000148  5418               	subfwb	(??_UART_Init+2)^0,w,c
   332  00014A  6E07               	movwf	(___lldiv@dividend+2)^0,c
   333  00014C  0E00               	movlw	0
   334  00014E  5419               	subfwb	(??_UART_Init+3)^0,w,c
   335  000150  6E08               	movwf	(___lldiv@dividend+3)^0,c
   336  000152  C012  F01A         	movff	UART_Init@baudrate,??_UART_Init+4
   337  000156  C013  F01B         	movff	UART_Init@baudrate+1,??_UART_Init+5
   338  00015A  C014  F01C         	movff	UART_Init@baudrate+2,??_UART_Init+6
   339  00015E  C015  F01D         	movff	UART_Init@baudrate+3,??_UART_Init+7
   340  000162  0E02               	movlw	2
   341  000164                     u155:
   342  000164  90D8               	bcf	status,0,c
   343  000166  361A               	rlcf	(??_UART_Init+4)^0,f,c
   344  000168  361B               	rlcf	(??_UART_Init+5)^0,f,c
   345  00016A  361C               	rlcf	(??_UART_Init+6)^0,f,c
   346  00016C  361D               	rlcf	(??_UART_Init+7)^0,f,c
   347  00016E  2EE8               	decfsz	wreg,f,c
   348  000170  EFB2  F000         	goto	u155
   349  000174  C01A  F009         	movff	??_UART_Init+4,___lldiv@divisor
   350  000178  C01B  F00A         	movff	??_UART_Init+5,___lldiv@divisor+1
   351  00017C  C01C  F00B         	movff	??_UART_Init+6,___lldiv@divisor+2
   352  000180  C01D  F00C         	movff	??_UART_Init+7,___lldiv@divisor+3
   353  000184  EC3A  F000         	call	___lldiv	;wreg free
   354  000188  C005  F01E         	movff	?___lldiv,UART_Init@baudrate_calculated
   355  00018C  C006  F01F         	movff	?___lldiv+1,UART_Init@baudrate_calculated+1
   356  000190                     
   357                           ;main.c: 116:     TXSTAbits.BRGH = 1;
   358  000190  84AC               	bsf	172,2,c	;volatile
   359  000192                     
   360                           ;main.c: 117:     BAUDCONbits.BRG16 = 1;
   361  000192  86B8               	bsf	184,3,c	;volatile
   362  000194                     
   363                           ;main.c: 119:     SPBRG = (baudrate_calculated & 0x00FF);
   364  000194  C01E  FFAF         	movff	UART_Init@baudrate_calculated,4015	;volatile
   365  000198                     
   366                           ;main.c: 120:     SPBRGH = (baudrate_calculated & 0xFF00) >> 8;
   367  000198  501F               	movf	(UART_Init@baudrate_calculated+1)^0,w,c
   368  00019A  6EB0               	movwf	176,c	;volatile
   369  00019C                     
   370                           ;main.c: 122:     TXSTAbits.SYNC = 0;
   371  00019C  98AC               	bcf	172,4,c	;volatile
   372  00019E                     
   373                           ;main.c: 123:     TXSTAbits.TX9 = 0;
   374  00019E  9CAC               	bcf	172,6,c	;volatile
   375  0001A0                     
   376                           ;main.c: 124:     RCSTAbits.SPEN = 1;
   377  0001A0  8EAB               	bsf	171,7,c	;volatile
   378  0001A2                     
   379                           ;main.c: 125:     TRISCbits.RC6 = 1;
   380  0001A2  8C94               	bsf	148,6,c	;volatile
   381  0001A4                     
   382                           ;main.c: 126:     TRISCbits.RC7 = 1;
   383  0001A4  8E94               	bsf	148,7,c	;volatile
   384  0001A6                     
   385                           ;main.c: 127:     RCSTAbits.CREN = 1;
   386  0001A6  88AB               	bsf	171,4,c	;volatile
   387  0001A8                     
   388                           ;main.c: 128:     TXSTAbits.TXEN = 1;
   389  0001A8  8AAC               	bsf	172,5,c	;volatile
   390  0001AA  0012               	return		;funcret
   391  0001AC                     __end_of_UART_Init:
   392                           	callstack 0
   393                           
   394 ;; *************** function ___lldiv *****************
   395 ;; Defined at:
   396 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;  dividend        4    4[COMRAM] unsigned long 
   399 ;;  divisor         4    8[COMRAM] unsigned long 
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  quotient        4   12[COMRAM] unsigned long 
   402 ;;  counter         1   16[COMRAM] unsigned char 
   403 ;; Return value:  Size  Location     Type
   404 ;;                  4    4[COMRAM] unsigned long 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   412 ;;      Params:         8       0       0       0       0       0       0
   413 ;;      Locals:         5       0       0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0       0       0
   415 ;;      Totals:        13       0       0       0       0       0       0
   416 ;;Total ram usage:       13 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; Hardware stack levels required when called: 2
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_UART_Init
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text3
   427  000074                     __ptext3:
   428                           	callstack 0
   429  000074                     ___lldiv:
   430                           	callstack 27
   431  000074  0E00               	movlw	0
   432  000076  6E0D               	movwf	___lldiv@quotient^0,c
   433  000078  0E00               	movlw	0
   434  00007A  6E0E               	movwf	(___lldiv@quotient+1)^0,c
   435  00007C  0E00               	movlw	0
   436  00007E  6E0F               	movwf	(___lldiv@quotient+2)^0,c
   437  000080  0E00               	movlw	0
   438  000082  6E10               	movwf	(___lldiv@quotient+3)^0,c
   439  000084  5009               	movf	___lldiv@divisor^0,w,c
   440  000086  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
   441  000088  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
   442  00008A  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
   443  00008C  B4D8               	btfsc	status,2,c
   444  00008E  EF4B  F000         	goto	u111
   445  000092  EF4D  F000         	goto	u110
   446  000096                     u111:
   447  000096  EF83  F000         	goto	l99
   448  00009A                     u110:
   449  00009A  0E01               	movlw	1
   450  00009C  6E11               	movwf	___lldiv@counter^0,c
   451  00009E  EF57  F000         	goto	l837
   452  0000A2                     l835:
   453  0000A2  90D8               	bcf	status,0,c
   454  0000A4  3609               	rlcf	___lldiv@divisor^0,f,c
   455  0000A6  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
   456  0000A8  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
   457  0000AA  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
   458  0000AC  2A11               	incf	___lldiv@counter^0,f,c
   459  0000AE                     l837:
   460  0000AE  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
   461  0000B0  EF5C  F000         	goto	u121
   462  0000B4  EF5E  F000         	goto	u120
   463  0000B8                     u121:
   464  0000B8  EF51  F000         	goto	l835
   465  0000BC                     u120:
   466  0000BC                     l839:
   467  0000BC  90D8               	bcf	status,0,c
   468  0000BE  360D               	rlcf	___lldiv@quotient^0,f,c
   469  0000C0  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
   470  0000C2  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
   471  0000C4  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
   472  0000C6  5009               	movf	___lldiv@divisor^0,w,c
   473  0000C8  5C05               	subwf	___lldiv@dividend^0,w,c
   474  0000CA  500A               	movf	(___lldiv@divisor+1)^0,w,c
   475  0000CC  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
   476  0000CE  500B               	movf	(___lldiv@divisor+2)^0,w,c
   477  0000D0  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
   478  0000D2  500C               	movf	(___lldiv@divisor+3)^0,w,c
   479  0000D4  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
   480  0000D6  A0D8               	btfss	status,0,c
   481  0000D8  EF70  F000         	goto	u131
   482  0000DC  EF72  F000         	goto	u130
   483  0000E0                     u131:
   484  0000E0  EF7B  F000         	goto	l847
   485  0000E4                     u130:
   486  0000E4  5009               	movf	___lldiv@divisor^0,w,c
   487  0000E6  5E05               	subwf	___lldiv@dividend^0,f,c
   488  0000E8  500A               	movf	(___lldiv@divisor+1)^0,w,c
   489  0000EA  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
   490  0000EC  500B               	movf	(___lldiv@divisor+2)^0,w,c
   491  0000EE  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
   492  0000F0  500C               	movf	(___lldiv@divisor+3)^0,w,c
   493  0000F2  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
   494  0000F4  800D               	bsf	___lldiv@quotient^0,0,c
   495  0000F6                     l847:
   496  0000F6  90D8               	bcf	status,0,c
   497  0000F8  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
   498  0000FA  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
   499  0000FC  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
   500  0000FE  3209               	rrcf	___lldiv@divisor^0,f,c
   501  000100  2E11               	decfsz	___lldiv@counter^0,f,c
   502  000102  EF5E  F000         	goto	l839
   503  000106                     l99:
   504  000106  C00D  F005         	movff	___lldiv@quotient,?___lldiv
   505  00010A  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
   506  00010E  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
   507  000112  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
   508  000116  0012               	return		;funcret
   509  000118                     __end_of___lldiv:
   510                           	callstack 0
   511                           
   512 ;; *************** function _UART_Data_Ready *****************
   513 ;; Defined at:
   514 ;;		line 27 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      unsigned char 
   521 ;; Registers used:
   522 ;;		wreg
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   528 ;;      Params:         0       0       0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 2
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text4
   543  000224                     __ptext4:
   544                           	callstack 0
   545  000224                     _UART_Data_Ready:
   546                           	callstack 28
   547  000224                     
   548                           ;main.c: 29:    return RCIF;
   549  000224  0E00               	movlw	0
   550  000226  BA9E               	btfsc	3998,5,c	;volatile
   551  000228  0E01               	movlw	1
   552  00022A  0012               	return		;funcret
   553  00022C                     __end_of_UART_Data_Ready:
   554                           	callstack 0
   555                           
   556 ;; *************** function _low_isr *****************
   557 ;; Defined at:
   558 ;;		line 95 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   572 ;;      Params:         0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0
   574 ;;      Temps:          4       0       0       0       0       0       0
   575 ;;      Totals:         4       0       0       0       0       0       0
   576 ;;Total ram usage:        4 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		Interrupt level 1
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	intcodelo
   587  000018                     __pintcodelo:
   588                           	callstack 0
   589  000018                     _low_isr:
   590                           	callstack 27
   591                           
   592                           ;incstack = 0
   593  000018  8022               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   594  00001A  CFD8 F002          	movff	status,??_low_isr+1
   595  00001E  CFE8 F003          	movff	wreg,??_low_isr+2
   596  000022  CFE0 F004          	movff	bsr,??_low_isr+3
   597  000026                     
   598                           ;main.c: 97:     INTCONbits.GIEL = 0;
   599  000026  9CF2               	bcf	242,6,c	;volatile
   600                           
   601                           ;main.c: 99:     if (PIR1bits.RCIF == 1)
   602  000028  AA9E               	btfss	158,5,c	;volatile
   603  00002A  EF19  F000         	goto	i1u9_21
   604  00002E  EF1B  F000         	goto	i1u9_20
   605  000032                     i1u9_21:
   606  000032  EF2F  F000         	goto	i1l827
   607  000036                     i1u9_20:
   608  000036                     
   609                           ;main.c: 100:     {;main.c: 101:         LATBbits.LATB6 = ~LATBbits.LATB6;
   610  000036  BC8A               	btfsc	138,6,c	;volatile
   611  000038  EF20  F000         	goto	i1u10_21
   612  00003C  EF23  F000         	goto	i1u10_20
   613  000040                     i1u10_21:
   614  000040  0E01               	movlw	1
   615  000042  EF24  F000         	goto	i1u10_26
   616  000046                     i1u10_20:
   617  000046  0E00               	movlw	0
   618  000048                     i1u10_26:
   619  000048  0AFF               	xorlw	255
   620  00004A  6E01               	movwf	??_low_isr^0,c
   621  00004C  3A01               	swapf	??_low_isr^0,f,c
   622  00004E  4601               	rlncf	??_low_isr^0,f,c
   623  000050  4601               	rlncf	??_low_isr^0,f,c
   624  000052  508A               	movf	138,w,c	;volatile
   625  000054  1801               	xorwf	??_low_isr^0,w,c
   626  000056  0BBF               	andlw	-65
   627  000058  1801               	xorwf	??_low_isr^0,w,c
   628  00005A  6E8A               	movwf	138,c	;volatile
   629  00005C                     
   630                           ;main.c: 103:         PIR1bits.RCIF = 0;
   631  00005C  9A9E               	bcf	158,5,c	;volatile
   632  00005E                     i1l827:
   633                           
   634                           ;main.c: 106:     INTCONbits.GIEL = 1;
   635  00005E  8CF2               	bsf	242,6,c	;volatile
   636  000060  C004  FFE0         	movff	??_low_isr+3,bsr
   637  000064  C003  FFE8         	movff	??_low_isr+2,wreg
   638  000068  C002  FFD8         	movff	??_low_isr+1,status
   639  00006C  9022               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   640  00006E  0010               	retfie	
   641  000070                     __end_of_low_isr:
   642                           	callstack 0
   643                           
   644 ;; *************** function _high_isr *****************
   645 ;; Defined at:
   646 ;;		line 81 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   660 ;;      Params:         0       0       0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		Interrupt level 2
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	intcode
   674  000008                     __pintcode:
   675                           	callstack 0
   676  000008                     _high_isr:
   677                           	callstack 27
   678                           
   679                           ;incstack = 0
   680  000008  8222               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   681  00000A  ED07  F001         	call	int_func,f	;refresh shadow registers
   682                           
   683                           	psect	intcode_body
   684  00020E                     __pintcode_body:
   685                           	callstack 27
   686  00020E                     int_func:
   687                           	callstack 27
   688  00020E  0006               	pop		; remove dummy address from shadow register refresh
   689  000210                     
   690                           ;main.c: 83:     INTCONbits.GIEH = 0;
   691  000210  9EF2               	bcf	242,7,c	;volatile
   692                           
   693                           ;main.c: 85:     if (PIR1bits.TXIF == 1)
   694  000212  509E               	movf	158,w,c	;volatile
   695  000214                     
   696                           ;main.c: 91:     INTCONbits.GIEH = 1;
   697  000214  8EF2               	bsf	242,7,c	;volatile
   698  000216  9222               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   699  000218  0011               	retfie		f
   700  00021A                     __end_of_high_isr:
   701                           	callstack 0
   702  0000                     
   703                           	psect	rparam
   704  0000                     
   705                           	psect	temp
   706  000022                     btemp:
   707                           	callstack 0
   708  000022                     	ds	1
   709  0000                     int$flags	set	btemp
   710  0000                     wtemp8	set	btemp+1
   711  0000                     ttemp5	set	btemp+1
   712  0000                     ttemp6	set	btemp+4
   713  0000                     ttemp7	set	btemp+8
   714                           
   715                           	psect	idloc
   716                           
   717                           ;Config register IDLOC0 @ 0x200000
   718                           ;	unspecified, using default values
   719  200000                     	org	2097152
   720  200000  FF                 	db	255
   721                           
   722                           ;Config register IDLOC1 @ 0x200001
   723                           ;	unspecified, using default values
   724  200001                     	org	2097153
   725  200001  FF                 	db	255
   726                           
   727                           ;Config register IDLOC2 @ 0x200002
   728                           ;	unspecified, using default values
   729  200002                     	org	2097154
   730  200002  FF                 	db	255
   731                           
   732                           ;Config register IDLOC3 @ 0x200003
   733                           ;	unspecified, using default values
   734  200003                     	org	2097155
   735  200003  FF                 	db	255
   736                           
   737                           ;Config register IDLOC4 @ 0x200004
   738                           ;	unspecified, using default values
   739  200004                     	org	2097156
   740  200004  FF                 	db	255
   741                           
   742                           ;Config register IDLOC5 @ 0x200005
   743                           ;	unspecified, using default values
   744  200005                     	org	2097157
   745  200005  FF                 	db	255
   746                           
   747                           ;Config register IDLOC6 @ 0x200006
   748                           ;	unspecified, using default values
   749  200006                     	org	2097158
   750  200006  FF                 	db	255
   751                           
   752                           ;Config register IDLOC7 @ 0x200007
   753                           ;	unspecified, using default values
   754  200007                     	org	2097159
   755  200007  FF                 	db	255
   756                           
   757                           	psect	config
   758                           
   759                           ; Padding undefined space
   760  300000                     	org	3145728
   761  300000  FF                 	db	255
   762                           
   763                           ;Config register CONFIG1H @ 0x300001
   764                           ;	Oscillator Selection bits
   765                           ;	OSC = HS, HS oscillator
   766                           ;	Fail-Safe Clock Monitor Enable bit
   767                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   768                           ;	Internal/External Oscillator Switchover bit
   769                           ;	IESO = OFF, Oscillator Switchover mode disabled
   770  300001                     	org	3145729
   771  300001  02                 	db	2
   772                           
   773                           ;Config register CONFIG2L @ 0x300002
   774                           ;	Power-up Timer Enable bit
   775                           ;	PWRT = OFF, PWRT disabled
   776                           ;	Brown-out Reset Enable bits
   777                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   778                           ;	Brown Out Reset Voltage bits
   779                           ;	BORV = 3, Minimum setting
   780  300002                     	org	3145730
   781  300002  19                 	db	25
   782                           
   783                           ;Config register CONFIG2H @ 0x300003
   784                           ;	Watchdog Timer Enable bit
   785                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   786                           ;	Watchdog Timer Postscale Select bits
   787                           ;	WDTPS = 32768, 1:32768
   788  300003                     	org	3145731
   789  300003  1E                 	db	30
   790                           
   791                           ; Padding undefined space
   792  300004                     	org	3145732
   793  300004  FF                 	db	255
   794                           
   795                           ;Config register CONFIG3H @ 0x300005
   796                           ;	CCP2 MUX bit
   797                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   798                           ;	PORTB A/D Enable bit
   799                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   800                           ;	Low-Power Timer1 Oscillator Enable bit
   801                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   802                           ;	MCLR Pin Enable bit
   803                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   804  300005                     	org	3145733
   805  300005  01                 	db	1
   806                           
   807                           ;Config register CONFIG4L @ 0x300006
   808                           ;	Stack Full/Underflow Reset Enable bit
   809                           ;	STVREN = ON, Stack full/underflow will cause Reset
   810                           ;	Single-Supply ICSP Enable bit
   811                           ;	LVP = OFF, Single-Supply ICSP disabled
   812                           ;	Extended Instruction Set Enable bit
   813                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   814                           ;	Background Debugger Enable bit
   815                           ;	DEBUG = 0x1, unprogrammed default
   816  300006                     	org	3145734
   817  300006  81                 	db	129
   818                           
   819                           ; Padding undefined space
   820  300007                     	org	3145735
   821  300007  FF                 	db	255
   822                           
   823                           ;Config register CONFIG5L @ 0x300008
   824                           ;	Code Protection bit
   825                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   826                           ;	Code Protection bit
   827                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   828                           ;	Code Protection bit
   829                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   830                           ;	Code Protection bit
   831                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   832  300008                     	org	3145736
   833  300008  0F                 	db	15
   834                           
   835                           ;Config register CONFIG5H @ 0x300009
   836                           ;	Boot Block Code Protection bit
   837                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   838                           ;	Data EEPROM Code Protection bit
   839                           ;	CPD = OFF, Data EEPROM not code-protected
   840  300009                     	org	3145737
   841  300009  C0                 	db	192
   842                           
   843                           ;Config register CONFIG6L @ 0x30000A
   844                           ;	Write Protection bit
   845                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   846                           ;	Write Protection bit
   847                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   848                           ;	Write Protection bit
   849                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   850                           ;	Write Protection bit
   851                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   852  30000A                     	org	3145738
   853  30000A  0F                 	db	15
   854                           
   855                           ;Config register CONFIG6H @ 0x30000B
   856                           ;	Configuration Register Write Protection bit
   857                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   858                           ;	Boot Block Write Protection bit
   859                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   860                           ;	Data EEPROM Write Protection bit
   861                           ;	WRTD = OFF, Data EEPROM not write-protected
   862  30000B                     	org	3145739
   863  30000B  E0                 	db	224
   864                           
   865                           ;Config register CONFIG7L @ 0x30000C
   866                           ;	Table Read Protection bit
   867                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   868                           ;	Table Read Protection bit
   869                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   870                           ;	Table Read Protection bit
   871                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   872                           ;	Table Read Protection bit
   873                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   874  30000C                     	org	3145740
   875  30000C  0F                 	db	15
   876                           
   877                           ;Config register CONFIG7H @ 0x30000D
   878                           ;	Boot Block Table Read Protection bit
   879                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   880  30000D                     	org	3145741
   881  30000D  40                 	db	64
   882                           tosu	equ	0xFFF
   883                           tosh	equ	0xFFE
   884                           tosl	equ	0xFFD
   885                           stkptr	equ	0xFFC
   886                           pclatu	equ	0xFFB
   887                           pclath	equ	0xFFA
   888                           pcl	equ	0xFF9
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           prodh	equ	0xFF4
   894                           prodl	equ	0xFF3
   895                           indf0	equ	0xFEF
   896                           postinc0	equ	0xFEE
   897                           postdec0	equ	0xFED
   898                           preinc0	equ	0xFEC
   899                           plusw0	equ	0xFEB
   900                           fsr0h	equ	0xFEA
   901                           fsr0l	equ	0xFE9
   902                           wreg	equ	0xFE8
   903                           indf1	equ	0xFE7
   904                           postinc1	equ	0xFE6
   905                           postdec1	equ	0xFE5
   906                           preinc1	equ	0xFE4
   907                           plusw1	equ	0xFE3
   908                           fsr1h	equ	0xFE2
   909                           fsr1l	equ	0xFE1
   910                           bsr	equ	0xFE0
   911                           indf2	equ	0xFDF
   912                           postinc2	equ	0xFDE
   913                           postdec2	equ	0xFDD
   914                           preinc2	equ	0xFDC
   915                           plusw2	equ	0xFDB
   916                           fsr2h	equ	0xFDA
   917                           fsr2l	equ	0xFD9
   918                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     33      33
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     479
                                             31 COMRAM     2     2      0
                    _UART_Data_Ready
                          _UART_Init
                          _UART_Read
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     479
                                             17 COMRAM    14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                              4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_Init
     ___lldiv
   _UART_Read

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E     21      21       1       26.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 09 16:04:25 2021

                          l33 022A                            l36 01FC                            l39 020C  
                          l69 01AA                            l99 0106                            u40 020A  
                          u41 0206                            bsr 000FE0                           l106 0116  
                         l831 0084                           l841 00C6                           l833 009A  
                         l843 00E4                           l835 00A2                           l851 0118  
                         l771 01FC                           l845 00F4                           l837 00AE  
                         l829 0074                           l861 019C                           l853 0190  
                         l773 020A                           l767 0224                           l847 00F6  
                         l839 00BC                           l871 01A6                           l863 019E  
                         l855 0192                           l849 0100                           l873 01A8  
                         l865 01A0                           l857 0194                           l881 01D8  
                         l867 01A2                           l859 0198                           l883 01DE  
                         l875 01AC                           l869 01A4                           l877 01C0  
                         l879 01C4                           u110 009A                           u111 0096  
                         u120 00BC                           u121 00B8                           u130 00E4  
                         u131 00E0                           u160 01D8                           u145 012A  
                         u161 01D4                           u155 0164                           u177 01E8  
                         wreg 000FE8                          _RCIF 007CF5                          i1l66 0060  
                        i2l60 0216                          i2l59 0214                          _main 01AC  
                        btemp 0022                          start 0070                  ___param_bank 000000  
                       ?_main 0001               __end_of___lldiv 0118                         i1l821 0026  
                       i1l823 0036                         i1l825 005C                         i1l827 005E  
                       i2l819 0210                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISD 000F95            __size_of_UART_Init 0094  
          __size_of_UART_Read 0012               __end_of_low_isr 0070                         ttemp5 0023  
                       ttemp6 0026                         ttemp7 002A                         status 000FD8  
                       wtemp8 0023               __initialization 021A                  __end_of_main 01FC  
                      ??_main 0020                 __activetblptr 000000                        _SPBRGH 000FB0  
                      i1u9_20 0036                        i1u9_21 0032             __end_of_UART_Init 01AC  
           __end_of_UART_Read 020E              __end_of_high_isr 021A                     ??___lldiv 000D  
                      isa$std 000001                     ??_low_isr 0001                    __accesstop 0080  
     __end_of__initialization 021A                 ___rparam_used 000001                __pcstackCOMRAM 0001  
    __size_of_UART_Data_Ready 0008  UART_Init@baudrate_calculated 001E                       i1u10_20 0046  
                     i1u10_21 0040                       i1u10_26 0048                     ?_high_isr 0001  
                     __Hparam 0000                       __Lparam 0000                       ___lldiv 0074  
                     __pcinit 021A                       __ramtop 0600                       __ptext0 01AC  
                     __ptext1 01FC                       __ptext2 0118                       __ptext3 0074  
                     __ptext4 0224                       _low_isr 0018                    ??_high_isr 0001  
              __pintcode_body 020E          end_of_initialization 021A                       int_func 020E  
             ___lldiv@divisor 0009               ___lldiv@counter 0011                     _RCSTAbits 000FAB  
           ??_UART_Data_Ready 0005                     _UART_Init 0118                     _UART_Read 01FC  
                   _TRISCbits 000F94                     _TXSTAbits 000FAC                   _BAUDCONbits 000FB8  
                  ?_UART_Init 0012                    ?_UART_Read 0001           start_initialization 021A  
           __size_of_high_isr 0212                     __pintcode 0008                      ?___lldiv 0005  
                 __pintcodelo 0018                   ??_UART_Init 0016                   ??_UART_Read 0005  
                    ?_low_isr 0001               _UART_Data_Ready 0224                      _LATBbits 000F8A  
                    _PIR1bits 000F9E             UART_Init@baudrate 0012                      __Hrparam 0000  
                    __Lrparam 0000              __size_of___lldiv 00A4              __size_of_low_isr 0058  
     __end_of_UART_Data_Ready 022C                      _high_isr 0008                 __size_of_main 0050  
                    isa$xinst 000000                      int$flags 0022                    _INTCONbits 000FF2  
                    intlevel1 0000                      intlevel2 0000              ___lldiv@dividend 0005  
            ___lldiv@quotient 000D              ?_UART_Data_Ready 0001  
