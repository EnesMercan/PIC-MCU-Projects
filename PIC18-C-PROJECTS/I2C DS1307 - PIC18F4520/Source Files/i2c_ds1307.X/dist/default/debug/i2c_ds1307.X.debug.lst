

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Oct 16 22:35:13 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4520 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _PIE1bits	set	3997
    62  0000                     _IPR1bits	set	3999
    63  0000                     _PIR1bits	set	3998
    64  0000                     _INTCONbits	set	4082
    65  0000                     _LATBbits	set	3978
    66  0000                     _TXREG	set	4013
    67  0000                     _SSPSTATbits	set	4039
    68  0000                     _SSPBUF	set	4041
    69  0000                     _SSPCON2bits	set	4037
    70  0000                     _SSPSTAT	set	4039
    71  0000                     _SSPADD	set	4040
    72  0000                     _SSPCON2	set	4037
    73  0000                     _SSPCON1	set	4038
    74  0000                     _TRISCbits	set	3988
    75  0000                     _RCSTAbits	set	4011
    76  0000                     _SPBRGH	set	4016
    77  0000                     _SPBRG	set	4015
    78  0000                     _BAUDCONbits	set	4024
    79  0000                     _TXSTAbits	set	4012
    80  0000                     _TRMT	set	32097
    81  0000                     _ACKDT	set	32301
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  000300                     __pcinit:
    87                           	callstack 0
    88  000300                     start_initialization:
    89                           	callstack 0
    90  000300                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Clear objects allocated to BANK1 (256 bytes)
    94  000300  EE01  F000         	lfsr	0,__pbssBANK1
    95  000304  EE11 F000          	lfsr	1,256
    96  000308                     clear_0:
    97  000308  6AEE               	clrf	postinc0,c
    98  00030A  50E5               	movf	postdec1,w,c
    99  00030C  50E1               	movf	fsr1l,w,c
   100  00030E  E1FC               	bnz	clear_0
   101  000310  50E2               	movf	fsr1h,w,c
   102  000312  E1FA               	bnz	clear_0
   103                           
   104                           ; Clear objects allocated to COMRAM (2 bytes)
   105  000314  6A24               	clrf	(__pbssCOMRAM+1)& (0+255),c
   106  000316  6A23               	clrf	__pbssCOMRAM& (0+255),c
   107  000318                     end_of_initialization:
   108                           	callstack 0
   109  000318                     __end_of__initialization:
   110                           	callstack 0
   111  000318  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   112  00031A  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   113  00031C  0100               	movlb	0
   114  00031E  EFD6  F000         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117  000023                     __pbssCOMRAM:
   118                           	callstack 0
   119  000023                     _uart_data:
   120                           	callstack 0
   121  000023                     	ds	1
   122  000024                     _counter:
   123                           	callstack 0
   124  000024                     	ds	1
   125                           
   126                           	psect	bssBANK1
   127  000100                     __pbssBANK1:
   128                           	callstack 0
   129  000100                     _print_buffer:
   130                           	callstack 0
   131  000100                     	ds	256
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	callstack 0
   136  000001                     ??_high_isr:
   137  000001                     
   138                           ; 1 bytes @ 0x0
   139  000001                     	ds	1
   140  000002                     ??_low_isr:
   141                           
   142                           ; 1 bytes @ 0x1
   143  000002                     	ds	4
   144  000006                     ??_i2c_idle:
   145  000006                     ?___lldiv:
   146                           	callstack 0
   147  000006                     ___lldiv@dividend:
   148                           	callstack 0
   149                           
   150                           ; 4 bytes @ 0x5
   151  000006                     	ds	1
   152  000007                     i2c_write@i2c_data:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x6
   156  000007                     	ds	3
   157  00000A                     ___lldiv@divisor:
   158                           	callstack 0
   159                           
   160                           ; 4 bytes @ 0x9
   161  00000A                     	ds	4
   162  00000E                     ___lldiv@quotient:
   163                           	callstack 0
   164                           
   165                           ; 4 bytes @ 0xD
   166  00000E                     	ds	4
   167  000012                     ___lldiv@counter:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x11
   171  000012                     	ds	1
   172  000013                     UART_Init@baudrate:
   173                           	callstack 0
   174  000013                     i2c_init@i2c_freq:
   175                           	callstack 0
   176                           
   177                           ; 4 bytes @ 0x12
   178  000013                     	ds	4
   179  000017                     ??_UART_Init:
   180  000017                     ??_i2c_init:
   181                           
   182                           ; 1 bytes @ 0x16
   183  000017                     	ds	8
   184  00001F                     UART_Init@baudrate_calculated:
   185                           	callstack 0
   186                           
   187                           ; 2 bytes @ 0x1E
   188  00001F                     	ds	2
   189  000021                     ??_main:
   190                           
   191                           ; 1 bytes @ 0x20
   192  000021                     	ds	2
   193                           
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 135 in file "main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   213 ;;      Params:         0       0       0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0
   215 ;;      Temps:          2       0       0       0       0       0       0
   216 ;;      Totals:         2       0       0       0       0       0       0
   217 ;;Total ram usage:        2 bytes
   218 ;; Hardware stack levels required when called: 4
   219 ;; This function calls:
   220 ;;		_UART_Init
   221 ;;		_i2c_init
   222 ;;		_i2c_repStart
   223 ;;		_i2c_start
   224 ;;		_i2c_stop
   225 ;;		_i2c_write
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  0001AC                     __ptext0:
   233                           	callstack 0
   234  0001AC                     _main:
   235                           	callstack 27
   236  0001AC                     
   237                           ;main.c: 138:     UART_Init(9600);
   238  0001AC  0E80               	movlw	128
   239  0001AE  6E13               	movwf	UART_Init@baudrate^0,c
   240  0001B0  0E25               	movlw	37
   241  0001B2  6E14               	movwf	(UART_Init@baudrate+1)^0,c
   242  0001B4  0E00               	movlw	0
   243  0001B6  6E15               	movwf	(UART_Init@baudrate+2)^0,c
   244  0001B8  0E00               	movlw	0
   245  0001BA  6E16               	movwf	(UART_Init@baudrate+3)^0,c
   246  0001BC  EC8C  F000         	call	_UART_Init	;wreg free
   247                           
   248                           ;main.c: 139:     i2c_init(100000);
   249  0001C0  0EA0               	movlw	160
   250  0001C2  6E13               	movwf	i2c_init@i2c_freq^0,c
   251  0001C4  0E86               	movlw	134
   252  0001C6  6E14               	movwf	(i2c_init@i2c_freq+1)^0,c
   253  0001C8  0E01               	movlw	1
   254  0001CA  6E15               	movwf	(i2c_init@i2c_freq+2)^0,c
   255  0001CC  0E00               	movlw	0
   256  0001CE  6E16               	movwf	(i2c_init@i2c_freq+3)^0,c
   257  0001D0  EC0C  F001         	call	_i2c_init	;wreg free
   258                           
   259                           ;main.c: 140:     i2c_write(0xD0);
   260  0001D4  0ED0               	movlw	208
   261  0001D6  EC58  F001         	call	_i2c_write
   262                           
   263                           ;main.c: 141:     i2c_write(0xFF);
   264  0001DA  0EFF               	movlw	255
   265  0001DC  EC58  F001         	call	_i2c_write
   266                           
   267                           ;main.c: 142:     i2c_stop();
   268  0001E0  EC91  F001         	call	_i2c_stop	;wreg free
   269  0001E4                     l87:
   270                           
   271                           ;main.c: 151:     {;main.c: 153:        i2c_start();
   272  0001E4  EC95  F001         	call	_i2c_start	;wreg free
   273                           
   274                           ;main.c: 154:        i2c_write((0xD0));
   275  0001E8  0ED0               	movlw	208
   276  0001EA  EC58  F001         	call	_i2c_write
   277                           
   278                           ;main.c: 155:        i2c_write(0x00);
   279  0001EE  0E00               	movlw	0
   280  0001F0  EC58  F001         	call	_i2c_write
   281                           
   282                           ;main.c: 157:        i2c_repStart();
   283  0001F4  EC99  F001         	call	_i2c_repStart	;wreg free
   284  0001F8                     
   285                           ;main.c: 159:        _delay((unsigned long)((1000)*(20000000/4000.0)));
   286  0001F8  0E1A               	movlw	26
   287  0001FA  6E22               	movwf	(??_main+1)^0,c
   288  0001FC  0E5E               	movlw	94
   289  0001FE  6E21               	movwf	??_main^0,c
   290  000200  0E6E               	movlw	110
   291  000202                     u277:
   292  000202  2EE8               	decfsz	wreg,f,c
   293  000204  D7FE               	bra	u277
   294  000206  2E21               	decfsz	??_main^0,f,c
   295  000208  D7FC               	bra	u277
   296  00020A  2E22               	decfsz	(??_main+1)^0,f,c
   297  00020C  D7FA               	bra	u277
   298  00020E  D000               	nop2	
   299  000210  EFF2  F000         	goto	l87
   300  000214  EF38  F000         	goto	start
   301  000218                     __end_of_main:
   302                           	callstack 0
   303                           
   304 ;; *************** function _i2c_write *****************
   305 ;; Defined at:
   306 ;;		line 103 in file "main.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;  i2c_data        1    wreg     unsigned char 
   309 ;; Auto vars:     Size  Location     Type
   310 ;;  i2c_data        1    6[COMRAM] unsigned char 
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      unsigned char 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   320 ;;      Params:         0       0       0       0       0       0       0
   321 ;;      Locals:         1       0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0
   323 ;;      Totals:         1       0       0       0       0       0       0
   324 ;;Total ram usage:        1 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; Hardware stack levels required when called: 3
   327 ;; This function calls:
   328 ;;		_i2c_idle
   329 ;; This function is called by:
   330 ;;		_main
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text1
   335  0002B0                     __ptext1:
   336                           	callstack 0
   337  0002B0                     _i2c_write:
   338                           	callstack 27
   339                           
   340                           ;incstack = 0
   341                           ;i2c_write@i2c_data stored from wreg
   342  0002B0  6E07               	movwf	i2c_write@i2c_data^0,c
   343  0002B2                     
   344                           ;main.c: 103: uint8_t i2c_write(uint8_t i2c_data);main.c: 104: {;main.c: 105:     i2c_id
      +                          le();
   345  0002B2  EC6D  F001         	call	_i2c_idle	;wreg free
   346  0002B6                     
   347                           ;main.c: 106:     SSPBUF = i2c_data;
   348  0002B6  C007  FFC9         	movff	i2c_write@i2c_data,4041	;volatile
   349  0002BA                     l76:
   350  0002BA  B0C7               	btfsc	199,0,c	;volatile
   351  0002BC  EF62  F001         	goto	u91
   352  0002C0  EF64  F001         	goto	u90
   353  0002C4                     u91:
   354  0002C4  EF5D  F001         	goto	l76
   355  0002C8                     u90:
   356  0002C8  B4C7               	btfsc	199,2,c	;volatile
   357  0002CA  EF69  F001         	goto	u101
   358  0002CE  EF6B  F001         	goto	u100
   359  0002D2                     u101:
   360  0002D2  EF5D  F001         	goto	l76
   361  0002D6                     u100:
   362  0002D6                     
   363                           ;main.c: 110:     return SSPCON2bits.ACKSTAT;;	Return value of _i2c_write is never used
   364  0002D6  50C5               	movf	197,w,c	;volatile
   365  0002D8  0012               	return		;funcret
   366  0002DA                     __end_of_i2c_write:
   367                           	callstack 0
   368                           
   369 ;; *************** function _i2c_stop *****************
   370 ;; Defined at:
   371 ;;		line 95 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   385 ;;      Params:         0       0       0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0       0       0
   388 ;;      Totals:         0       0       0       0       0       0       0
   389 ;;Total ram usage:        0 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; Hardware stack levels required when called: 3
   392 ;; This function calls:
   393 ;;		_i2c_idle
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text2
   400  000322                     __ptext2:
   401                           	callstack 0
   402  000322                     _i2c_stop:
   403                           	callstack 27
   404  000322                     
   405                           ;main.c: 97:     i2c_idle();
   406  000322  EC6D  F001         	call	_i2c_idle	;wreg free
   407  000326                     
   408                           ;main.c: 98:     SSPCON2bits.PEN = 1;
   409  000326  84C5               	bsf	197,2,c	;volatile
   410  000328  0012               	return		;funcret
   411  00032A                     __end_of_i2c_stop:
   412                           	callstack 0
   413                           
   414 ;; *************** function _i2c_start *****************
   415 ;; Defined at:
   416 ;;		line 88 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   430 ;;      Params:         0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used: 1
   436 ;; Hardware stack levels required when called: 3
   437 ;; This function calls:
   438 ;;		_i2c_idle
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text3
   445  00032A                     __ptext3:
   446                           	callstack 0
   447  00032A                     _i2c_start:
   448                           	callstack 27
   449  00032A                     
   450                           ;main.c: 90:     i2c_idle();
   451  00032A  EC6D  F001         	call	_i2c_idle	;wreg free
   452  00032E                     
   453                           ;main.c: 91:     SSPCON2bits.SEN = 1;
   454  00032E  80C5               	bsf	197,0,c	;volatile
   455  000330  0012               	return		;funcret
   456  000332                     __end_of_i2c_start:
   457                           	callstack 0
   458                           
   459 ;; *************** function _i2c_repStart *****************
   460 ;; Defined at:
   461 ;;		line 80 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   475 ;;      Params:         0       0       0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used: 1
   481 ;; Hardware stack levels required when called: 3
   482 ;; This function calls:
   483 ;;		_i2c_idle
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text4
   490  000332                     __ptext4:
   491                           	callstack 0
   492  000332                     _i2c_repStart:
   493                           	callstack 27
   494  000332                     
   495                           ;main.c: 82:     i2c_idle();
   496  000332  EC6D  F001         	call	_i2c_idle	;wreg free
   497  000336                     
   498                           ;main.c: 83:     SSPCON2bits.RSEN = 1;
   499  000336  82C5               	bsf	197,1,c	;volatile
   500  000338  0012               	return		;funcret
   501  00033A                     __end_of_i2c_repStart:
   502                           	callstack 0
   503                           
   504 ;; *************** function _i2c_idle *****************
   505 ;; Defined at:
   506 ;;		line 72 in file "main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   520 ;;      Params:         0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0
   522 ;;      Temps:          1       0       0       0       0       0       0
   523 ;;      Totals:         1       0       0       0       0       0       0
   524 ;;Total ram usage:        1 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; Hardware stack levels required when called: 2
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_i2c_repStart
   531 ;;		_i2c_start
   532 ;;		_i2c_stop
   533 ;;		_i2c_write
   534 ;;		_i2c_read
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text5
   539  0002DA                     __ptext5:
   540                           	callstack 0
   541  0002DA                     _i2c_idle:
   542                           	callstack 27
   543  0002DA                     l795:
   544  0002DA  CFC5 F006          	movff	4037,??_i2c_idle	;volatile
   545  0002DE  0E1F               	movlw	31
   546  0002E0  1606               	andwf	??_i2c_idle^0,f,c
   547  0002E2  A4D8               	btfss	status,2,c
   548  0002E4  EF76  F001         	goto	u11
   549  0002E8  EF78  F001         	goto	u10
   550  0002EC                     u11:
   551  0002EC  EF6D  F001         	goto	l795
   552  0002F0                     u10:
   553  0002F0  B4C7               	btfsc	199,2,c	;volatile
   554  0002F2  EF7D  F001         	goto	u21
   555  0002F6  EF7F  F001         	goto	u20
   556  0002FA                     u21:
   557  0002FA  EF6D  F001         	goto	l795
   558  0002FE                     u20:
   559  0002FE  0012               	return		;funcret
   560  000300                     __end_of_i2c_idle:
   561                           	callstack 0
   562                           
   563 ;; *************** function _i2c_init *****************
   564 ;; Defined at:
   565 ;;		line 56 in file "main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  i2c_freq        4   18[COMRAM] unsigned long 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   579 ;;      Params:         4       0       0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0
   581 ;;      Temps:          4       0       0       0       0       0       0
   582 ;;      Totals:         8       0       0       0       0       0       0
   583 ;;Total ram usage:        8 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; Hardware stack levels required when called: 3
   586 ;; This function calls:
   587 ;;		___lldiv
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text6
   594  000218                     __ptext6:
   595                           	callstack 0
   596  000218                     _i2c_init:
   597                           	callstack 27
   598  000218                     
   599                           ;main.c: 56: void i2c_init(unsigned long int i2c_freq);main.c: 57: {;main.c: 59:     SSP
      +                          CON1 = 0b00101000;
   600  000218  0E28               	movlw	40
   601  00021A  6EC6               	movwf	198,c	;volatile
   602                           
   603                           ;main.c: 60:     SSPCON2 = 0;
   604  00021C  0E00               	movlw	0
   605  00021E  6EC5               	movwf	197,c	;volatile
   606  000220                     
   607                           ;main.c: 63:     SSPADD = (20000000 / (4 * i2c_freq)) - 1;
   608  000220  0E00               	movlw	0
   609  000222  6E06               	movwf	___lldiv@dividend^0,c
   610  000224  0E2D               	movlw	45
   611  000226  6E07               	movwf	(___lldiv@dividend+1)^0,c
   612  000228  0E31               	movlw	49
   613  00022A  6E08               	movwf	(___lldiv@dividend+2)^0,c
   614  00022C  0E01               	movlw	1
   615  00022E  6E09               	movwf	(___lldiv@dividend+3)^0,c
   616  000230  C013  F017         	movff	i2c_init@i2c_freq,??_i2c_init
   617  000234  C014  F018         	movff	i2c_init@i2c_freq+1,??_i2c_init+1
   618  000238  C015  F019         	movff	i2c_init@i2c_freq+2,??_i2c_init+2
   619  00023C  C016  F01A         	movff	i2c_init@i2c_freq+3,??_i2c_init+3
   620  000240  0E02               	movlw	2
   621  000242                     u265:
   622  000242  90D8               	bcf	status,0,c
   623  000244  3617               	rlcf	??_i2c_init^0,f,c
   624  000246  3618               	rlcf	(??_i2c_init+1)^0,f,c
   625  000248  3619               	rlcf	(??_i2c_init+2)^0,f,c
   626  00024A  361A               	rlcf	(??_i2c_init+3)^0,f,c
   627  00024C  2EE8               	decfsz	wreg,f,c
   628  00024E  EF21  F001         	goto	u265
   629  000252  C017  F00A         	movff	??_i2c_init,___lldiv@divisor
   630  000256  C018  F00B         	movff	??_i2c_init+1,___lldiv@divisor+1
   631  00025A  C019  F00C         	movff	??_i2c_init+2,___lldiv@divisor+2
   632  00025E  C01A  F00D         	movff	??_i2c_init+3,___lldiv@divisor+3
   633  000262  EC3A  F000         	call	___lldiv	;wreg free
   634  000266  0406               	decf	?___lldiv^0,w,c
   635  000268  6EC8               	movwf	200,c	;volatile
   636  00026A                     
   637                           ;main.c: 65:     SSPSTAT = 0x00;
   638  00026A  0E00               	movlw	0
   639  00026C  6EC7               	movwf	199,c	;volatile
   640  00026E                     
   641                           ;main.c: 67:     TRISCbits.RC3 = 1;
   642  00026E  8694               	bsf	148,3,c	;volatile
   643  000270                     
   644                           ;main.c: 68:     TRISCbits.RC4 = 1;
   645  000270  8894               	bsf	148,4,c	;volatile
   646  000272  0012               	return		;funcret
   647  000274                     __end_of_i2c_init:
   648                           	callstack 0
   649                           
   650 ;; *************** function _UART_Init *****************
   651 ;; Defined at:
   652 ;;		line 34 in file "main.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  baudrate        4   18[COMRAM] const unsigned long 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  baudrate_cal    2   30[COMRAM] unsigned short 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   666 ;;      Params:         4       0       0       0       0       0       0
   667 ;;      Locals:         2       0       0       0       0       0       0
   668 ;;      Temps:          8       0       0       0       0       0       0
   669 ;;      Totals:        14       0       0       0       0       0       0
   670 ;;Total ram usage:       14 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; Hardware stack levels required when called: 3
   673 ;; This function calls:
   674 ;;		___lldiv
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text7
   681  000118                     __ptext7:
   682                           	callstack 0
   683  000118                     _UART_Init:
   684                           	callstack 27
   685  000118                     
   686                           ;main.c: 34: void UART_Init(const uint32_t baudrate);main.c: 35: {;main.c: 37:  uint16_t
      +                           baudrate_calculated = (20000000 - baudrate * 4) /(baudrate * 4);
   687  000118  C013  F017         	movff	UART_Init@baudrate,??_UART_Init
   688  00011C  C014  F018         	movff	UART_Init@baudrate+1,??_UART_Init+1
   689  000120  C015  F019         	movff	UART_Init@baudrate+2,??_UART_Init+2
   690  000124  C016  F01A         	movff	UART_Init@baudrate+3,??_UART_Init+3
   691  000128  0E02               	movlw	2
   692  00012A                     u245:
   693  00012A  90D8               	bcf	status,0,c
   694  00012C  3617               	rlcf	??_UART_Init^0,f,c
   695  00012E  3618               	rlcf	(??_UART_Init+1)^0,f,c
   696  000130  3619               	rlcf	(??_UART_Init+2)^0,f,c
   697  000132  361A               	rlcf	(??_UART_Init+3)^0,f,c
   698  000134  2EE8               	decfsz	wreg,f,c
   699  000136  EF95  F000         	goto	u245
   700  00013A  5017               	movf	??_UART_Init^0,w,c
   701  00013C  0800               	sublw	0
   702  00013E  6E06               	movwf	___lldiv@dividend^0,c
   703  000140  0E2D               	movlw	45
   704  000142  5418               	subfwb	(??_UART_Init+1)^0,w,c
   705  000144  6E07               	movwf	(___lldiv@dividend+1)^0,c
   706  000146  0E31               	movlw	49
   707  000148  5419               	subfwb	(??_UART_Init+2)^0,w,c
   708  00014A  6E08               	movwf	(___lldiv@dividend+2)^0,c
   709  00014C  0E01               	movlw	1
   710  00014E  541A               	subfwb	(??_UART_Init+3)^0,w,c
   711  000150  6E09               	movwf	(___lldiv@dividend+3)^0,c
   712  000152  C013  F01B         	movff	UART_Init@baudrate,??_UART_Init+4
   713  000156  C014  F01C         	movff	UART_Init@baudrate+1,??_UART_Init+5
   714  00015A  C015  F01D         	movff	UART_Init@baudrate+2,??_UART_Init+6
   715  00015E  C016  F01E         	movff	UART_Init@baudrate+3,??_UART_Init+7
   716  000162  0E02               	movlw	2
   717  000164                     u255:
   718  000164  90D8               	bcf	status,0,c
   719  000166  361B               	rlcf	(??_UART_Init+4)^0,f,c
   720  000168  361C               	rlcf	(??_UART_Init+5)^0,f,c
   721  00016A  361D               	rlcf	(??_UART_Init+6)^0,f,c
   722  00016C  361E               	rlcf	(??_UART_Init+7)^0,f,c
   723  00016E  2EE8               	decfsz	wreg,f,c
   724  000170  EFB2  F000         	goto	u255
   725  000174  C01B  F00A         	movff	??_UART_Init+4,___lldiv@divisor
   726  000178  C01C  F00B         	movff	??_UART_Init+5,___lldiv@divisor+1
   727  00017C  C01D  F00C         	movff	??_UART_Init+6,___lldiv@divisor+2
   728  000180  C01E  F00D         	movff	??_UART_Init+7,___lldiv@divisor+3
   729  000184  EC3A  F000         	call	___lldiv	;wreg free
   730  000188  C006  F01F         	movff	?___lldiv,UART_Init@baudrate_calculated
   731  00018C  C007  F020         	movff	?___lldiv+1,UART_Init@baudrate_calculated+1
   732  000190                     
   733                           ;main.c: 39:     TXSTAbits.BRGH = 1;
   734  000190  84AC               	bsf	172,2,c	;volatile
   735  000192                     
   736                           ;main.c: 40:     BAUDCONbits.BRG16 = 1;
   737  000192  86B8               	bsf	184,3,c	;volatile
   738  000194                     
   739                           ;main.c: 42:     SPBRG = (baudrate_calculated & 0x00FF);
   740  000194  C01F  FFAF         	movff	UART_Init@baudrate_calculated,4015	;volatile
   741  000198                     
   742                           ;main.c: 43:     SPBRGH = (baudrate_calculated & 0xFF00) >> 8;
   743  000198  5020               	movf	(UART_Init@baudrate_calculated+1)^0,w,c
   744  00019A  6EB0               	movwf	176,c	;volatile
   745  00019C                     
   746                           ;main.c: 45:     TXSTAbits.SYNC = 0;
   747  00019C  98AC               	bcf	172,4,c	;volatile
   748  00019E                     
   749                           ;main.c: 46:     TXSTAbits.TX9 = 0;
   750  00019E  9CAC               	bcf	172,6,c	;volatile
   751  0001A0                     
   752                           ;main.c: 47:     RCSTAbits.SPEN = 1;
   753  0001A0  8EAB               	bsf	171,7,c	;volatile
   754  0001A2                     
   755                           ;main.c: 48:     TRISCbits.RC6 = 1;
   756  0001A2  8C94               	bsf	148,6,c	;volatile
   757  0001A4                     
   758                           ;main.c: 49:     TRISCbits.RC7 = 1;
   759  0001A4  8E94               	bsf	148,7,c	;volatile
   760  0001A6                     
   761                           ;main.c: 50:     RCSTAbits.CREN = 1;
   762  0001A6  88AB               	bsf	171,4,c	;volatile
   763  0001A8                     
   764                           ;main.c: 51:     TXSTAbits.TXEN = 1;
   765  0001A8  8AAC               	bsf	172,5,c	;volatile
   766  0001AA  0012               	return		;funcret
   767  0001AC                     __end_of_UART_Init:
   768                           	callstack 0
   769                           
   770 ;; *************** function ___lldiv *****************
   771 ;; Defined at:
   772 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  dividend        4    5[COMRAM] unsigned long 
   775 ;;  divisor         4    9[COMRAM] unsigned long 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  quotient        4   13[COMRAM] unsigned long 
   778 ;;  counter         1   17[COMRAM] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  4    5[COMRAM] unsigned long 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   788 ;;      Params:         8       0       0       0       0       0       0
   789 ;;      Locals:         5       0       0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0
   791 ;;      Totals:        13       0       0       0       0       0       0
   792 ;;Total ram usage:       13 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 2
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_UART_Init
   799 ;;		_i2c_init
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text8
   804  000074                     __ptext8:
   805                           	callstack 0
   806  000074                     ___lldiv:
   807                           	callstack 27
   808  000074  0E00               	movlw	0
   809  000076  6E0E               	movwf	___lldiv@quotient^0,c
   810  000078  0E00               	movlw	0
   811  00007A  6E0F               	movwf	(___lldiv@quotient+1)^0,c
   812  00007C  0E00               	movlw	0
   813  00007E  6E10               	movwf	(___lldiv@quotient+2)^0,c
   814  000080  0E00               	movlw	0
   815  000082  6E11               	movwf	(___lldiv@quotient+3)^0,c
   816  000084  500A               	movf	___lldiv@divisor^0,w,c
   817  000086  100B               	iorwf	(___lldiv@divisor+1)^0,w,c
   818  000088  100C               	iorwf	(___lldiv@divisor+2)^0,w,c
   819  00008A  100D               	iorwf	(___lldiv@divisor+3)^0,w,c
   820  00008C  B4D8               	btfsc	status,2,c
   821  00008E  EF4B  F000         	goto	u211
   822  000092  EF4D  F000         	goto	u210
   823  000096                     u211:
   824  000096  EF83  F000         	goto	l147
   825  00009A                     u210:
   826  00009A  0E01               	movlw	1
   827  00009C  6E12               	movwf	___lldiv@counter^0,c
   828  00009E  EF57  F000         	goto	l937
   829  0000A2                     l935:
   830  0000A2  90D8               	bcf	status,0,c
   831  0000A4  360A               	rlcf	___lldiv@divisor^0,f,c
   832  0000A6  360B               	rlcf	(___lldiv@divisor+1)^0,f,c
   833  0000A8  360C               	rlcf	(___lldiv@divisor+2)^0,f,c
   834  0000AA  360D               	rlcf	(___lldiv@divisor+3)^0,f,c
   835  0000AC  2A12               	incf	___lldiv@counter^0,f,c
   836  0000AE                     l937:
   837  0000AE  AE0D               	btfss	(___lldiv@divisor+3)^0,7,c
   838  0000B0  EF5C  F000         	goto	u221
   839  0000B4  EF5E  F000         	goto	u220
   840  0000B8                     u221:
   841  0000B8  EF51  F000         	goto	l935
   842  0000BC                     u220:
   843  0000BC                     l939:
   844  0000BC  90D8               	bcf	status,0,c
   845  0000BE  360E               	rlcf	___lldiv@quotient^0,f,c
   846  0000C0  360F               	rlcf	(___lldiv@quotient+1)^0,f,c
   847  0000C2  3610               	rlcf	(___lldiv@quotient+2)^0,f,c
   848  0000C4  3611               	rlcf	(___lldiv@quotient+3)^0,f,c
   849  0000C6  500A               	movf	___lldiv@divisor^0,w,c
   850  0000C8  5C06               	subwf	___lldiv@dividend^0,w,c
   851  0000CA  500B               	movf	(___lldiv@divisor+1)^0,w,c
   852  0000CC  5807               	subwfb	(___lldiv@dividend+1)^0,w,c
   853  0000CE  500C               	movf	(___lldiv@divisor+2)^0,w,c
   854  0000D0  5808               	subwfb	(___lldiv@dividend+2)^0,w,c
   855  0000D2  500D               	movf	(___lldiv@divisor+3)^0,w,c
   856  0000D4  5809               	subwfb	(___lldiv@dividend+3)^0,w,c
   857  0000D6  A0D8               	btfss	status,0,c
   858  0000D8  EF70  F000         	goto	u231
   859  0000DC  EF72  F000         	goto	u230
   860  0000E0                     u231:
   861  0000E0  EF7B  F000         	goto	l947
   862  0000E4                     u230:
   863  0000E4  500A               	movf	___lldiv@divisor^0,w,c
   864  0000E6  5E06               	subwf	___lldiv@dividend^0,f,c
   865  0000E8  500B               	movf	(___lldiv@divisor+1)^0,w,c
   866  0000EA  5A07               	subwfb	(___lldiv@dividend+1)^0,f,c
   867  0000EC  500C               	movf	(___lldiv@divisor+2)^0,w,c
   868  0000EE  5A08               	subwfb	(___lldiv@dividend+2)^0,f,c
   869  0000F0  500D               	movf	(___lldiv@divisor+3)^0,w,c
   870  0000F2  5A09               	subwfb	(___lldiv@dividend+3)^0,f,c
   871  0000F4  800E               	bsf	___lldiv@quotient^0,0,c
   872  0000F6                     l947:
   873  0000F6  90D8               	bcf	status,0,c
   874  0000F8  320D               	rrcf	(___lldiv@divisor+3)^0,f,c
   875  0000FA  320C               	rrcf	(___lldiv@divisor+2)^0,f,c
   876  0000FC  320B               	rrcf	(___lldiv@divisor+1)^0,f,c
   877  0000FE  320A               	rrcf	___lldiv@divisor^0,f,c
   878  000100  2E12               	decfsz	___lldiv@counter^0,f,c
   879  000102  EF5E  F000         	goto	l939
   880  000106                     l147:
   881  000106  C00E  F006         	movff	___lldiv@quotient,?___lldiv
   882  00010A  C00F  F007         	movff	___lldiv@quotient+1,?___lldiv+1
   883  00010E  C010  F008         	movff	___lldiv@quotient+2,?___lldiv+2
   884  000112  C011  F009         	movff	___lldiv@quotient+3,?___lldiv+3
   885  000116  0012               	return		;funcret
   886  000118                     __end_of___lldiv:
   887                           	callstack 0
   888                           
   889 ;; *************** function _low_isr *****************
   890 ;; Defined at:
   891 ;;		line 198 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   905 ;;      Params:         0       0       0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0
   907 ;;      Temps:          4       0       0       0       0       0       0
   908 ;;      Totals:         4       0       0       0       0       0       0
   909 ;;Total ram usage:        4 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		Interrupt level 1
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	intcodelo
   920  000018                     __pintcodelo:
   921                           	callstack 0
   922  000018                     _low_isr:
   923                           	callstack 27
   924                           
   925                           ;incstack = 0
   926  000018  8025               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   927  00001A  CFD8 F003          	movff	status,??_low_isr+1
   928  00001E  CFE8 F004          	movff	wreg,??_low_isr+2
   929  000022  CFE0 F005          	movff	bsr,??_low_isr+3
   930  000026                     
   931                           ;main.c: 200:     INTCONbits.GIEL = 0;
   932  000026  9CF2               	bcf	242,6,c	;volatile
   933                           
   934                           ;main.c: 202:     if (PIR1bits.RCIF == 1)
   935  000028  AA9E               	btfss	158,5,c	;volatile
   936  00002A  EF19  F000         	goto	i1u18_21
   937  00002E  EF1B  F000         	goto	i1u18_20
   938  000032                     i1u18_21:
   939  000032  EF2F  F000         	goto	i1l923
   940  000036                     i1u18_20:
   941  000036                     
   942                           ;main.c: 203:     {;main.c: 204:         LATBbits.LATB6 = ~LATBbits.LATB6;
   943  000036  BC8A               	btfsc	138,6,c	;volatile
   944  000038  EF20  F000         	goto	i1u19_21
   945  00003C  EF23  F000         	goto	i1u19_20
   946  000040                     i1u19_21:
   947  000040  0E01               	movlw	1
   948  000042  EF24  F000         	goto	i1u19_26
   949  000046                     i1u19_20:
   950  000046  0E00               	movlw	0
   951  000048                     i1u19_26:
   952  000048  0AFF               	xorlw	255
   953  00004A  6E02               	movwf	??_low_isr^0,c
   954  00004C  3A02               	swapf	??_low_isr^0,f,c
   955  00004E  4602               	rlncf	??_low_isr^0,f,c
   956  000050  4602               	rlncf	??_low_isr^0,f,c
   957  000052  508A               	movf	138,w,c	;volatile
   958  000054  1802               	xorwf	??_low_isr^0,w,c
   959  000056  0BBF               	andlw	-65
   960  000058  1802               	xorwf	??_low_isr^0,w,c
   961  00005A  6E8A               	movwf	138,c	;volatile
   962  00005C                     
   963                           ;main.c: 206:         PIR1bits.RCIF = 0;
   964  00005C  9A9E               	bcf	158,5,c	;volatile
   965  00005E                     i1l923:
   966                           
   967                           ;main.c: 209:     INTCONbits.GIEL = 1;
   968  00005E  8CF2               	bsf	242,6,c	;volatile
   969  000060  C005  FFE0         	movff	??_low_isr+3,bsr
   970  000064  C004  FFE8         	movff	??_low_isr+2,wreg
   971  000068  C003  FFD8         	movff	??_low_isr+1,status
   972  00006C  9025               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   973  00006E  0010               	retfie	
   974  000070                     __end_of_low_isr:
   975                           	callstack 0
   976                           
   977 ;; *************** function _high_isr *****************
   978 ;; Defined at:
   979 ;;		line 183 in file "main.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   993 ;;      Params:         0       0       0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0       0       0
   995 ;;      Temps:          1       0       0       0       0       0       0
   996 ;;      Totals:         1       0       0       0       0       0       0
   997 ;;Total ram usage:        1 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		Interrupt level 2
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	intcode
  1007  000008                     __pintcode:
  1008                           	callstack 0
  1009  000008                     _high_isr:
  1010                           	callstack 27
  1011                           
  1012                           ;incstack = 0
  1013  000008  8225               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1014  00000A  ED3A  F001         	call	int_func,f	;refresh shadow registers
  1015                           
  1016                           	psect	intcode_body
  1017  000274                     __pintcode_body:
  1018                           	callstack 27
  1019  000274                     int_func:
  1020                           	callstack 27
  1021  000274  0006               	pop		; remove dummy address from shadow register refresh
  1022  000276                     
  1023                           ;main.c: 185:     INTCONbits.GIEH = 0;
  1024  000276  9EF2               	bcf	242,7,c	;volatile
  1025                           
  1026                           ;main.c: 187:     if (PIR1bits.TXIF == 1)
  1027  000278  A89E               	btfss	158,4,c	;volatile
  1028  00027A  EF41  F001         	goto	i2u16_41
  1029  00027E  EF43  F001         	goto	i2u16_40
  1030  000282                     i2u16_41:
  1031  000282  EF55  F001         	goto	i2l915
  1032  000286                     i2u16_40:
  1033  000286                     
  1034                           ;main.c: 188:     {;main.c: 190:        LATBbits.LATB7 = ~LATBbits.LATB7;
  1035  000286  BE8A               	btfsc	138,7,c	;volatile
  1036  000288  EF48  F001         	goto	i2u17_41
  1037  00028C  EF4B  F001         	goto	i2u17_40
  1038  000290                     i2u17_41:
  1039  000290  0E01               	movlw	1
  1040  000292  EF4C  F001         	goto	i2u17_46
  1041  000296                     i2u17_40:
  1042  000296  0E00               	movlw	0
  1043  000298                     i2u17_46:
  1044  000298  0AFF               	xorlw	255
  1045  00029A  6E01               	movwf	??_high_isr^0,c
  1046  00029C  3201               	rrcf	??_high_isr^0,f,c
  1047  00029E  3201               	rrcf	??_high_isr^0,f,c
  1048  0002A0  508A               	movf	138,w,c	;volatile
  1049  0002A2  1801               	xorwf	??_high_isr^0,w,c
  1050  0002A4  0B7F               	andlw	-129
  1051  0002A6  1801               	xorwf	??_high_isr^0,w,c
  1052  0002A8  6E8A               	movwf	138,c	;volatile
  1053  0002AA                     i2l915:
  1054                           
  1055                           ;main.c: 193:     INTCONbits.GIEH = 1;
  1056  0002AA  8EF2               	bsf	242,7,c	;volatile
  1057  0002AC  9225               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1058  0002AE  0011               	retfie		f
  1059  0002B0                     __end_of_high_isr:
  1060                           	callstack 0
  1061  0000                     
  1062                           	psect	rparam
  1063  0000                     
  1064                           	psect	temp
  1065  000025                     btemp:
  1066                           	callstack 0
  1067  000025                     	ds	1
  1068  0000                     int$flags	set	btemp
  1069  0000                     wtemp8	set	btemp+1
  1070  0000                     ttemp5	set	btemp+1
  1071  0000                     ttemp6	set	btemp+4
  1072  0000                     ttemp7	set	btemp+8
  1073                           
  1074                           	psect	idloc
  1075                           
  1076                           ;Config register IDLOC0 @ 0x200000
  1077                           ;	unspecified, using default values
  1078  200000                     	org	2097152
  1079  200000  FF                 	db	255
  1080                           
  1081                           ;Config register IDLOC1 @ 0x200001
  1082                           ;	unspecified, using default values
  1083  200001                     	org	2097153
  1084  200001  FF                 	db	255
  1085                           
  1086                           ;Config register IDLOC2 @ 0x200002
  1087                           ;	unspecified, using default values
  1088  200002                     	org	2097154
  1089  200002  FF                 	db	255
  1090                           
  1091                           ;Config register IDLOC3 @ 0x200003
  1092                           ;	unspecified, using default values
  1093  200003                     	org	2097155
  1094  200003  FF                 	db	255
  1095                           
  1096                           ;Config register IDLOC4 @ 0x200004
  1097                           ;	unspecified, using default values
  1098  200004                     	org	2097156
  1099  200004  FF                 	db	255
  1100                           
  1101                           ;Config register IDLOC5 @ 0x200005
  1102                           ;	unspecified, using default values
  1103  200005                     	org	2097157
  1104  200005  FF                 	db	255
  1105                           
  1106                           ;Config register IDLOC6 @ 0x200006
  1107                           ;	unspecified, using default values
  1108  200006                     	org	2097158
  1109  200006  FF                 	db	255
  1110                           
  1111                           ;Config register IDLOC7 @ 0x200007
  1112                           ;	unspecified, using default values
  1113  200007                     	org	2097159
  1114  200007  FF                 	db	255
  1115                           
  1116                           	psect	config
  1117                           
  1118                           ; Padding undefined space
  1119  300000                     	org	3145728
  1120  300000  FF                 	db	255
  1121                           
  1122                           ;Config register CONFIG1H @ 0x300001
  1123                           ;	Oscillator Selection bits
  1124                           ;	OSC = HS, HS oscillator
  1125                           ;	Fail-Safe Clock Monitor Enable bit
  1126                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1127                           ;	Internal/External Oscillator Switchover bit
  1128                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1129  300001                     	org	3145729
  1130  300001  02                 	db	2
  1131                           
  1132                           ;Config register CONFIG2L @ 0x300002
  1133                           ;	Power-up Timer Enable bit
  1134                           ;	PWRT = OFF, PWRT disabled
  1135                           ;	Brown-out Reset Enable bits
  1136                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1137                           ;	Brown Out Reset Voltage bits
  1138                           ;	BORV = 3, Minimum setting
  1139  300002                     	org	3145730
  1140  300002  19                 	db	25
  1141                           
  1142                           ;Config register CONFIG2H @ 0x300003
  1143                           ;	Watchdog Timer Enable bit
  1144                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1145                           ;	Watchdog Timer Postscale Select bits
  1146                           ;	WDTPS = 32768, 1:32768
  1147  300003                     	org	3145731
  1148  300003  1E                 	db	30
  1149                           
  1150                           ; Padding undefined space
  1151  300004                     	org	3145732
  1152  300004  FF                 	db	255
  1153                           
  1154                           ;Config register CONFIG3H @ 0x300005
  1155                           ;	CCP2 MUX bit
  1156                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1157                           ;	PORTB A/D Enable bit
  1158                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1159                           ;	Low-Power Timer1 Oscillator Enable bit
  1160                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1161                           ;	MCLR Pin Enable bit
  1162                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1163  300005                     	org	3145733
  1164  300005  03                 	db	3
  1165                           
  1166                           ;Config register CONFIG4L @ 0x300006
  1167                           ;	Stack Full/Underflow Reset Enable bit
  1168                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1169                           ;	Single-Supply ICSP Enable bit
  1170                           ;	LVP = ON, Single-Supply ICSP enabled
  1171                           ;	Extended Instruction Set Enable bit
  1172                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1173                           ;	Background Debugger Enable bit
  1174                           ;	DEBUG = 0x1, unprogrammed default
  1175  300006                     	org	3145734
  1176  300006  85                 	db	133
  1177                           
  1178                           ; Padding undefined space
  1179  300007                     	org	3145735
  1180  300007  FF                 	db	255
  1181                           
  1182                           ;Config register CONFIG5L @ 0x300008
  1183                           ;	Code Protection bit
  1184                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1185                           ;	Code Protection bit
  1186                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1187                           ;	Code Protection bit
  1188                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1189                           ;	Code Protection bit
  1190                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1191  300008                     	org	3145736
  1192  300008  0F                 	db	15
  1193                           
  1194                           ;Config register CONFIG5H @ 0x300009
  1195                           ;	Boot Block Code Protection bit
  1196                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1197                           ;	Data EEPROM Code Protection bit
  1198                           ;	CPD = OFF, Data EEPROM not code-protected
  1199  300009                     	org	3145737
  1200  300009  C0                 	db	192
  1201                           
  1202                           ;Config register CONFIG6L @ 0x30000A
  1203                           ;	Write Protection bit
  1204                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1205                           ;	Write Protection bit
  1206                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1207                           ;	Write Protection bit
  1208                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1209                           ;	Write Protection bit
  1210                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1211  30000A                     	org	3145738
  1212  30000A  0F                 	db	15
  1213                           
  1214                           ;Config register CONFIG6H @ 0x30000B
  1215                           ;	Configuration Register Write Protection bit
  1216                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1217                           ;	Boot Block Write Protection bit
  1218                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1219                           ;	Data EEPROM Write Protection bit
  1220                           ;	WRTD = OFF, Data EEPROM not write-protected
  1221  30000B                     	org	3145739
  1222  30000B  E0                 	db	224
  1223                           
  1224                           ;Config register CONFIG7L @ 0x30000C
  1225                           ;	Table Read Protection bit
  1226                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1227                           ;	Table Read Protection bit
  1228                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1229                           ;	Table Read Protection bit
  1230                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1231                           ;	Table Read Protection bit
  1232                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1233  30000C                     	org	3145740
  1234  30000C  0F                 	db	15
  1235                           
  1236                           ;Config register CONFIG7H @ 0x30000D
  1237                           ;	Boot Block Table Read Protection bit
  1238                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1239  30000D                     	org	3145741
  1240  30000D  40                 	db	64
  1241                           tosu	equ	0xFFF
  1242                           tosh	equ	0xFFE
  1243                           tosl	equ	0xFFD
  1244                           stkptr	equ	0xFFC
  1245                           pclatu	equ	0xFFB
  1246                           pclath	equ	0xFFA
  1247                           pcl	equ	0xFF9
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           prodh	equ	0xFF4
  1253                           prodl	equ	0xFF3
  1254                           indf0	equ	0xFEF
  1255                           postinc0	equ	0xFEE
  1256                           postdec0	equ	0xFED
  1257                           preinc0	equ	0xFEC
  1258                           plusw0	equ	0xFEB
  1259                           fsr0h	equ	0xFEA
  1260                           fsr0l	equ	0xFE9
  1261                           wreg	equ	0xFE8
  1262                           indf1	equ	0xFE7
  1263                           postinc1	equ	0xFE6
  1264                           postdec1	equ	0xFE5
  1265                           preinc1	equ	0xFE4
  1266                           plusw1	equ	0xFE3
  1267                           fsr1h	equ	0xFE2
  1268                           fsr1l	equ	0xFE1
  1269                           bsr	equ	0xFE0
  1270                           indf2	equ	0xFDF
  1271                           postinc2	equ	0xFDE
  1272                           postdec2	equ	0xFDD
  1273                           preinc2	equ	0xFDC
  1274                           plusw2	equ	0xFDB
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         258
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     34      36
    BANK0           128      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_Init
    _i2c_write->_i2c_idle
    _i2c_stop->_i2c_idle
    _i2c_start->_i2c_idle
    _i2c_repStart->_i2c_idle
    _i2c_init->___lldiv
    _UART_Init->___lldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1210
                                             32 COMRAM     2     2      0
                          _UART_Init
                           _i2c_init
                       _i2c_repStart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _i2c_write                                            1     1      0      15
                                              6 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (1) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (1) _i2c_repStart                                         0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_idle                                             1     1      0       0
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             8     4      4     564
                                             18 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     631
                                             18 COMRAM    14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              5 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                              4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv
   _i2c_init
     ___lldiv
   _i2c_repStart
     _i2c_idle
   _i2c_start
     _i2c_idle
   _i2c_stop
     _i2c_idle
   _i2c_write
     _i2c_idle

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     22      24       1       28.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124      15        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Oct 16 22:35:13 2021

                 _SSPSTATbits 000FC7                            l70 0330                            l55 01AA  
                          l64 02FE                            l73 0328                            l58 0272  
                          l67 0338                            l76 02BA                            l79 02D8  
                          l87 01E4                            u10 02F0                            u11 02EC  
                          u20 02FE                            u21 02FA                            u90 02C8  
                          u91 02C4                            bsr 000FE0                           l154 0116  
                         l147 0106                           l931 0084                           l941 00C6  
                         l933 009A                           l861 032E                           l943 00E4  
                         l935 00A2                           l951 0118                           l855 0332  
                         l863 0322                           l871 02C8                           l945 00F4  
                         l937 00AE                           l929 0074                           l961 019C  
                         l953 0190                           l793 02DA                           l857 0336  
                         l865 0326                           l873 02D6                           l947 00F6  
                         l939 00BC                           l971 01A6                           l963 019E  
                         l955 0192                           l795 02DA                           l859 032A  
                         l867 02B2                           l949 0100                           l973 01A8  
                         l965 01A0                           l957 0194                           l981 026E  
                         l797 02F0                           l869 02B6                           l967 01A2  
                         l959 0198                           l983 0270                           l975 0218  
                         l969 01A4                           l977 0220                           l985 01AC  
                         l979 026A                           l987 01F8                           u100 02D6  
                         u101 02D2                           u210 009A                           u211 0096  
                         u220 00BC                           u221 00B8                           u230 00E4  
                         u231 00E0                           u245 012A                           u255 0164  
                         u265 0242                           u277 0202                           wreg 000FE8  
                        _TRMT 007D61                          _main 01AC                          fsr1h 000FE2  
                        fsr1l 000FE1                          btemp 0025                          start 0070  
               ?_i2c_repStart 0001                  ___param_bank 000000                         ?_main 0001  
                       _ACKDT 007E2D               __end_of___lldiv 0118                         i1l114 0060  
                       i2l108 02AC                         i1l921 005C                         i1l923 005E  
                       i1l917 0026                         i1l919 0036                         i2l911 0276  
                       i2l913 0286                         i2l915 02AA                         _SPBRG 000FAF  
                       _TXREG 000FAD            __size_of_UART_Init 0094               __end_of_low_isr 0070  
                       ttemp5 0026                         ttemp6 0029                         ttemp7 002D  
                       status 000FD8                         wtemp8 0026                ??_i2c_repStart 0007  
             __initialization 0300                  __end_of_main 0218              __end_of_i2c_idle 0300  
            __end_of_i2c_init 0274              __end_of_i2c_stop 032A                        ??_main 0021  
               __activetblptr 000000                        _SPBRGH 000FB0                        _SSPADD 000FC8  
                      _SSPBUF 000FC9            __size_of_i2c_start 0008            __size_of_i2c_write 002A  
           __end_of_UART_Init 01AC              __end_of_high_isr 02B0                     ??___lldiv 000E  
                      clear_0 0308                        isa$std 000001                     ??_low_isr 0002  
                  __accesstop 0080       __end_of__initialization 0318                 ___rparam_used 000001  
              __pcstackCOMRAM 0001             __end_of_i2c_start 0332             __end_of_i2c_write 02DA  
        __end_of_i2c_repStart 033A                    __pbssBANK1 0100                     ?_i2c_idle 0001  
                   ?_i2c_init 0013                     ?_i2c_stop 0001  UART_Init@baudrate_calculated 001F  
                     i1u18_20 0036                       i1u18_21 0032                       i1u19_20 0046  
                     i1u19_21 0040                       i1u19_26 0048                       i2u16_40 0286  
                     i2u16_41 0282                       i2u17_40 0296                       i2u17_41 0290  
                     i2u17_46 0298                       _SSPCON1 000FC6                       _SSPCON2 000FC5  
                   ?_high_isr 0001                       _SSPSTAT 000FC7                    ??_i2c_idle 0006  
                  ??_i2c_init 0017                    ??_i2c_stop 0007                       __Hparam 0000  
                     __Lparam 0000                       ___lldiv 0074                       __pcinit 0300  
                     __ramtop 0600                       __ptext0 01AC                       __ptext1 02B0  
                     __ptext2 0322                       __ptext3 032A                       __ptext4 0332  
                     __ptext5 02DA                       __ptext6 0218                       __ptext7 0118  
                     __ptext8 0074                       _counter 0024                       _low_isr 0018  
                  ??_high_isr 0001                __pintcode_body 0274          end_of_initialization 0318  
                     int_func 0274               ___lldiv@divisor 000A               ___lldiv@counter 0012  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postinc0 000FEE  
                   _UART_Init 0118         __size_of_i2c_repStart 0008                     _TRISCbits 000F94  
                   _TXSTAbits 000FAC                  _i2c_repStart 0332                   _BAUDCONbits 000FB8  
                  ?_UART_Init 0013           start_initialization 0300                     _i2c_start 032A  
                   _i2c_write 02B0             __size_of_i2c_idle 0026             __size_of_i2c_init 005C  
           __size_of_i2c_stop 0008                   __pbssCOMRAM 0023                    ?_i2c_start 0001  
                  ?_i2c_write 0001             __size_of_high_isr 02A8                     __pintcode 0008  
                    ?___lldiv 0006                   __pintcodelo 0018                   ??_UART_Init 0017  
                    ?_low_isr 0001                      _LATBbits 000F8A                      _IPR1bits 000F9F  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E                     _uart_data 0023  
           UART_Init@baudrate 0013              i2c_init@i2c_freq 0013                   ??_i2c_start 0007  
                 ??_i2c_write 0007                      _i2c_idle 02DA                      _i2c_init 0218  
                    _i2c_stop 0322                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___lldiv 00A4              __size_of_low_isr 0058                      _high_isr 0008  
               __size_of_main 006C                      isa$xinst 000000                      int$flags 0025  
           i2c_write@i2c_data 0007                    _INTCONbits 000FF2                      intlevel1 0000  
                    intlevel2 0000              ___lldiv@dividend 0006              ___lldiv@quotient 000E  
                _print_buffer 0100                   _SSPCON2bits 000FC5  
