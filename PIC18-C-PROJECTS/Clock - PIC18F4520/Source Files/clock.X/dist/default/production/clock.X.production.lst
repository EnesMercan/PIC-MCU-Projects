

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 17 22:42:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4520 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK0
    92  001D34                     __pidataBANK0:
    93                           	callstack 0
    94                           
    95                           ;initializer for _set_time
    96  001D34  00                 	db	0
    97  001D35  1E                 	db	30
    98  001D36  14                 	db	20
    99  001D37  11                 	db	17
   100  001D38  0A                 	db	10
   101  001D39  15                 	db	21
   102  0000                     _TRISBbits	set	3987
   103  0000                     _LATB	set	3978
   104  0000                     _TRISD	set	3989
   105  0000                     _RCREG	set	4014
   106  0000                     _PIE1bits	set	3997
   107  0000                     _IPR1bits	set	3999
   108  0000                     _LATBbits	set	3978
   109  0000                     _TXREG	set	4013
   110  0000                     _TRISCbits	set	3988
   111  0000                     _RCSTAbits	set	4011
   112  0000                     _SPBRGH	set	4016
   113  0000                     _SPBRG	set	4015
   114  0000                     _BAUDCONbits	set	4024
   115  0000                     _TXSTAbits	set	4012
   116  0000                     _SSPBUF	set	4041
   117  0000                     _SSPSTAT	set	4039
   118  0000                     _SSPADD	set	4040
   119  0000                     _SSPCON2	set	4037
   120  0000                     _SSPCON1	set	4038
   121  0000                     _RCIF	set	31989
   122  0000                     _TRMT	set	32097
   123  0000                     _RD2	set	31770
   124  0000                     _RD0	set	31768
   125  0000                     _RD7	set	31775
   126  0000                     _RD6	set	31774
   127  0000                     _RD5	set	31773
   128  0000                     _RD4	set	31772
   129  0000                     _ACKEN	set	32300
   130  0000                     _ACKDT	set	32301
   131  0000                     _RCEN	set	32299
   132  0000                     _PEN	set	32298
   133  0000                     _SEN	set	32296
   134  0000                     _TRISC4	set	31908
   135  0000                     _TRISC3	set	31907
   136                           
   137                           	psect	smallconst
   138  000600                     __psmallconst:
   139                           	callstack 0
   140  000600  00                 	db	0
   141  000601                     STR_1:
   142  000601  45                 	db	69	;'E'
   143  000602  6E                 	db	110	;'n'
   144  000603  65                 	db	101	;'e'
   145  000604  73                 	db	115	;'s'
   146  000605  20                 	db	32
   147  000606  4D                 	db	77	;'M'
   148  000607  65                 	db	101	;'e'
   149  000608  72                 	db	114	;'r'
   150  000609  63                 	db	99	;'c'
   151  00060A  61                 	db	97	;'a'
   152  00060B  6E                 	db	110	;'n'
   153  00060C  0A                 	db	10
   154  00060D  0D                 	db	13
   155  00060E  31                 	db	49	;'1'
   156  00060F  37                 	db	55	;'7'
   157  000610  2E                 	db	46
   158  000611  31                 	db	49	;'1'
   159  000612  30                 	db	48	;'0'
   160  000613  2E                 	db	46
   161  000614  32                 	db	50	;'2'
   162  000615  30                 	db	48	;'0'
   163  000616  32                 	db	50	;'2'
   164  000617  31                 	db	49	;'1'
   165  000618  00                 	db	0
   166  000619                     STR_6:
   167  000619  0D                 	db	13
   168  00061A  25                 	db	37
   169  00061B  64                 	db	100	;'d'
   170  00061C  25                 	db	37
   171  00061D  64                 	db	100	;'d'
   172  00061E  20                 	db	32
   173  00061F  3A                 	db	58	;':'
   174  000620  20                 	db	32
   175  000621  25                 	db	37
   176  000622  64                 	db	100	;'d'
   177  000623  25                 	db	37
   178  000624  64                 	db	100	;'d'
   179  000625  20                 	db	32
   180  000626  3A                 	db	58	;':'
   181  000627  20                 	db	32
   182  000628  25                 	db	37
   183  000629  64                 	db	100	;'d'
   184  00062A  25                 	db	37
   185  00062B  64                 	db	100	;'d'
   186  00062C  00                 	db	0
   187  00062D                     STR_2:
   188  00062D  45                 	db	69	;'E'
   189  00062E  6E                 	db	110	;'n'
   190  00062F  65                 	db	101	;'e'
   191  000630  73                 	db	115	;'s'
   192  000631  20                 	db	32
   193  000632  4D                 	db	77	;'M'
   194  000633  65                 	db	101	;'e'
   195  000634  72                 	db	114	;'r'
   196  000635  63                 	db	99	;'c'
   197  000636  61                 	db	97	;'a'
   198  000637  6E                 	db	110	;'n'
   199  000638  00                 	db	0
   200  000639                     STR_4:
   201  000639  54                 	db	84	;'T'
   202  00063A  49                 	db	73	;'I'
   203  00063B  4D                 	db	77	;'M'
   204  00063C  45                 	db	69	;'E'
   205  00063D  3A                 	db	58	;':'
   206  00063E  20                 	db	32
   207  00063F  00                 	db	0
   208  000640                     STR_5:
   209  000640  44                 	db	68	;'D'
   210  000641  41                 	db	65	;'A'
   211  000642  54                 	db	84	;'T'
   212  000643  45                 	db	69	;'E'
   213  000644  3A                 	db	58	;':'
   214  000645  20                 	db	32
   215  000646  00                 	db	0
   216  000647  00                 	db	0	; dummy byte at the end
   217  0000                     
   218                           ; #config settings
   219                           
   220                           	psect	cinit
   221  0019AA                     __pcinit:
   222                           	callstack 0
   223  0019AA                     start_initialization:
   224                           	callstack 0
   225  0019AA                     __initialization:
   226                           	callstack 0
   227                           
   228                           ; Initialize objects allocated to BANK0 (6 bytes)
   229                           ; load TBLPTR registers with __pidataBANK0
   230  0019AA  0E34               	movlw	low __pidataBANK0
   231  0019AC  6EF6               	movwf	tblptrl,c
   232  0019AE  0E1D               	movlw	high __pidataBANK0
   233  0019B0  6EF7               	movwf	tblptrh,c
   234  0019B2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   235  0019B4  6EF8               	movwf	tblptru,c
   236  0019B6  EE00  F0A2         	lfsr	0,__pdataBANK0
   237  0019BA  EE10 F006          	lfsr	1,6
   238  0019BE                     copy_data0:
   239  0019BE  0009               	tblrd		*+
   240  0019C0  CFF5 FFEE          	movff	tablat,postinc0
   241  0019C4  50E5               	movf	postdec1,w,c
   242  0019C6  50E1               	movf	fsr1l,w,c
   243  0019C8  E1FA               	bnz	copy_data0
   244                           
   245                           ; Clear objects allocated to BANK1 (256 bytes)
   246  0019CA  EE01  F000         	lfsr	0,__pbssBANK1
   247  0019CE  EE11 F000          	lfsr	1,256
   248  0019D2                     clear_0:
   249  0019D2  6AEE               	clrf	postinc0,c
   250  0019D4  50E5               	movf	postdec1,w,c
   251  0019D6  50E1               	movf	fsr1l,w,c
   252  0019D8  E1FC               	bnz	clear_0
   253  0019DA  50E2               	movf	fsr1h,w,c
   254  0019DC  E1FA               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BANK0 (34 bytes)
   257  0019DE  EE00  F080         	lfsr	0,__pbssBANK0
   258  0019E2  0E22               	movlw	34
   259  0019E4                     clear_1:
   260  0019E4  6AEE               	clrf	postinc0,c
   261  0019E6  06E8               	decf	wreg,f,c
   262  0019E8  E1FD               	bnz	clear_1
   263                           
   264                           ; Clear objects allocated to COMRAM (14 bytes)
   265  0019EA  EE00  F072         	lfsr	0,__pbssCOMRAM
   266  0019EE  0E0E               	movlw	14
   267  0019F0                     clear_2:
   268  0019F0  6AEE               	clrf	postinc0,c
   269  0019F2  06E8               	decf	wreg,f,c
   270  0019F4  E1FD               	bnz	clear_2
   271  0019F6                     end_of_initialization:
   272                           	callstack 0
   273  0019F6                     __end_of__initialization:
   274                           	callstack 0
   275  0019F6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   276  0019F8  6EF8               	movwf	tblptru,c
   277  0019FA  0E06               	movlw	high __Lsmallconst
   278  0019FC  6EF7               	movwf	tblptrh,c
   279  0019FE  0100               	movlb	0
   280  001A00  EF24  F003         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMRAM
   283  000072                     __pbssCOMRAM:
   284                           	callstack 0
   285  000072                     _current_time:
   286                           	callstack 0
   287  000072                     	ds	6
   288  000078                     _width:
   289                           	callstack 0
   290  000078                     	ds	2
   291  00007A                     _prec:
   292                           	callstack 0
   293  00007A                     	ds	2
   294  00007C                     _flags:
   295                           	callstack 0
   296  00007C                     	ds	2
   297  00007E                     _uart_data:
   298                           	callstack 0
   299  00007E                     	ds	1
   300  00007F                     _counter:
   301                           	callstack 0
   302  00007F                     	ds	1
   303                           
   304                           	psect	bssBANK0
   305  000080                     __pbssBANK0:
   306                           	callstack 0
   307  000080                     _nout:
   308                           	callstack 0
   309  000080                     	ds	2
   310  000082                     _dbuf:
   311                           	callstack 0
   312  000082                     	ds	32
   313                           
   314                           	psect	dataBANK0
   315  0000A2                     __pdataBANK0:
   316                           	callstack 0
   317  0000A2                     _set_time:
   318                           	callstack 0
   319  0000A2                     	ds	6
   320                           
   321                           	psect	bssBANK1
   322  000100                     __pbssBANK1:
   323                           	callstack 0
   324  000100                     _print_buffer:
   325                           	callstack 0
   326  000100                     	ds	256
   327                           
   328                           	psect	cstackCOMRAM
   329  000001                     __pcstackCOMRAM:
   330                           	callstack 0
   331  000001                     ??_UART_Send:
   332  000001                     ??_I2C_Idle:
   333  000001                     ?_strlen:
   334                           	callstack 0
   335  000001                     ?___wmul:
   336                           	callstack 0
   337  000001                     ?___awdiv:
   338                           	callstack 0
   339  000001                     ?___awmod:
   340                           	callstack 0
   341  000001                     ?___lmul:
   342                           	callstack 0
   343  000001                     ?___aodiv:
   344                           	callstack 0
   345  000001                     ?___aomod:
   346                           	callstack 0
   347  000001                     Lcd_SetBit@data_bit:
   348                           	callstack 0
   349  000001                     ___wmul@multiplier:
   350                           	callstack 0
   351  000001                     ___awdiv@dividend:
   352                           	callstack 0
   353  000001                     ___awmod@dividend:
   354                           	callstack 0
   355  000001                     fputc@c:
   356                           	callstack 0
   357  000001                     strlen@s:
   358                           	callstack 0
   359  000001                     ___lmul@multiplier:
   360                           	callstack 0
   361  000001                     ___aodiv@dividend:
   362                           	callstack 0
   363  000001                     ___aomod@dividend:
   364                           	callstack 0
   365                           
   366                           ; 8 bytes @ 0x0
   367  000001                     	ds	1
   368  000002                     ??_Lcd_Cmd:
   369  000002                     I2C_Read@ack:
   370                           	callstack 0
   371  000002                     Lcd_Print_Char@Lower_Nibble:
   372                           	callstack 0
   373  000002                     UART_Send@data:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x1
   377  000002                     	ds	1
   378  000003                     I2C_Read@incoming:
   379                           	callstack 0
   380  000003                     Lcd_Cmd@a:
   381                           	callstack 0
   382  000003                     Lcd_Print_Char@Upper_Nibble:
   383                           	callstack 0
   384  000003                     UART_Send_String@text:
   385                           	callstack 0
   386  000003                     ___wmul@multiplicand:
   387                           	callstack 0
   388  000003                     ___awdiv@divisor:
   389                           	callstack 0
   390  000003                     ___awmod@divisor:
   391                           	callstack 0
   392  000003                     fputc@fp:
   393                           	callstack 0
   394  000003                     strlen@a:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  000003                     	ds	1
   399  000004                     ??_Lcd_Start:
   400  000004                     Lcd_Set_Cursor@b:
   401                           	callstack 0
   402  000004                     Lcd_Print_Char@i:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x3
   406  000004                     	ds	1
   407  000005                     ??_fputc:
   408  000005                     Lcd_Set_Cursor@a:
   409                           	callstack 0
   410  000005                     ___awdiv@counter:
   411                           	callstack 0
   412  000005                     ___awmod@counter:
   413                           	callstack 0
   414  000005                     UART_Send_String@i:
   415                           	callstack 0
   416  000005                     ___wmul@product:
   417                           	callstack 0
   418  000005                     ___lmul@multiplicand:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x4
   422  000005                     	ds	1
   423  000006                     Lcd_Set_Cursor@z:
   424                           	callstack 0
   425  000006                     ___awdiv@sign:
   426                           	callstack 0
   427  000006                     ___awmod@sign:
   428                           	callstack 0
   429  000006                     Lcd_Print_Char@i_83:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x5
   433  000006                     	ds	1
   434  000007                     ?_BCD_2_DEC:
   435                           	callstack 0
   436  000007                     Lcd_Set_Cursor@y:
   437                           	callstack 0
   438  000007                     BCD_2_DEC@to_convert:
   439                           	callstack 0
   440  000007                     ___awdiv@quotient:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x6
   444  000007                     	ds	1
   445  000008                     Lcd_Set_Cursor@temp:
   446                           	callstack 0
   447  000008                     Lcd_Print_Char@data:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x7
   451  000008                     	ds	1
   452  000009                     ??_BCD_2_DEC:
   453  000009                     ?_DEC_2_BCD:
   454                           	callstack 0
   455  000009                     Lcd_Print_String@a:
   456                           	callstack 0
   457  000009                     DEC_2_BCD@to_convert:
   458                           	callstack 0
   459  000009                     ___lmul@product:
   460                           	callstack 0
   461  000009                     ___aodiv@divisor:
   462                           	callstack 0
   463  000009                     ___aomod@divisor:
   464                           	callstack 0
   465                           
   466                           ; 8 bytes @ 0x8
   467  000009                     	ds	1
   468  00000A                     fputs@s:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x9
   472  00000A                     	ds	1
   473  00000B                     ??_Lcd_Print_String:
   474  00000B                     ??_DEC_2_BCD:
   475                           
   476                           ; 1 bytes @ 0xA
   477  00000B                     	ds	1
   478  00000C                     fputs@fp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0xB
   482  00000C                     	ds	1
   483  00000D                     ?___lldiv:
   484                           	callstack 0
   485  00000D                     I2C_Write@data:
   486                           	callstack 0
   487  00000D                     Lcd_Print_String@i:
   488                           	callstack 0
   489  00000D                     ___lldiv@dividend:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0xC
   493  00000D                     	ds	1
   494  00000E                     fputs@c:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0xD
   498  00000E                     	ds	1
   499  00000F                     ??_Update_Current_Date_Time:
   500  00000F                     fputs@i:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xE
   504  00000F                     	ds	2
   505  000011                     ?_pad:
   506                           	callstack 0
   507  000011                     ___aodiv@counter:
   508                           	callstack 0
   509  000011                     ___aomod@counter:
   510                           	callstack 0
   511  000011                     pad@fp:
   512                           	callstack 0
   513  000011                     ___lldiv@divisor:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x10
   517  000011                     	ds	1
   518  000012                     ___aodiv@sign:
   519                           	callstack 0
   520  000012                     ___aomod@sign:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x11
   524  000012                     	ds	1
   525  000013                     ?_abs:
   526                           	callstack 0
   527  000013                     pad@buf:
   528                           	callstack 0
   529  000013                     abs@a:
   530                           	callstack 0
   531  000013                     ___aodiv@quotient:
   532                           	callstack 0
   533                           
   534                           ; 8 bytes @ 0x12
   535  000013                     	ds	2
   536  000015                     ??_abs:
   537  000015                     pad@p:
   538                           	callstack 0
   539  000015                     ___lldiv@quotient:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x14
   543  000015                     	ds	2
   544  000017                     ??_pad:
   545                           
   546                           ; 1 bytes @ 0x16
   547  000017                     	ds	1
   548  000018                     pad@i:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x17
   552  000018                     	ds	1
   553  000019                     ___lldiv@counter:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x18
   557  000019                     	ds	1
   558  00001A                     pad@w:
   559                           	callstack 0
   560  00001A                     I2C_Initialize@feq_K:
   561                           	callstack 0
   562  00001A                     UART_Init@baudrate:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x19
   566  00001A                     	ds	2
   567  00001C                     ?_dtoa:
   568                           	callstack 0
   569  00001C                     dtoa@fp:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1B
   573  00001C                     	ds	2
   574  00001E                     ??_I2C_Initialize:
   575  00001E                     ??_UART_Init:
   576  00001E                     dtoa@d:
   577                           	callstack 0
   578                           
   579                           ; 8 bytes @ 0x1D
   580  00001E                     	ds	8
   581  000026                     ??_dtoa:
   582  000026                     UART_Init@baudrate_calculated:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x25
   586  000026                     	ds	8
   587  00002E                     _dtoa$1116:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x2D
   591  00002E                     	ds	2
   592  000030                     dtoa@p:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x2F
   596  000030                     	ds	2
   597  000032                     dtoa@w:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x31
   601  000032                     	ds	2
   602  000034                     dtoa@s:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x33
   606  000034                     	ds	2
   607  000036                     dtoa@n:
   608                           	callstack 0
   609                           
   610                           ; 8 bytes @ 0x35
   611  000036                     	ds	8
   612  00003E                     dtoa@i:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x3D
   616  00003E                     	ds	2
   617  000040                     ?_vfpfcnvrt:
   618                           	callstack 0
   619  000040                     vfpfcnvrt@fp:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x3F
   623  000040                     	ds	2
   624  000042                     vfpfcnvrt@fmt:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x41
   628  000042                     	ds	2
   629  000044                     vfpfcnvrt@ap:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x43
   633  000044                     	ds	2
   634  000046                     ??_vfpfcnvrt:
   635                           
   636                           ; 1 bytes @ 0x45
   637  000046                     	ds	2
   638  000048                     vfpfcnvrt@ll:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0x47
   642  000048                     	ds	8
   643  000050                     ?_vfprintf:
   644                           	callstack 0
   645  000050                     vfprintf@fp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x4F
   649  000050                     	ds	2
   650  000052                     vfprintf@fmt:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x51
   654  000052                     	ds	2
   655  000054                     vfprintf@ap:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x53
   659  000054                     	ds	2
   660  000056                     vfprintf@cfmt:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x55
   664  000056                     	ds	2
   665  000058                     ?_sprintf:
   666                           	callstack 0
   667  000058                     sprintf@s:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x57
   671  000058                     	ds	2
   672  00005A                     sprintf@fmt:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x59
   676  00005A                     	ds	14
   677  000068                     sprintf@ap:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x67
   681  000068                     	ds	2
   682  00006A                     sprintf@f:
   683                           	callstack 0
   684                           
   685                           ; 6 bytes @ 0x69
   686  00006A                     	ds	6
   687  000070                     ??_main:
   688                           
   689                           ; 1 bytes @ 0x6F
   690  000070                     	ds	2
   691                           
   692 ;;
   693 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   694 ;;
   695 ;; *************** function _main *****************
   696 ;; Defined at:
   697 ;;		line 20 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   711 ;;      Params:         0       0       0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0
   713 ;;      Temps:          2       0       0       0       0       0       0
   714 ;;      Totals:         2       0       0       0       0       0       0
   715 ;;Total ram usage:        2 bytes
   716 ;; Hardware stack levels required when called: 8
   717 ;; This function calls:
   718 ;;		_I2C_Initialize
   719 ;;		_Lcd_Clear
   720 ;;		_Lcd_Print_Char
   721 ;;		_Lcd_Print_String
   722 ;;		_Lcd_Set_Cursor
   723 ;;		_Lcd_Start
   724 ;;		_Set_Time_Date
   725 ;;		_UART_Init
   726 ;;		_UART_Send_String
   727 ;;		_Update_Current_Date_Time
   728 ;;		___awdiv
   729 ;;		___awmod
   730 ;;		_sprintf
   731 ;; This function is called by:
   732 ;;		Startup code after reset
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text0
   737  000648                     __ptext0:
   738                           	callstack 0
   739  000648                     _main:
   740                           	callstack 23
   741  000648                     
   742                           ;main.c: 22:     TRISD = 0x00;
   743  000648  0E00               	movlw	0
   744  00064A  6E95               	movwf	149,c	;volatile
   745  00064C                     
   746                           ;main.c: 23:     Lcd_Start();
   747  00064C  EC44  F00C         	call	_Lcd_Start	;wreg free
   748  000650                     
   749                           ;main.c: 26:     UART_Init((uint32_t)9600);
   750  000650  0E80               	movlw	128
   751  000652  6E1A               	movwf	UART_Init@baudrate^0,c
   752  000654  0E25               	movlw	37
   753  000656  6E1B               	movwf	(UART_Init@baudrate+1)^0,c
   754  000658  0E00               	movlw	0
   755  00065A  6E1C               	movwf	(UART_Init@baudrate+2)^0,c
   756  00065C  0E00               	movlw	0
   757  00065E  6E1D               	movwf	(UART_Init@baudrate+3)^0,c
   758  000660  EC14  F00B         	call	_UART_Init	;wreg free
   759  000664                     
   760                           ;main.c: 27:     I2C_Initialize(100);
   761  000664  0E64               	movlw	100
   762  000666  6E1A               	movwf	I2C_Initialize@feq_K^0,c
   763  000668  0E00               	movlw	0
   764  00066A  6E1B               	movwf	(I2C_Initialize@feq_K+1)^0,c
   765  00066C  0E00               	movlw	0
   766  00066E  6E1C               	movwf	(I2C_Initialize@feq_K+2)^0,c
   767  000670  0E00               	movlw	0
   768  000672  6E1D               	movwf	(I2C_Initialize@feq_K+3)^0,c
   769  000674  EC5E  F00B         	call	_I2C_Initialize	;wreg free
   770  000678                     
   771                           ;main.c: 31:     LATB = 0;
   772  000678  0E00               	movlw	0
   773  00067A  6E8A               	movwf	138,c	;volatile
   774  00067C                     
   775                           ;main.c: 32:     TRISBbits.RB7 = 0;
   776  00067C  9E93               	bcf	147,7,c	;volatile
   777  00067E                     
   778                           ;main.c: 33:     TRISBbits.RB6 = 0;
   779  00067E  9C93               	bcf	147,6,c	;volatile
   780  000680                     
   781                           ;main.c: 35:     TRISBbits.RB0 = 1;
   782  000680  8093               	bsf	147,0,c	;volatile
   783  000682                     
   784                           ;main.c: 36:     TRISBbits.RB1 = 1;
   785  000682  8293               	bsf	147,1,c	;volatile
   786  000684                     
   787                           ;main.c: 40:     sprintf(print_buffer, "Enes Mercan\n\r17.10.2021");
   788  000684  0E00               	movlw	low _print_buffer
   789  000686  6E58               	movwf	sprintf@s^0,c
   790  000688  0E01               	movlw	high _print_buffer
   791  00068A  6E59               	movwf	(sprintf@s+1)^0,c
   792  00068C  0E01               	movlw	low STR_1
   793  00068E  6E5A               	movwf	sprintf@fmt^0,c
   794  000690  0E06               	movlw	high STR_1
   795  000692  6E5B               	movwf	(sprintf@fmt+1)^0,c
   796  000694  EC55  F00D         	call	_sprintf	;wreg free
   797  000698                     
   798                           ;main.c: 41:     UART_Send_String(print_buffer);
   799  000698  0E00               	movlw	low _print_buffer
   800  00069A  6E03               	movwf	UART_Send_String@text^0,c
   801  00069C  0E01               	movlw	high _print_buffer
   802  00069E  6E04               	movwf	(UART_Send_String@text+1)^0,c
   803  0006A0  ECE1  F00D         	call	_UART_Send_String	;wreg free
   804  0006A4                     
   805                           ;main.c: 44:     Lcd_Clear();
   806  0006A4  EC86  F00E         	call	_Lcd_Clear	;wreg free
   807  0006A8                     
   808                           ;main.c: 45:     Lcd_Set_Cursor(1,1);
   809  0006A8  0E01               	movlw	1
   810  0006AA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   811  0006AC  0E01               	movlw	1
   812  0006AE  EC11  F00C         	call	_Lcd_Set_Cursor
   813  0006B2                     
   814                           ;main.c: 46:     Lcd_Print_String("Enes Mercan");
   815  0006B2  0E2D               	movlw	low STR_2
   816  0006B4  6E09               	movwf	Lcd_Print_String@a^0,c
   817  0006B6  0E06               	movlw	high STR_2
   818  0006B8  6E0A               	movwf	(Lcd_Print_String@a+1)^0,c
   819  0006BA  EC02  F00D         	call	_Lcd_Print_String	;wreg free
   820  0006BE                     
   821                           ;main.c: 47:     Lcd_Set_Cursor(2,1);
   822  0006BE  0E01               	movlw	1
   823  0006C0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   824  0006C2  0E02               	movlw	2
   825  0006C4  EC11  F00C         	call	_Lcd_Set_Cursor
   826  0006C8                     
   827                           ;main.c: 48:     Lcd_Print_String("17.10.2021");
   828  0006C8  0E0E               	movlw	low (STR_1+13)
   829  0006CA  6E09               	movwf	Lcd_Print_String@a^0,c
   830  0006CC  0E06               	movlw	high (STR_1+13)
   831  0006CE  6E0A               	movwf	(Lcd_Print_String@a+1)^0,c
   832  0006D0  EC02  F00D         	call	_Lcd_Print_String	;wreg free
   833  0006D4                     
   834                           ;main.c: 49:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   835  0006D4  0E1A               	movlw	26
   836  0006D6  6E71               	movwf	(??_main+1)^0,c
   837  0006D8  0E5E               	movlw	94
   838  0006DA  6E70               	movwf	??_main^0,c
   839  0006DC  0E6E               	movlw	110
   840  0006DE                     u1587:
   841  0006DE  2EE8               	decfsz	wreg,f,c
   842  0006E0  D7FE               	bra	u1587
   843  0006E2  2E70               	decfsz	??_main^0,f,c
   844  0006E4  D7FC               	bra	u1587
   845  0006E6  2E71               	decfsz	(??_main+1)^0,f,c
   846  0006E8  D7FA               	bra	u1587
   847  0006EA  D000               	nop2	
   848  0006EC                     
   849                           ;main.c: 51:     Set_Time_Date();
   850  0006EC  EC11  F00A         	call	_Set_Time_Date	;wreg free
   851  0006F0                     l2288:
   852                           
   853                           ;main.c: 55:     {;main.c: 58:         Update_Current_Date_Time();
   854  0006F0  EC7C  F008         	call	_Update_Current_Date_Time	;wreg free
   855  0006F4                     
   856                           ;main.c: 62:         Lcd_Clear();
   857  0006F4  EC86  F00E         	call	_Lcd_Clear	;wreg free
   858  0006F8                     
   859                           ;main.c: 63:         Lcd_Set_Cursor(1, 1);
   860  0006F8  0E01               	movlw	1
   861  0006FA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   862  0006FC  0E01               	movlw	1
   863  0006FE  EC11  F00C         	call	_Lcd_Set_Cursor
   864  000702                     
   865                           ;main.c: 64:         Lcd_Print_String("TIME: ");
   866  000702  0E39               	movlw	low STR_4
   867  000704  6E09               	movwf	Lcd_Print_String@a^0,c
   868  000706  0E06               	movlw	high STR_4
   869  000708  6E0A               	movwf	(Lcd_Print_String@a+1)^0,c
   870  00070A  EC02  F00D         	call	_Lcd_Print_String	;wreg free
   871  00070E                     
   872                           ;main.c: 65:         Lcd_Print_Char((current_time.hour / 10) + '0');
   873  00070E  C074  F001         	movff	_current_time+2,___awdiv@dividend	;volatile
   874  000712  6A02               	clrf	(___awdiv@dividend+1)^0,c
   875  000714  0E00               	movlw	0
   876  000716  6E04               	movwf	(___awdiv@divisor+1)^0,c
   877  000718  0E0A               	movlw	10
   878  00071A  6E03               	movwf	___awdiv@divisor^0,c
   879  00071C  EC4E  F009         	call	___awdiv	;wreg free
   880  000720  5001               	movf	?___awdiv^0,w,c
   881  000722  0F30               	addlw	48
   882  000724  EC9E  F00B         	call	_Lcd_Print_Char
   883  000728                     
   884                           ;main.c: 66:         Lcd_Print_Char((current_time.hour % 10) + '0');
   885  000728  C074  F001         	movff	_current_time+2,___awmod@dividend	;volatile
   886  00072C  6A02               	clrf	(___awmod@dividend+1)^0,c
   887  00072E  0E00               	movlw	0
   888  000730  6E04               	movwf	(___awmod@divisor+1)^0,c
   889  000732  0E0A               	movlw	10
   890  000734  6E03               	movwf	___awmod@divisor^0,c
   891  000736  EC6A  F00A         	call	___awmod	;wreg free
   892  00073A  5001               	movf	?___awmod^0,w,c
   893  00073C  0F30               	addlw	48
   894  00073E  EC9E  F00B         	call	_Lcd_Print_Char
   895  000742                     
   896                           ;main.c: 67:         Lcd_Print_Char(':');
   897  000742  0E3A               	movlw	58
   898  000744  EC9E  F00B         	call	_Lcd_Print_Char
   899  000748                     
   900                           ;main.c: 68:         Lcd_Print_Char((current_time.min / 10) + '0');
   901  000748  C073  F001         	movff	_current_time+1,___awdiv@dividend	;volatile
   902  00074C  6A02               	clrf	(___awdiv@dividend+1)^0,c
   903  00074E  0E00               	movlw	0
   904  000750  6E04               	movwf	(___awdiv@divisor+1)^0,c
   905  000752  0E0A               	movlw	10
   906  000754  6E03               	movwf	___awdiv@divisor^0,c
   907  000756  EC4E  F009         	call	___awdiv	;wreg free
   908  00075A  5001               	movf	?___awdiv^0,w,c
   909  00075C  0F30               	addlw	48
   910  00075E  EC9E  F00B         	call	_Lcd_Print_Char
   911  000762                     
   912                           ;main.c: 69:         Lcd_Print_Char((current_time.min % 10) + '0');
   913  000762  C073  F001         	movff	_current_time+1,___awmod@dividend	;volatile
   914  000766  6A02               	clrf	(___awmod@dividend+1)^0,c
   915  000768  0E00               	movlw	0
   916  00076A  6E04               	movwf	(___awmod@divisor+1)^0,c
   917  00076C  0E0A               	movlw	10
   918  00076E  6E03               	movwf	___awmod@divisor^0,c
   919  000770  EC6A  F00A         	call	___awmod	;wreg free
   920  000774  5001               	movf	?___awmod^0,w,c
   921  000776  0F30               	addlw	48
   922  000778  EC9E  F00B         	call	_Lcd_Print_Char
   923  00077C                     
   924                           ;main.c: 70:         Lcd_Print_Char(':');
   925  00077C  0E3A               	movlw	58
   926  00077E  EC9E  F00B         	call	_Lcd_Print_Char
   927  000782                     
   928                           ;main.c: 71:         Lcd_Print_Char((current_time.sec / 10) + '0');
   929  000782  C072  F001         	movff	_current_time,___awdiv@dividend	;volatile
   930  000786  6A02               	clrf	(___awdiv@dividend+1)^0,c
   931  000788  0E00               	movlw	0
   932  00078A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   933  00078C  0E0A               	movlw	10
   934  00078E  6E03               	movwf	___awdiv@divisor^0,c
   935  000790  EC4E  F009         	call	___awdiv	;wreg free
   936  000794  5001               	movf	?___awdiv^0,w,c
   937  000796  0F30               	addlw	48
   938  000798  EC9E  F00B         	call	_Lcd_Print_Char
   939  00079C                     
   940                           ;main.c: 72:         Lcd_Print_Char((current_time.sec % 10) + '0');
   941  00079C  C072  F001         	movff	_current_time,___awmod@dividend	;volatile
   942  0007A0  6A02               	clrf	(___awmod@dividend+1)^0,c
   943  0007A2  0E00               	movlw	0
   944  0007A4  6E04               	movwf	(___awmod@divisor+1)^0,c
   945  0007A6  0E0A               	movlw	10
   946  0007A8  6E03               	movwf	___awmod@divisor^0,c
   947  0007AA  EC6A  F00A         	call	___awmod	;wreg free
   948  0007AE  5001               	movf	?___awmod^0,w,c
   949  0007B0  0F30               	addlw	48
   950  0007B2  EC9E  F00B         	call	_Lcd_Print_Char
   951  0007B6                     
   952                           ;main.c: 73:         _delay((unsigned long)((10)*(20000000/4000.0)));
   953  0007B6  0E41               	movlw	65
   954  0007B8  6E70               	movwf	??_main^0,c
   955  0007BA  0EEE               	movlw	238
   956  0007BC                     u1597:
   957  0007BC  2EE8               	decfsz	wreg,f,c
   958  0007BE  D7FE               	bra	u1597
   959  0007C0  2E70               	decfsz	??_main^0,f,c
   960  0007C2  D7FC               	bra	u1597
   961  0007C4  D000               	nop2	
   962  0007C6                     
   963                           ;main.c: 77:         Lcd_Set_Cursor(2, 1);
   964  0007C6  0E01               	movlw	1
   965  0007C8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   966  0007CA  0E02               	movlw	2
   967  0007CC  EC11  F00C         	call	_Lcd_Set_Cursor
   968  0007D0                     
   969                           ;main.c: 78:         Lcd_Print_String("DATE: ");
   970  0007D0  0E40               	movlw	low STR_5
   971  0007D2  6E09               	movwf	Lcd_Print_String@a^0,c
   972  0007D4  0E06               	movlw	high STR_5
   973  0007D6  6E0A               	movwf	(Lcd_Print_String@a+1)^0,c
   974  0007D8  EC02  F00D         	call	_Lcd_Print_String	;wreg free
   975  0007DC                     
   976                           ;main.c: 79:         Lcd_Print_Char((current_time.date / 10) + '0');
   977  0007DC  C075  F001         	movff	_current_time+3,___awdiv@dividend	;volatile
   978  0007E0  6A02               	clrf	(___awdiv@dividend+1)^0,c
   979  0007E2  0E00               	movlw	0
   980  0007E4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   981  0007E6  0E0A               	movlw	10
   982  0007E8  6E03               	movwf	___awdiv@divisor^0,c
   983  0007EA  EC4E  F009         	call	___awdiv	;wreg free
   984  0007EE  5001               	movf	?___awdiv^0,w,c
   985  0007F0  0F30               	addlw	48
   986  0007F2  EC9E  F00B         	call	_Lcd_Print_Char
   987  0007F6                     
   988                           ;main.c: 80:         Lcd_Print_Char((current_time.date % 10) + '0');
   989  0007F6  C075  F001         	movff	_current_time+3,___awmod@dividend	;volatile
   990  0007FA  6A02               	clrf	(___awmod@dividend+1)^0,c
   991  0007FC  0E00               	movlw	0
   992  0007FE  6E04               	movwf	(___awmod@divisor+1)^0,c
   993  000800  0E0A               	movlw	10
   994  000802  6E03               	movwf	___awmod@divisor^0,c
   995  000804  EC6A  F00A         	call	___awmod	;wreg free
   996  000808  5001               	movf	?___awmod^0,w,c
   997  00080A  0F30               	addlw	48
   998  00080C  EC9E  F00B         	call	_Lcd_Print_Char
   999  000810                     
  1000                           ;main.c: 81:         Lcd_Print_Char(':');
  1001  000810  0E3A               	movlw	58
  1002  000812  EC9E  F00B         	call	_Lcd_Print_Char
  1003  000816                     
  1004                           ;main.c: 82:         Lcd_Print_Char((current_time.month / 10) + '0');
  1005  000816  C076  F001         	movff	_current_time+4,___awdiv@dividend	;volatile
  1006  00081A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1007  00081C  0E00               	movlw	0
  1008  00081E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1009  000820  0E0A               	movlw	10
  1010  000822  6E03               	movwf	___awdiv@divisor^0,c
  1011  000824  EC4E  F009         	call	___awdiv	;wreg free
  1012  000828  5001               	movf	?___awdiv^0,w,c
  1013  00082A  0F30               	addlw	48
  1014  00082C  EC9E  F00B         	call	_Lcd_Print_Char
  1015  000830                     
  1016                           ;main.c: 83:         Lcd_Print_Char((current_time.month % 10) + '0');
  1017  000830  C076  F001         	movff	_current_time+4,___awmod@dividend	;volatile
  1018  000834  6A02               	clrf	(___awmod@dividend+1)^0,c
  1019  000836  0E00               	movlw	0
  1020  000838  6E04               	movwf	(___awmod@divisor+1)^0,c
  1021  00083A  0E0A               	movlw	10
  1022  00083C  6E03               	movwf	___awmod@divisor^0,c
  1023  00083E  EC6A  F00A         	call	___awmod	;wreg free
  1024  000842  5001               	movf	?___awmod^0,w,c
  1025  000844  0F30               	addlw	48
  1026  000846  EC9E  F00B         	call	_Lcd_Print_Char
  1027  00084A                     
  1028                           ;main.c: 84:         Lcd_Print_Char(':');
  1029  00084A  0E3A               	movlw	58
  1030  00084C  EC9E  F00B         	call	_Lcd_Print_Char
  1031  000850                     
  1032                           ;main.c: 85:         Lcd_Print_Char(2 + '0');
  1033  000850  0E32               	movlw	50
  1034  000852  EC9E  F00B         	call	_Lcd_Print_Char
  1035  000856                     
  1036                           ;main.c: 86:         Lcd_Print_Char(0 + '0');
  1037  000856  0E30               	movlw	48
  1038  000858  EC9E  F00B         	call	_Lcd_Print_Char
  1039  00085C                     
  1040                           ;main.c: 87:         Lcd_Print_Char((current_time.year / 10) + '0');
  1041  00085C  C077  F001         	movff	_current_time+5,___awdiv@dividend	;volatile
  1042  000860  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1043  000862  0E00               	movlw	0
  1044  000864  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1045  000866  0E0A               	movlw	10
  1046  000868  6E03               	movwf	___awdiv@divisor^0,c
  1047  00086A  EC4E  F009         	call	___awdiv	;wreg free
  1048  00086E  5001               	movf	?___awdiv^0,w,c
  1049  000870  0F30               	addlw	48
  1050  000872  EC9E  F00B         	call	_Lcd_Print_Char
  1051  000876                     
  1052                           ;main.c: 88:         Lcd_Print_Char(((current_time.month % 10)+1) + '0');
  1053  000876  C076  F001         	movff	_current_time+4,___awmod@dividend	;volatile
  1054  00087A  6A02               	clrf	(___awmod@dividend+1)^0,c
  1055  00087C  0E00               	movlw	0
  1056  00087E  6E04               	movwf	(___awmod@divisor+1)^0,c
  1057  000880  0E0A               	movlw	10
  1058  000882  6E03               	movwf	___awmod@divisor^0,c
  1059  000884  EC6A  F00A         	call	___awmod	;wreg free
  1060  000888  5001               	movf	?___awmod^0,w,c
  1061  00088A  0F31               	addlw	49
  1062  00088C  EC9E  F00B         	call	_Lcd_Print_Char
  1063  000890                     
  1064                           ;main.c: 89:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1065  000890  0E41               	movlw	65
  1066  000892  6E70               	movwf	??_main^0,c
  1067  000894  0EEE               	movlw	238
  1068  000896                     u1607:
  1069  000896  2EE8               	decfsz	wreg,f,c
  1070  000898  D7FE               	bra	u1607
  1071  00089A  2E70               	decfsz	??_main^0,f,c
  1072  00089C  D7FC               	bra	u1607
  1073  00089E  D000               	nop2	
  1074  0008A0                     
  1075                           ;main.c: 93:         sprintf(print_buffer, "\r%d%d : %d%d : %d%d",
  1076  0008A0  0E00               	movlw	low _print_buffer
  1077  0008A2  6E58               	movwf	sprintf@s^0,c
  1078  0008A4  0E01               	movlw	high _print_buffer
  1079  0008A6  6E59               	movwf	(sprintf@s+1)^0,c
  1080  0008A8  0E19               	movlw	low STR_6
  1081  0008AA  6E5A               	movwf	sprintf@fmt^0,c
  1082  0008AC  0E06               	movlw	high STR_6
  1083  0008AE  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1084  0008B0  C074  F001         	movff	_current_time+2,___awdiv@dividend	;volatile
  1085  0008B4  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1086  0008B6  0E00               	movlw	0
  1087  0008B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1088  0008BA  0E0A               	movlw	10
  1089  0008BC  6E03               	movwf	___awdiv@divisor^0,c
  1090  0008BE  EC4E  F009         	call	___awdiv	;wreg free
  1091  0008C2  C001  F05C         	movff	?___awdiv,?_sprintf+4
  1092  0008C6  C002  F05D         	movff	?___awdiv+1,?_sprintf+5
  1093  0008CA  C074  F001         	movff	_current_time+2,___awmod@dividend	;volatile
  1094  0008CE  6A02               	clrf	(___awmod@dividend+1)^0,c
  1095  0008D0  0E00               	movlw	0
  1096  0008D2  6E04               	movwf	(___awmod@divisor+1)^0,c
  1097  0008D4  0E0A               	movlw	10
  1098  0008D6  6E03               	movwf	___awmod@divisor^0,c
  1099  0008D8  EC6A  F00A         	call	___awmod	;wreg free
  1100  0008DC  C001  F05E         	movff	?___awmod,?_sprintf+6
  1101  0008E0  C002  F05F         	movff	?___awmod+1,?_sprintf+7
  1102  0008E4  C073  F001         	movff	_current_time+1,___awdiv@dividend	;volatile
  1103  0008E8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1104  0008EA  0E00               	movlw	0
  1105  0008EC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1106  0008EE  0E0A               	movlw	10
  1107  0008F0  6E03               	movwf	___awdiv@divisor^0,c
  1108  0008F2  EC4E  F009         	call	___awdiv	;wreg free
  1109  0008F6  C001  F060         	movff	?___awdiv,?_sprintf+8
  1110  0008FA  C002  F061         	movff	?___awdiv+1,?_sprintf+9
  1111  0008FE  C073  F001         	movff	_current_time+1,___awmod@dividend	;volatile
  1112  000902  6A02               	clrf	(___awmod@dividend+1)^0,c
  1113  000904  0E00               	movlw	0
  1114  000906  6E04               	movwf	(___awmod@divisor+1)^0,c
  1115  000908  0E0A               	movlw	10
  1116  00090A  6E03               	movwf	___awmod@divisor^0,c
  1117  00090C  EC6A  F00A         	call	___awmod	;wreg free
  1118  000910  C001  F062         	movff	?___awmod,?_sprintf+10
  1119  000914  C002  F063         	movff	?___awmod+1,?_sprintf+11
  1120  000918  C072  F001         	movff	_current_time,___awdiv@dividend	;volatile
  1121  00091C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1122  00091E  0E00               	movlw	0
  1123  000920  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1124  000922  0E0A               	movlw	10
  1125  000924  6E03               	movwf	___awdiv@divisor^0,c
  1126  000926  EC4E  F009         	call	___awdiv	;wreg free
  1127  00092A  C001  F064         	movff	?___awdiv,?_sprintf+12
  1128  00092E  C002  F065         	movff	?___awdiv+1,?_sprintf+13
  1129  000932  C072  F001         	movff	_current_time,___awmod@dividend	;volatile
  1130  000936  6A02               	clrf	(___awmod@dividend+1)^0,c
  1131  000938  0E00               	movlw	0
  1132  00093A  6E04               	movwf	(___awmod@divisor+1)^0,c
  1133  00093C  0E0A               	movlw	10
  1134  00093E  6E03               	movwf	___awmod@divisor^0,c
  1135  000940  EC6A  F00A         	call	___awmod	;wreg free
  1136  000944  C001  F066         	movff	?___awmod,?_sprintf+14
  1137  000948  C002  F067         	movff	?___awmod+1,?_sprintf+15
  1138  00094C  EC55  F00D         	call	_sprintf	;wreg free
  1139  000950                     
  1140                           ;main.c: 97:         UART_Send_String(print_buffer);
  1141  000950  0E00               	movlw	low _print_buffer
  1142  000952  6E03               	movwf	UART_Send_String@text^0,c
  1143  000954  0E01               	movlw	high _print_buffer
  1144  000956  6E04               	movwf	(UART_Send_String@text+1)^0,c
  1145  000958  ECE1  F00D         	call	_UART_Send_String	;wreg free
  1146  00095C                     
  1147                           ;main.c: 99:         _delay((unsigned long)((350)*(20000000/4000.0)));
  1148  00095C  0E09               	movlw	9
  1149  00095E  6E71               	movwf	(??_main+1)^0,c
  1150  000960  0EE1               	movlw	225
  1151  000962  6E70               	movwf	??_main^0,c
  1152  000964  0EB2               	movlw	178
  1153  000966                     u1617:
  1154  000966  2EE8               	decfsz	wreg,f,c
  1155  000968  D7FE               	bra	u1617
  1156  00096A  2E70               	decfsz	??_main^0,f,c
  1157  00096C  D7FC               	bra	u1617
  1158  00096E  2E71               	decfsz	(??_main+1)^0,f,c
  1159  000970  D7FA               	bra	u1617
  1160  000972  D000               	nop2	
  1161  000974  EF78  F003         	goto	l2288
  1162  000978  EF00  F000         	goto	start
  1163  00097C                     __end_of_main:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _sprintf *****************
  1167 ;; Defined at:
  1168 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  s               2   87[COMRAM] PTR unsigned char 
  1171 ;;		 -> print_buffer(256), 
  1172 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1173 ;;		 -> STR_6(20), STR_1(24), 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  f               6  105[COMRAM] struct _IO_FILE
  1176 ;;  ap              2  103[COMRAM] PTR void [1]
  1177 ;;		 -> ?_sprintf(2), 
  1178 ;;  ret             2    0        int 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  2   87[COMRAM] int 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1188 ;;      Params:        16       0       0       0       0       0       0
  1189 ;;      Locals:         8       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0
  1191 ;;      Totals:        24       0       0       0       0       0       0
  1192 ;;Total ram usage:       24 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 7
  1195 ;; This function calls:
  1196 ;;		_vfprintf
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text1
  1203  001AAA                     __ptext1:
  1204                           	callstack 0
  1205  001AAA                     _sprintf:
  1206                           	callstack 23
  1207  001AAA  0E5C               	movlw	low (?_sprintf+4)
  1208  001AAC  6E68               	movwf	sprintf@ap^0,c
  1209  001AAE  0E00               	movlw	high (?_sprintf+4)
  1210  001AB0  6E69               	movwf	(sprintf@ap+1)^0,c
  1211  001AB2  C058  F06A         	movff	sprintf@s,sprintf@f
  1212  001AB6  C059  F06B         	movff	sprintf@s+1,sprintf@f+1
  1213  001ABA  0E00               	movlw	0
  1214  001ABC  6E6D               	movwf	(sprintf@f+3)^0,c
  1215  001ABE  0E00               	movlw	0
  1216  001AC0  6E6C               	movwf	(sprintf@f+2)^0,c
  1217  001AC2  0E00               	movlw	0
  1218  001AC4  6E6F               	movwf	(sprintf@f+5)^0,c
  1219  001AC6  0E00               	movlw	0
  1220  001AC8  6E6E               	movwf	(sprintf@f+4)^0,c
  1221  001ACA  0E6A               	movlw	low sprintf@f
  1222  001ACC  6E50               	movwf	vfprintf@fp^0,c
  1223  001ACE  0E00               	movlw	high sprintf@f
  1224  001AD0  6E51               	movwf	(vfprintf@fp+1)^0,c
  1225  001AD2  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1226  001AD6  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1227  001ADA  0E68               	movlw	low sprintf@ap
  1228  001ADC  6E54               	movwf	vfprintf@ap^0,c
  1229  001ADE  0E00               	movlw	high sprintf@ap
  1230  001AE0  6E55               	movwf	(vfprintf@ap+1)^0,c
  1231  001AE2  EC76  F00C         	call	_vfprintf	;wreg free
  1232  001AE6  506C               	movf	(sprintf@f+2)^0,w,c
  1233  001AE8  2458               	addwf	sprintf@s^0,w,c
  1234  001AEA  6ED9               	movwf	fsr2l,c
  1235  001AEC  506D               	movf	(sprintf@f+3)^0,w,c
  1236  001AEE  2059               	addwfc	(sprintf@s+1)^0,w,c
  1237  001AF0  6EDA               	movwf	fsr2h,c
  1238  001AF2  0E00               	movlw	0
  1239  001AF4  6EDF               	movwf	indf2,c
  1240  001AF6  0012               	return		;funcret
  1241  001AF8                     __end_of_sprintf:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _vfprintf *****************
  1245 ;; Defined at:
  1246 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1249 ;;		 -> sprintf@f(6), 
  1250 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1251 ;;		 -> STR_6(20), STR_1(24), 
  1252 ;;  ap              2   83[COMRAM] PTR PTR void 
  1253 ;;		 -> sprintf@ap(2), 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1256 ;;		 -> STR_6(20), STR_1(24), 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  2   79[COMRAM] int 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1266 ;;      Params:         6       0       0       0       0       0       0
  1267 ;;      Locals:         2       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0
  1269 ;;      Totals:         8       0       0       0       0       0       0
  1270 ;;Total ram usage:        8 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 6
  1273 ;; This function calls:
  1274 ;;		_vfpfcnvrt
  1275 ;; This function is called by:
  1276 ;;		_sprintf
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text2
  1281  0018EC                     __ptext2:
  1282                           	callstack 0
  1283  0018EC                     _vfprintf:
  1284                           	callstack 23
  1285  0018EC                     
  1286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1287  0018EC  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1288  0018F0  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1289  0018F4                     
  1290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1291  0018F4  0E00               	movlw	0
  1292  0018F6  0100               	movlb	0	; () banked
  1293  0018F8  6F81               	movwf	(_nout+1)& (0+255),b
  1294  0018FA  0E00               	movlw	0
  1295  0018FC  6F80               	movwf	_nout& (0+255),b
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1298  0018FE  EF94  F00C         	goto	l2152
  1299  001902                     l2150:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1303  001902  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1304  001906  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1305  00190A  0E56               	movlw	low vfprintf@cfmt
  1306  00190C  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1307  00190E  0E00               	movlw	high vfprintf@cfmt
  1308  001910  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1309  001912  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1310  001916  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1311  00191A  EC2D  F006         	call	_vfpfcnvrt	;wreg free
  1312  00191E  5040               	movf	?_vfpfcnvrt^0,w,c
  1313  001920  0100               	movlb	0	; () banked
  1314  001922  2780               	addwf	_nout& (0+255),f,b
  1315  001924  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1316  001926  2381               	addwfc	(_nout+1)& (0+255),f,b
  1317  001928                     l2152:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1321  001928  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1322  00192C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1323  001930                     	if	0	;tblptru may be non-zero
  1324  001930                     	endif
  1325  001930                     	if	0	;tblptru may be non-zero
  1326  001930                     	endif
  1327  001930  0008               	tblrd		*
  1328  001932  50F5               	movf	tablat,w,c
  1329  001934  0900               	iorlw	0
  1330  001936  A4D8               	btfss	status,2,c
  1331  001938  EFA0  F00C         	goto	u1501
  1332  00193C  EFA2  F00C         	goto	u1500
  1333  001940                     u1501:
  1334  001940  EF81  F00C         	goto	l2150
  1335  001944                     u1500:
  1336  001944                     
  1337                           ; BSR set to: 0
  1338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1339  001944  C080  F050         	movff	_nout,?_vfprintf
  1340  001948  C081  F051         	movff	_nout+1,?_vfprintf+1
  1341  00194C                     
  1342                           ; BSR set to: 0
  1343  00194C  0012               	return		;funcret
  1344  00194E                     __end_of_vfprintf:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _vfpfcnvrt *****************
  1348 ;; Defined at:
  1349 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1352 ;;		 -> sprintf@f(6), 
  1353 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1354 ;;		 -> vfprintf@cfmt(2), 
  1355 ;;  ap              2   67[COMRAM] PTR PTR void 
  1356 ;;		 -> sprintf@ap(2), 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  ll              8   71[COMRAM] long long 
  1359 ;;  llu             8    0        unsigned long long 
  1360 ;;  f               4    0        unsigned long long 
  1361 ;;  vp              3    0        PTR void 
  1362 ;;  ct              3    0        unsigned char [3]
  1363 ;;  cp              3    0        PTR unsigned char 
  1364 ;;  i               2    0        int 
  1365 ;;  done            2    0        int 
  1366 ;;  c               1    0        unsigned char 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  2   63[COMRAM] int 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1376 ;;      Params:         6       0       0       0       0       0       0
  1377 ;;      Locals:         8       0       0       0       0       0       0
  1378 ;;      Temps:          2       0       0       0       0       0       0
  1379 ;;      Totals:        16       0       0       0       0       0       0
  1380 ;;Total ram usage:       16 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; Hardware stack levels required when called: 5
  1383 ;; This function calls:
  1384 ;;		_dtoa
  1385 ;;		_fputc
  1386 ;; This function is called by:
  1387 ;;		_vfprintf
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text3
  1392  000C5A                     __ptext3:
  1393                           	callstack 0
  1394  000C5A                     _vfpfcnvrt:
  1395                           	callstack 23
  1396  000C5A                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1398  000C5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1399  000C5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1400  000C62  CFDE FFF6          	movff	postinc2,tblptrl
  1401  000C66  CFDD FFF7          	movff	postdec2,tblptrh
  1402  000C6A                     	if	0	;tblptru may be non-zero
  1403  000C6A                     	endif
  1404  000C6A                     	if	0	;tblptru may be non-zero
  1405  000C6A                     	endif
  1406  000C6A  0008               	tblrd		*
  1407  000C6C  50F5               	movf	tablat,w,c
  1408  000C6E  0A25               	xorlw	37
  1409  000C70  A4D8               	btfss	status,2,c
  1410  000C72  EF3D  F006         	goto	u1381
  1411  000C76  EF3F  F006         	goto	u1380
  1412  000C7A                     u1381:
  1413  000C7A  EFEA  F006         	goto	l2072
  1414  000C7E                     u1380:
  1415  000C7E                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1417  000C7E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1418  000C82  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1419  000C86  2ADE               	incf	postinc2,f,c
  1420  000C88  0E00               	movlw	0
  1421  000C8A  22DD               	addwfc	postdec2,f,c
  1422  000C8C                     
  1423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1424  000C8C  0E00               	movlw	0
  1425  000C8E  6E79               	movwf	(_width+1)^0,c
  1426  000C90  0E00               	movlw	0
  1427  000C92  6E78               	movwf	_width^0,c
  1428  000C94  C078  F07C         	movff	_width,_flags
  1429  000C98  C079  F07D         	movff	_width+1,_flags+1
  1430  000C9C                     
  1431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1432  000C9C  687A               	setf	_prec^0,c
  1433  000C9E  687B               	setf	(_prec+1)^0,c
  1434  000CA0                     
  1435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1436  000CA0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1437  000CA4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1438  000CA8  CFDE FFF6          	movff	postinc2,tblptrl
  1439  000CAC  CFDD FFF7          	movff	postdec2,tblptrh
  1440  000CB0                     	if	0	;tblptru may be non-zero
  1441  000CB0                     	endif
  1442  000CB0                     	if	0	;tblptru may be non-zero
  1443  000CB0                     	endif
  1444  000CB0  0008               	tblrd		*
  1445  000CB2  50F5               	movf	tablat,w,c
  1446  000CB4  0A64               	xorlw	100
  1447  000CB6  B4D8               	btfsc	status,2,c
  1448  000CB8  EF60  F006         	goto	u1391
  1449  000CBC  EF62  F006         	goto	u1390
  1450  000CC0                     u1391:
  1451  000CC0  EF74  F006         	goto	l2050
  1452  000CC4                     u1390:
  1453  000CC4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1454  000CC8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1455  000CCC  CFDE FFF6          	movff	postinc2,tblptrl
  1456  000CD0  CFDD FFF7          	movff	postdec2,tblptrh
  1457  000CD4                     	if	0	;tblptru may be non-zero
  1458  000CD4                     	endif
  1459  000CD4                     	if	0	;tblptru may be non-zero
  1460  000CD4                     	endif
  1461  000CD4  0008               	tblrd		*
  1462  000CD6  50F5               	movf	tablat,w,c
  1463  000CD8  0A69               	xorlw	105
  1464  000CDA  A4D8               	btfss	status,2,c
  1465  000CDC  EF72  F006         	goto	u1401
  1466  000CE0  EF74  F006         	goto	u1400
  1467  000CE4                     u1401:
  1468  000CE4  EFB4  F006         	goto	l2056
  1469  000CE8                     u1400:
  1470  000CE8                     l2050:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1473  000CE8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1474  000CEC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1475  000CF0  2ADE               	incf	postinc2,f,c
  1476  000CF2  0E00               	movlw	0
  1477  000CF4  22DD               	addwfc	postdec2,f,c
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1480  000CF6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1481  000CFA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1482  000CFE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1483  000D02  0E02               	movlw	2
  1484  000D04  26DE               	addwf	postinc2,f,c
  1485  000D06  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1486  000D0A  0E00               	movlw	0
  1487  000D0C  22DD               	addwfc	postdec2,f,c
  1488  000D0E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1489  000D12  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1490  000D16  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1491  000D1A  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1492  000D1E  0E00               	movlw	0
  1493  000D20  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1494  000D22  0EFF               	movlw	-1
  1495  000D24  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1496  000D26  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1497  000D28  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1498  000D2A  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1499  000D2C  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1500  000D2E  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1501  000D30                     
  1502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1503  000D30  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1504  000D34  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1505  000D38  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1506  000D3C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1507  000D40  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1508  000D44  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1509  000D48  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1510  000D4C  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1511  000D50  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1512  000D54  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1513  000D58  ECBE  F004         	call	_dtoa	;wreg free
  1514  000D5C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1515  000D60  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1516  000D64  EF05  F007         	goto	l981
  1517  000D68                     l2056:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1520  000D68  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1521  000D6C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1522  000D70  CFDE FFF6          	movff	postinc2,tblptrl
  1523  000D74  CFDD FFF7          	movff	postdec2,tblptrh
  1524  000D78                     	if	0	;tblptru may be non-zero
  1525  000D78                     	endif
  1526  000D78                     	if	0	;tblptru may be non-zero
  1527  000D78                     	endif
  1528  000D78  0008               	tblrd		*
  1529  000D7A  50F5               	movf	tablat,w,c
  1530  000D7C  0A25               	xorlw	37
  1531  000D7E  A4D8               	btfss	status,2,c
  1532  000D80  EFC4  F006         	goto	u1411
  1533  000D84  EFC6  F006         	goto	u1410
  1534  000D88                     u1411:
  1535  000D88  EFDD  F006         	goto	l2066
  1536  000D8C                     u1410:
  1537  000D8C                     
  1538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1539  000D8C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1540  000D90  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1541  000D94  2ADE               	incf	postinc2,f,c
  1542  000D96  0E00               	movlw	0
  1543  000D98  22DD               	addwfc	postdec2,f,c
  1544  000D9A                     
  1545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1546  000D9A  0E00               	movlw	0
  1547  000D9C  6E02               	movwf	(fputc@c+1)^0,c
  1548  000D9E  0E25               	movlw	37
  1549  000DA0  6E01               	movwf	fputc@c^0,c
  1550  000DA2  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1551  000DA6  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1552  000DAA  ECE9  F008         	call	_fputc	;wreg free
  1553  000DAE                     l2062:
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1556  000DAE  0E00               	movlw	0
  1557  000DB0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1558  000DB2  0E01               	movlw	1
  1559  000DB4  6E40               	movwf	?_vfpfcnvrt^0,c
  1560  000DB6  EF05  F007         	goto	l981
  1561  000DBA                     l2066:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1564  000DBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1565  000DBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1566  000DC2  2ADE               	incf	postinc2,f,c
  1567  000DC4  0E00               	movlw	0
  1568  000DC6  22DD               	addwfc	postdec2,f,c
  1569  000DC8                     
  1570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1571  000DC8  0E00               	movlw	0
  1572  000DCA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1573  000DCC  0E00               	movlw	0
  1574  000DCE  6E40               	movwf	?_vfpfcnvrt^0,c
  1575  000DD0  EF05  F007         	goto	l981
  1576  000DD4                     l2072:
  1577                           
  1578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1579  000DD4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1580  000DD8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1581  000DDC  CFDE FFF6          	movff	postinc2,tblptrl
  1582  000DE0  CFDD FFF7          	movff	postdec2,tblptrh
  1583  000DE4                     	if	0	;tblptru may be non-zero
  1584  000DE4                     	endif
  1585  000DE4                     	if	0	;tblptru may be non-zero
  1586  000DE4                     	endif
  1587  000DE4  0008               	tblrd		*
  1588  000DE6  50F5               	movf	tablat,w,c
  1589  000DE8  6E01               	movwf	fputc@c^0,c
  1590  000DEA  6A02               	clrf	(fputc@c+1)^0,c
  1591  000DEC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1592  000DF0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1593  000DF4  ECE9  F008         	call	_fputc	;wreg free
  1594  000DF8                     
  1595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1596  000DF8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1597  000DFC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1598  000E00  2ADE               	incf	postinc2,f,c
  1599  000E02  0E00               	movlw	0
  1600  000E04  22DD               	addwfc	postdec2,f,c
  1601  000E06  EFD7  F006         	goto	l2062
  1602  000E0A                     l981:
  1603  000E0A  0012               	return		;funcret
  1604  000E0C                     __end_of_vfpfcnvrt:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _dtoa *****************
  1608 ;; Defined at:
  1609 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1612 ;;		 -> sprintf@f(6), 
  1613 ;;  d               8   29[COMRAM] long long 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  n               8   53[COMRAM] long long 
  1616 ;;  i               2   61[COMRAM] int 
  1617 ;;  s               2   51[COMRAM] int 
  1618 ;;  w               2   49[COMRAM] int 
  1619 ;;  p               2   47[COMRAM] int 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2   27[COMRAM] int 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:        10       0       0       0       0       0       0
  1630 ;;      Locals:        18       0       0       0       0       0       0
  1631 ;;      Temps:          8       0       0       0       0       0       0
  1632 ;;      Totals:        36       0       0       0       0       0       0
  1633 ;;Total ram usage:       36 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 4
  1636 ;; This function calls:
  1637 ;;		___aodiv
  1638 ;;		___aomod
  1639 ;;		_abs
  1640 ;;		_pad
  1641 ;; This function is called by:
  1642 ;;		_vfpfcnvrt
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text4
  1647  00097C                     __ptext4:
  1648                           	callstack 0
  1649  00097C                     _dtoa:
  1650                           	callstack 23
  1651  00097C                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1653  00097C  C01E  F036         	movff	dtoa@d,dtoa@n
  1654  000980  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1655  000984  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1656  000988  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1657  00098C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1658  000990  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1659  000994  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1660  000998  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1661  00099C                     
  1662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1663  00099C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1664  00099E  EFD3  F004         	goto	u1091
  1665  0009A2  EFD6  F004         	goto	u1090
  1666  0009A6                     u1091:
  1667  0009A6  0E01               	movlw	1
  1668  0009A8  EFD7  F004         	goto	u1100
  1669  0009AC                     u1090:
  1670  0009AC  0E00               	movlw	0
  1671  0009AE                     u1100:
  1672  0009AE  6E34               	movwf	dtoa@s^0,c
  1673  0009B0  6A35               	clrf	(dtoa@s+1)^0,c
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1676  0009B2  5034               	movf	dtoa@s^0,w,c
  1677  0009B4  1035               	iorwf	(dtoa@s+1)^0,w,c
  1678  0009B6  B4D8               	btfsc	status,2,c
  1679  0009B8  EFE0  F004         	goto	u1111
  1680  0009BC  EFE2  F004         	goto	u1110
  1681  0009C0                     u1111:
  1682  0009C0  EFF2  F004         	goto	l1890
  1683  0009C4                     u1110:
  1684  0009C4                     
  1685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1686  0009C4  1E3D               	comf	(dtoa@n+7)^0,f,c
  1687  0009C6  1E3C               	comf	(dtoa@n+6)^0,f,c
  1688  0009C8  1E3B               	comf	(dtoa@n+5)^0,f,c
  1689  0009CA  1E3A               	comf	(dtoa@n+4)^0,f,c
  1690  0009CC  1E39               	comf	(dtoa@n+3)^0,f,c
  1691  0009CE  1E38               	comf	(dtoa@n+2)^0,f,c
  1692  0009D0  1E37               	comf	(dtoa@n+1)^0,f,c
  1693  0009D2  6C36               	negf	dtoa@n^0,c
  1694  0009D4  0E00               	movlw	0
  1695  0009D6  2237               	addwfc	(dtoa@n+1)^0,f,c
  1696  0009D8  2238               	addwfc	(dtoa@n+2)^0,f,c
  1697  0009DA  2239               	addwfc	(dtoa@n+3)^0,f,c
  1698  0009DC  223A               	addwfc	(dtoa@n+4)^0,f,c
  1699  0009DE  223B               	addwfc	(dtoa@n+5)^0,f,c
  1700  0009E0  223C               	addwfc	(dtoa@n+6)^0,f,c
  1701  0009E2  223D               	addwfc	(dtoa@n+7)^0,f,c
  1702  0009E4                     l1890:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1705  0009E4  BE7B               	btfsc	(_prec+1)^0,7,c
  1706  0009E6  EFF7  F004         	goto	u1121
  1707  0009EA  EFF9  F004         	goto	u1120
  1708  0009EE                     u1121:
  1709  0009EE  EFFA  F004         	goto	l1894
  1710  0009F2                     u1120:
  1711  0009F2                     
  1712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1713  0009F2  927C               	bcf	_flags^0,1,c
  1714  0009F4                     l1894:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1717  0009F4  BE7B               	btfsc	(_prec+1)^0,7,c
  1718  0009F6  EF07  F005         	goto	u1130
  1719  0009FA  507B               	movf	(_prec+1)^0,w,c
  1720  0009FC  E106               	bnz	u1131
  1721  0009FE  047A               	decf	_prec^0,w,c
  1722  000A00  B0D8               	btfsc	status,0,c
  1723  000A02  EF05  F005         	goto	u1131
  1724  000A06  EF07  F005         	goto	u1130
  1725  000A0A                     u1131:
  1726  000A0A  EF0D  F005         	goto	l954
  1727  000A0E                     u1130:
  1728  000A0E  0E00               	movlw	0
  1729  000A10  6E31               	movwf	(dtoa@p+1)^0,c
  1730  000A12  0E01               	movlw	1
  1731  000A14  6E30               	movwf	dtoa@p^0,c
  1732  000A16  EF11  F005         	goto	l956
  1733  000A1A                     l954:
  1734  000A1A  C07A  F030         	movff	_prec,dtoa@p
  1735  000A1E  C07B  F031         	movff	_prec+1,dtoa@p+1
  1736  000A22                     l956:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1739  000A22  C078  F032         	movff	_width,dtoa@w
  1740  000A26  C079  F033         	movff	_width+1,dtoa@w+1
  1741  000A2A                     
  1742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1743  000A2A  5034               	movf	dtoa@s^0,w,c
  1744  000A2C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1745  000A2E  A4D8               	btfss	status,2,c
  1746  000A30  EF1C  F005         	goto	u1141
  1747  000A34  EF1E  F005         	goto	u1140
  1748  000A38                     u1141:
  1749  000A38  EF25  F005         	goto	l1902
  1750  000A3C                     u1140:
  1751  000A3C  A47C               	btfss	_flags^0,2,c
  1752  000A3E  EF23  F005         	goto	u1151
  1753  000A42  EF25  F005         	goto	u1150
  1754  000A46                     u1151:
  1755  000A46  EF28  F005         	goto	l1904
  1756  000A4A                     u1150:
  1757  000A4A                     l1902:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1760  000A4A  0632               	decf	dtoa@w^0,f,c
  1761  000A4C  A0D8               	btfss	status,0,c
  1762  000A4E  0633               	decf	(dtoa@w+1)^0,f,c
  1763  000A50                     l1904:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1766  000A50  0E00               	movlw	0
  1767  000A52  6E3F               	movwf	(dtoa@i+1)^0,c
  1768  000A54  0E1F               	movlw	31
  1769  000A56  6E3E               	movwf	dtoa@i^0,c
  1770  000A58                     
  1771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1772  000A58  0E00               	movlw	0
  1773  000A5A  0100               	movlb	0	; () banked
  1774  000A5C  6FA1               	movwf	(_dbuf+31)& (0+255),b
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1777  000A5E  EFAD  F005         	goto	l1918
  1778  000A62                     l1908:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1781  000A62  063E               	decf	dtoa@i^0,f,c
  1782  000A64  A0D8               	btfss	status,0,c
  1783  000A66  063F               	decf	(dtoa@i+1)^0,f,c
  1784  000A68                     
  1785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1786  000A68  0E82               	movlw	low _dbuf
  1787  000A6A  243E               	addwf	dtoa@i^0,w,c
  1788  000A6C  6ED9               	movwf	fsr2l,c
  1789  000A6E  0E00               	movlw	high _dbuf
  1790  000A70  203F               	addwfc	(dtoa@i+1)^0,w,c
  1791  000A72  6EDA               	movwf	fsr2h,c
  1792  000A74  C036  F001         	movff	dtoa@n,___aomod@dividend
  1793  000A78  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1794  000A7C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1795  000A80  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1796  000A84  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1797  000A88  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1798  000A8C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1799  000A90  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1800  000A94  0E0A               	movlw	10
  1801  000A96  6E09               	movwf	___aomod@divisor^0,c
  1802  000A98  0E00               	movlw	0
  1803  000A9A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1804  000A9C  0E00               	movlw	0
  1805  000A9E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1806  000AA0  0E00               	movlw	0
  1807  000AA2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1808  000AA4  0E00               	movlw	0
  1809  000AA6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1810  000AA8  0E00               	movlw	0
  1811  000AAA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1812  000AAC  0E00               	movlw	0
  1813  000AAE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1814  000AB0  0E00               	movlw	0
  1815  000AB2  6E10               	movwf	(___aomod@divisor+7)^0,c
  1816  000AB4  ECCA  F007         	call	___aomod	;wreg free
  1817  000AB8  C001  F026         	movff	?___aomod,??_dtoa
  1818  000ABC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1819  000AC0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1820  000AC4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1821  000AC8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1822  000ACC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1823  000AD0  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1824  000AD4  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1825  000AD8  C026  F013         	movff	??_dtoa,abs@a
  1826  000ADC  C028  F014         	movff	??_dtoa+2,abs@a+1
  1827  000AE0  ECC1  F00D         	call	_abs	;wreg free
  1828  000AE4  5013               	movf	?_abs^0,w,c
  1829  000AE6  0F30               	addlw	48
  1830  000AE8  6EDF               	movwf	indf2,c
  1831  000AEA                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1833  000AEA  0630               	decf	dtoa@p^0,f,c
  1834  000AEC  A0D8               	btfss	status,0,c
  1835  000AEE  0631               	decf	(dtoa@p+1)^0,f,c
  1836  000AF0                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1838  000AF0  0632               	decf	dtoa@w^0,f,c
  1839  000AF2  A0D8               	btfss	status,0,c
  1840  000AF4  0633               	decf	(dtoa@w+1)^0,f,c
  1841  000AF6                     
  1842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1843  000AF6  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1844  000AFA  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1845  000AFE  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1846  000B02  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1847  000B06  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1848  000B0A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1849  000B0E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1850  000B12  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1851  000B16  0E0A               	movlw	10
  1852  000B18  6E09               	movwf	___aodiv@divisor^0,c
  1853  000B1A  0E00               	movlw	0
  1854  000B1C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1855  000B1E  0E00               	movlw	0
  1856  000B20  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1857  000B22  0E00               	movlw	0
  1858  000B24  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1859  000B26  0E00               	movlw	0
  1860  000B28  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1861  000B2A  0E00               	movlw	0
  1862  000B2C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1863  000B2E  0E00               	movlw	0
  1864  000B30  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1865  000B32  0E00               	movlw	0
  1866  000B34  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1867  000B36  EC06  F007         	call	___aodiv	;wreg free
  1868  000B3A  C001  F036         	movff	?___aodiv,dtoa@n
  1869  000B3E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1870  000B42  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1871  000B46  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1872  000B4A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1873  000B4E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1874  000B52  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1875  000B56  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1876  000B5A                     l1918:
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1879  000B5A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1880  000B5C  EFB8  F005         	goto	u1161
  1881  000B60  503F               	movf	(dtoa@i+1)^0,w,c
  1882  000B62  E108               	bnz	u1160
  1883  000B64  043E               	decf	dtoa@i^0,w,c
  1884  000B66  A0D8               	btfss	status,0,c
  1885  000B68  EFB8  F005         	goto	u1161
  1886  000B6C  EFBA  F005         	goto	u1160
  1887  000B70                     u1161:
  1888  000B70  EFEA  F005         	goto	l1928
  1889  000B74                     u1160:
  1890  000B74  5036               	movf	dtoa@n^0,w,c
  1891  000B76  1037               	iorwf	(dtoa@n+1)^0,w,c
  1892  000B78  1038               	iorwf	(dtoa@n+2)^0,w,c
  1893  000B7A  1039               	iorwf	(dtoa@n+3)^0,w,c
  1894  000B7C  103A               	iorwf	(dtoa@n+4)^0,w,c
  1895  000B7E  103B               	iorwf	(dtoa@n+5)^0,w,c
  1896  000B80  103C               	iorwf	(dtoa@n+6)^0,w,c
  1897  000B82  103D               	iorwf	(dtoa@n+7)^0,w,c
  1898  000B84  A4D8               	btfss	status,2,c
  1899  000B86  EFC7  F005         	goto	u1171
  1900  000B8A  EFC9  F005         	goto	u1170
  1901  000B8E                     u1171:
  1902  000B8E  EF31  F005         	goto	l1908
  1903  000B92                     u1170:
  1904  000B92  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1905  000B94  EFD6  F005         	goto	u1180
  1906  000B98  5031               	movf	(dtoa@p+1)^0,w,c
  1907  000B9A  E106               	bnz	u1181
  1908  000B9C  0430               	decf	dtoa@p^0,w,c
  1909  000B9E  B0D8               	btfsc	status,0,c
  1910  000BA0  EFD4  F005         	goto	u1181
  1911  000BA4  EFD6  F005         	goto	u1180
  1912  000BA8                     u1181:
  1913  000BA8  EF31  F005         	goto	l1908
  1914  000BAC                     u1180:
  1915  000BAC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1916  000BAE  EFE1  F005         	goto	u1191
  1917  000BB2  5033               	movf	(dtoa@w+1)^0,w,c
  1918  000BB4  E108               	bnz	u1190
  1919  000BB6  0432               	decf	dtoa@w^0,w,c
  1920  000BB8  A0D8               	btfss	status,0,c
  1921  000BBA  EFE1  F005         	goto	u1191
  1922  000BBE  EFE3  F005         	goto	u1190
  1923  000BC2                     u1191:
  1924  000BC2  EFEA  F005         	goto	l1928
  1925  000BC6                     u1190:
  1926  000BC6  B27C               	btfsc	_flags^0,1,c
  1927  000BC8  EFE8  F005         	goto	u1201
  1928  000BCC  EFEA  F005         	goto	u1200
  1929  000BD0                     u1201:
  1930  000BD0  EF31  F005         	goto	l1908
  1931  000BD4                     u1200:
  1932  000BD4                     l1928:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1935  000BD4  5034               	movf	dtoa@s^0,w,c
  1936  000BD6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1937  000BD8  A4D8               	btfss	status,2,c
  1938  000BDA  EFF1  F005         	goto	u1211
  1939  000BDE  EFF3  F005         	goto	u1210
  1940  000BE2                     u1211:
  1941  000BE2  EFFA  F005         	goto	l1932
  1942  000BE6                     u1210:
  1943  000BE6  A47C               	btfss	_flags^0,2,c
  1944  000BE8  EFF8  F005         	goto	u1221
  1945  000BEC  EFFA  F005         	goto	u1220
  1946  000BF0                     u1221:
  1947  000BF0  EF18  F006         	goto	l1942
  1948  000BF4                     u1220:
  1949  000BF4                     l1932:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1952  000BF4  063E               	decf	dtoa@i^0,f,c
  1953  000BF6  A0D8               	btfss	status,0,c
  1954  000BF8  063F               	decf	(dtoa@i+1)^0,f,c
  1955  000BFA                     
  1956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1957  000BFA  5034               	movf	dtoa@s^0,w,c
  1958  000BFC  1035               	iorwf	(dtoa@s+1)^0,w,c
  1959  000BFE  A4D8               	btfss	status,2,c
  1960  000C00  EF04  F006         	goto	u1231
  1961  000C04  EF06  F006         	goto	u1230
  1962  000C08                     u1231:
  1963  000C08  EF0C  F006         	goto	l1938
  1964  000C0C                     u1230:
  1965  000C0C  0E00               	movlw	0
  1966  000C0E  6E2F               	movwf	(_dtoa$1116+1)^0,c
  1967  000C10  0E2B               	movlw	43
  1968  000C12  6E2E               	movwf	_dtoa$1116^0,c
  1969  000C14  EF10  F006         	goto	l1940
  1970  000C18                     l1938:
  1971  000C18  0E00               	movlw	0
  1972  000C1A  6E2F               	movwf	(_dtoa$1116+1)^0,c
  1973  000C1C  0E2D               	movlw	45
  1974  000C1E  6E2E               	movwf	_dtoa$1116^0,c
  1975  000C20                     l1940:
  1976  000C20  0E82               	movlw	low _dbuf
  1977  000C22  243E               	addwf	dtoa@i^0,w,c
  1978  000C24  6ED9               	movwf	fsr2l,c
  1979  000C26  0E00               	movlw	high _dbuf
  1980  000C28  203F               	addwfc	(dtoa@i+1)^0,w,c
  1981  000C2A  6EDA               	movwf	fsr2h,c
  1982  000C2C  C02E  FFDF         	movff	_dtoa$1116,indf2
  1983  000C30                     l1942:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1986  000C30  C01C  F011         	movff	dtoa@fp,pad@fp
  1987  000C34  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1988  000C38  0E82               	movlw	low _dbuf
  1989  000C3A  243E               	addwf	dtoa@i^0,w,c
  1990  000C3C  6E13               	movwf	pad@buf^0,c
  1991  000C3E  0E00               	movlw	high _dbuf
  1992  000C40  203F               	addwfc	(dtoa@i+1)^0,w,c
  1993  000C42  6E14               	movwf	(pad@buf+1)^0,c
  1994  000C44  C032  F015         	movff	dtoa@w,pad@p
  1995  000C48  C033  F016         	movff	dtoa@w+1,pad@p+1
  1996  000C4C  ECB0  F009         	call	_pad	;wreg free
  1997  000C50  C011  F01C         	movff	?_pad,?_dtoa
  1998  000C54  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1999  000C58  0012               	return		;funcret
  2000  000C5A                     __end_of_dtoa:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _pad *****************
  2004 ;; Defined at:
  2005 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2008 ;;		 -> sprintf@f(6), 
  2009 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2010 ;;		 -> dbuf(32), 
  2011 ;;  p               2   20[COMRAM] int 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  w               2   25[COMRAM] int 
  2014 ;;  i               2   23[COMRAM] int 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2   16[COMRAM] int 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2024 ;;      Params:         6       0       0       0       0       0       0
  2025 ;;      Locals:         4       0       0       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0       0       0
  2027 ;;      Totals:        11       0       0       0       0       0       0
  2028 ;;Total ram usage:       11 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 3
  2031 ;; This function calls:
  2032 ;;		_fputc
  2033 ;;		_fputs
  2034 ;;		_strlen
  2035 ;; This function is called by:
  2036 ;;		_dtoa
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text5
  2041  001360                     __ptext5:
  2042                           	callstack 0
  2043  001360                     _pad:
  2044                           	callstack 23
  2045  001360                     
  2046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2047  001360  A07C               	btfss	_flags^0,0,c
  2048  001362  EFB5  F009         	goto	u1041
  2049  001366  EFB7  F009         	goto	u1040
  2050  00136A                     u1041:
  2051  00136A  EFC1  F009         	goto	l1862
  2052  00136E                     u1040:
  2053  00136E                     
  2054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2055  00136E  C013  F00A         	movff	pad@buf,fputs@s
  2056  001372  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2057  001376  C011  F00C         	movff	pad@fp,fputs@fp
  2058  00137A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2059  00137E  EC9F  F00D         	call	_fputs	;wreg free
  2060  001382                     l1862:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2063  001382  BE16               	btfsc	(pad@p+1)^0,7,c
  2064  001384  EFC6  F009         	goto	u1051
  2065  001388  EFC8  F009         	goto	u1050
  2066  00138C                     u1051:
  2067  00138C  EFCE  F009         	goto	l1866
  2068  001390                     u1050:
  2069  001390  C015  F01A         	movff	pad@p,pad@w
  2070  001394  C016  F01B         	movff	pad@p+1,pad@w+1
  2071  001398  EFD2  F009         	goto	l943
  2072  00139C                     l1866:
  2073  00139C  0E00               	movlw	0
  2074  00139E  6E1B               	movwf	(pad@w+1)^0,c
  2075  0013A0  0E00               	movlw	0
  2076  0013A2  6E1A               	movwf	pad@w^0,c
  2077  0013A4                     l943:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2080  0013A4  0E00               	movlw	0
  2081  0013A6  6E19               	movwf	(pad@i+1)^0,c
  2082  0013A8  0E00               	movlw	0
  2083  0013AA  6E18               	movwf	pad@i^0,c
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2086  0013AC  EFE4  F009         	goto	l1872
  2087  0013B0                     l1868:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2090  0013B0  0E00               	movlw	0
  2091  0013B2  6E02               	movwf	(fputc@c+1)^0,c
  2092  0013B4  0E20               	movlw	32
  2093  0013B6  6E01               	movwf	fputc@c^0,c
  2094  0013B8  C011  F003         	movff	pad@fp,fputc@fp
  2095  0013BC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2096  0013C0  ECE9  F008         	call	_fputc	;wreg free
  2097  0013C4                     
  2098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2099  0013C4  4A18               	infsnz	pad@i^0,f,c
  2100  0013C6  2A19               	incf	(pad@i+1)^0,f,c
  2101  0013C8                     l1872:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2104  0013C8  501A               	movf	pad@w^0,w,c
  2105  0013CA  5C18               	subwf	pad@i^0,w,c
  2106  0013CC  5019               	movf	(pad@i+1)^0,w,c
  2107  0013CE  0A80               	xorlw	128
  2108  0013D0  6E17               	movwf	??_pad^0,c
  2109  0013D2  501B               	movf	(pad@w+1)^0,w,c
  2110  0013D4  0A80               	xorlw	128
  2111  0013D6  5817               	subwfb	??_pad^0,w,c
  2112  0013D8  A0D8               	btfss	status,0,c
  2113  0013DA  EFF1  F009         	goto	u1061
  2114  0013DE  EFF3  F009         	goto	u1060
  2115  0013E2                     u1061:
  2116  0013E2  EFD8  F009         	goto	l1868
  2117  0013E6                     u1060:
  2118  0013E6                     
  2119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2120  0013E6  B07C               	btfsc	_flags^0,0,c
  2121  0013E8  EFF8  F009         	goto	u1071
  2122  0013EC  EFFA  F009         	goto	u1070
  2123  0013F0                     u1071:
  2124  0013F0  EF04  F00A         	goto	l1876
  2125  0013F4                     u1070:
  2126  0013F4                     
  2127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2128  0013F4  C013  F00A         	movff	pad@buf,fputs@s
  2129  0013F8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2130  0013FC  C011  F00C         	movff	pad@fp,fputs@fp
  2131  001400  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2132  001404  EC9F  F00D         	call	_fputs	;wreg free
  2133  001408                     l1876:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2136  001408  C013  F001         	movff	pad@buf,strlen@s
  2137  00140C  C014  F002         	movff	pad@buf+1,strlen@s+1
  2138  001410  EC1E  F00E         	call	_strlen	;wreg free
  2139  001414  501A               	movf	pad@w^0,w,c
  2140  001416  2401               	addwf	?_strlen^0,w,c
  2141  001418  6E11               	movwf	?_pad^0,c
  2142  00141A  501B               	movf	(pad@w+1)^0,w,c
  2143  00141C  2002               	addwfc	(?_strlen+1)^0,w,c
  2144  00141E  6E12               	movwf	(?_pad+1)^0,c
  2145  001420  0012               	return		;funcret
  2146  001422                     __end_of_pad:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _strlen *****************
  2150 ;; Defined at:
  2151 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2154 ;;		 -> dbuf(32), 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2157 ;;		 -> dbuf(32), 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  2    0[COMRAM] unsigned int 
  2160 ;; Registers used:
  2161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2167 ;;      Params:         2       0       0       0       0       0       0
  2168 ;;      Locals:         2       0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0
  2170 ;;      Totals:         4       0       0       0       0       0       0
  2171 ;;Total ram usage:        4 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_pad
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text6
  2181  001C3C                     __ptext6:
  2182                           	callstack 0
  2183  001C3C                     _strlen:
  2184                           	callstack 25
  2185  001C3C  C001  F003         	movff	strlen@s,strlen@a
  2186  001C40  C002  F004         	movff	strlen@s+1,strlen@a+1
  2187  001C44  EF26  F00E         	goto	l1772
  2188  001C48                     l1770:
  2189  001C48  4A01               	infsnz	strlen@s^0,f,c
  2190  001C4A  2A02               	incf	(strlen@s+1)^0,f,c
  2191  001C4C                     l1772:
  2192  001C4C  C001  FFD9         	movff	strlen@s,fsr2l
  2193  001C50  C002  FFDA         	movff	strlen@s+1,fsr2h
  2194  001C54  50DF               	movf	indf2,w,c
  2195  001C56  A4D8               	btfss	status,2,c
  2196  001C58  EF30  F00E         	goto	u901
  2197  001C5C  EF32  F00E         	goto	u900
  2198  001C60                     u901:
  2199  001C60  EF24  F00E         	goto	l1770
  2200  001C64                     u900:
  2201  001C64  5003               	movf	strlen@a^0,w,c
  2202  001C66  5C01               	subwf	strlen@s^0,w,c
  2203  001C68  6E01               	movwf	?_strlen^0,c
  2204  001C6A  5004               	movf	(strlen@a+1)^0,w,c
  2205  001C6C  5802               	subwfb	(strlen@s+1)^0,w,c
  2206  001C6E  6E02               	movwf	(?_strlen+1)^0,c
  2207  001C70  0012               	return		;funcret
  2208  001C72                     __end_of_strlen:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _fputs *****************
  2212 ;; Defined at:
  2213 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2216 ;;		 -> dbuf(32), 
  2217 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2218 ;;		 -> sprintf@f(6), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  i               2   14[COMRAM] int 
  2221 ;;  c               1   13[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2    9[COMRAM] int 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         4       0       0       0       0       0       0
  2232 ;;      Locals:         3       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0
  2234 ;;      Totals:         7       0       0       0       0       0       0
  2235 ;;Total ram usage:        7 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 2
  2238 ;; This function calls:
  2239 ;;		_fputc
  2240 ;; This function is called by:
  2241 ;;		_pad
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text7
  2246  001B3E                     __ptext7:
  2247                           	callstack 0
  2248  001B3E                     _fputs:
  2249                           	callstack 23
  2250  001B3E  0E00               	movlw	0
  2251  001B40  6E10               	movwf	(fputs@i+1)^0,c
  2252  001B42  0E00               	movlw	0
  2253  001B44  6E0F               	movwf	fputs@i^0,c
  2254  001B46  EFB0  F00D         	goto	l1766
  2255  001B4A                     l1762:
  2256  001B4A  C00E  F001         	movff	fputs@c,fputc@c
  2257  001B4E  6A02               	clrf	(fputc@c+1)^0,c
  2258  001B50  C00C  F003         	movff	fputs@fp,fputc@fp
  2259  001B54  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2260  001B58  ECE9  F008         	call	_fputc	;wreg free
  2261  001B5C  4A0F               	infsnz	fputs@i^0,f,c
  2262  001B5E  2A10               	incf	(fputs@i+1)^0,f,c
  2263  001B60                     l1766:
  2264  001B60  500F               	movf	fputs@i^0,w,c
  2265  001B62  240A               	addwf	fputs@s^0,w,c
  2266  001B64  6ED9               	movwf	fsr2l,c
  2267  001B66  5010               	movf	(fputs@i+1)^0,w,c
  2268  001B68  200B               	addwfc	(fputs@s+1)^0,w,c
  2269  001B6A  6EDA               	movwf	fsr2h,c
  2270  001B6C  50DF               	movf	indf2,w,c
  2271  001B6E  6E0E               	movwf	fputs@c^0,c
  2272  001B70  500E               	movf	fputs@c^0,w,c
  2273  001B72  A4D8               	btfss	status,2,c
  2274  001B74  EFBE  F00D         	goto	u891
  2275  001B78  EFC0  F00D         	goto	u890
  2276  001B7C                     u891:
  2277  001B7C  EFA5  F00D         	goto	l1762
  2278  001B80                     u890:
  2279  001B80  0012               	return		;funcret
  2280  001B82                     __end_of_fputs:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _fputc *****************
  2284 ;; Defined at:
  2285 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  c               2    0[COMRAM] int 
  2288 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2289 ;;		 -> sprintf@f(6), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2    0[COMRAM] int 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2301 ;;      Params:         4       0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0
  2303 ;;      Temps:          5       0       0       0       0       0       0
  2304 ;;      Totals:         9       0       0       0       0       0       0
  2305 ;;Total ram usage:        9 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 1
  2308 ;; This function calls:
  2309 ;;		_putch
  2310 ;; This function is called by:
  2311 ;;		_pad
  2312 ;;		_vfpfcnvrt
  2313 ;;		_fputs
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text8
  2318  0011D2                     __ptext8:
  2319                           	callstack 0
  2320  0011D2                     _fputc:
  2321                           	callstack 26
  2322  0011D2  5003               	movf	fputc@fp^0,w,c
  2323  0011D4  1004               	iorwf	(fputc@fp+1)^0,w,c
  2324  0011D6  B4D8               	btfsc	status,2,c
  2325  0011D8  EFF0  F008         	goto	u851
  2326  0011DC  EFF2  F008         	goto	u850
  2327  0011E0                     u851:
  2328  0011E0  EFFB  F008         	goto	l1750
  2329  0011E4                     u850:
  2330  0011E4  5003               	movf	fputc@fp^0,w,c
  2331  0011E6  1004               	iorwf	(fputc@fp+1)^0,w,c
  2332  0011E8  A4D8               	btfss	status,2,c
  2333  0011EA  EFF9  F008         	goto	u861
  2334  0011EE  EFFB  F008         	goto	u860
  2335  0011F2                     u861:
  2336  0011F2  EF00  F009         	goto	l1752
  2337  0011F6                     u860:
  2338  0011F6                     l1750:
  2339  0011F6  5001               	movf	fputc@c^0,w,c
  2340  0011F8  EC9D  F00E         	call	_putch
  2341  0011FC  EF4D  F009         	goto	l1007
  2342  001200                     l1752:
  2343  001200  EE20 F004          	lfsr	2,4
  2344  001204  5003               	movf	fputc@fp^0,w,c
  2345  001206  26D9               	addwf	fsr2l,f,c
  2346  001208  5004               	movf	(fputc@fp+1)^0,w,c
  2347  00120A  22DA               	addwfc	fsr2h,f,c
  2348  00120C  50DE               	movf	postinc2,w,c
  2349  00120E  10DE               	iorwf	postinc2,w,c
  2350  001210  B4D8               	btfsc	status,2,c
  2351  001212  EF0D  F009         	goto	u871
  2352  001216  EF0F  F009         	goto	u870
  2353  00121A                     u871:
  2354  00121A  EF2A  F009         	goto	l1756
  2355  00121E                     u870:
  2356  00121E  EE20 F004          	lfsr	2,4
  2357  001222  5003               	movf	fputc@fp^0,w,c
  2358  001224  26D9               	addwf	fsr2l,f,c
  2359  001226  5004               	movf	(fputc@fp+1)^0,w,c
  2360  001228  22DA               	addwfc	fsr2h,f,c
  2361  00122A  EE10 F002          	lfsr	1,2
  2362  00122E  5003               	movf	fputc@fp^0,w,c
  2363  001230  26E1               	addwf	fsr1l,f,c
  2364  001232  5004               	movf	(fputc@fp+1)^0,w,c
  2365  001234  22E2               	addwfc	fsr1h,f,c
  2366  001236  50DE               	movf	postinc2,w,c
  2367  001238  5CE6               	subwf	postinc1,w,c
  2368  00123A  50E6               	movf	postinc1,w,c
  2369  00123C  0A80               	xorlw	128
  2370  00123E  6E09               	movwf	(??_fputc+4)^0,c
  2371  001240  50DE               	movf	postinc2,w,c
  2372  001242  0A80               	xorlw	128
  2373  001244  5809               	subwfb	(??_fputc+4)^0,w,c
  2374  001246  B0D8               	btfsc	status,0,c
  2375  001248  EF28  F009         	goto	u881
  2376  00124C  EF2A  F009         	goto	u880
  2377  001250                     u881:
  2378  001250  EF4D  F009         	goto	l1007
  2379  001254                     u880:
  2380  001254                     l1756:
  2381  001254  EE20 F002          	lfsr	2,2
  2382  001258  5003               	movf	fputc@fp^0,w,c
  2383  00125A  26D9               	addwf	fsr2l,f,c
  2384  00125C  5004               	movf	(fputc@fp+1)^0,w,c
  2385  00125E  22DA               	addwfc	fsr2h,f,c
  2386  001260  CFDE F005          	movff	postinc2,??_fputc
  2387  001264  CFDD F006          	movff	postdec2,??_fputc+1
  2388  001268  C003  FFD9         	movff	fputc@fp,fsr2l
  2389  00126C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2390  001270  CFDE F007          	movff	postinc2,??_fputc+2
  2391  001274  CFDD F008          	movff	postdec2,??_fputc+3
  2392  001278  5005               	movf	??_fputc^0,w,c
  2393  00127A  2407               	addwf	(??_fputc+2)^0,w,c
  2394  00127C  6ED9               	movwf	fsr2l,c
  2395  00127E  5006               	movf	(??_fputc+1)^0,w,c
  2396  001280  2008               	addwfc	(??_fputc+3)^0,w,c
  2397  001282  6EDA               	movwf	fsr2h,c
  2398  001284  C001  FFDF         	movff	fputc@c,indf2
  2399  001288  EE20 F002          	lfsr	2,2
  2400  00128C  5003               	movf	fputc@fp^0,w,c
  2401  00128E  26D9               	addwf	fsr2l,f,c
  2402  001290  5004               	movf	(fputc@fp+1)^0,w,c
  2403  001292  22DA               	addwfc	fsr2h,f,c
  2404  001294  2ADE               	incf	postinc2,f,c
  2405  001296  0E00               	movlw	0
  2406  001298  22DD               	addwfc	postdec2,f,c
  2407  00129A                     l1007:
  2408  00129A  0012               	return		;funcret
  2409  00129C                     __end_of_fputc:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _putch *****************
  2413 ;; Defined at:
  2414 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  c               1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  c               1    0[COMRAM] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2428 ;;      Params:         0       0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_fputc
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text9
  2442  001D3A                     __ptext9:
  2443                           	callstack 0
  2444  001D3A                     _putch:
  2445                           	callstack 26
  2446  001D3A  0012               	return		;funcret
  2447  001D3C                     __end_of_putch:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _abs *****************
  2451 ;; Defined at:
  2452 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  a               2   18[COMRAM] int 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  2   18[COMRAM] int 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2466 ;;      Params:         2       0       0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0
  2468 ;;      Temps:          2       0       0       0       0       0       0
  2469 ;;      Totals:         4       0       0       0       0       0       0
  2470 ;;Total ram usage:        4 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_dtoa
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text10
  2480  001B82                     __ptext10:
  2481                           	callstack 0
  2482  001B82                     _abs:
  2483                           	callstack 26
  2484  001B82  BE14               	btfsc	(abs@a+1)^0,7,c
  2485  001B84  EFCE  F00D         	goto	u1080
  2486  001B88  5014               	movf	(abs@a+1)^0,w,c
  2487  001B8A  E106               	bnz	u1081
  2488  001B8C  0413               	decf	abs@a^0,w,c
  2489  001B8E  B0D8               	btfsc	status,0,c
  2490  001B90  EFCC  F00D         	goto	u1081
  2491  001B94  EFCE  F00D         	goto	u1080
  2492  001B98                     u1081:
  2493  001B98  EFDC  F00D         	goto	l992
  2494  001B9C                     u1080:
  2495  001B9C  C013  F015         	movff	abs@a,??_abs
  2496  001BA0  C014  F016         	movff	abs@a+1,??_abs+1
  2497  001BA4  1E15               	comf	??_abs^0,f,c
  2498  001BA6  1E16               	comf	(??_abs+1)^0,f,c
  2499  001BA8  4A15               	infsnz	??_abs^0,f,c
  2500  001BAA  2A16               	incf	(??_abs+1)^0,f,c
  2501  001BAC  C015  F013         	movff	??_abs,?_abs
  2502  001BB0  C016  F014         	movff	??_abs+1,?_abs+1
  2503  001BB4  EFE0  F00D         	goto	l995
  2504  001BB8                     l992:
  2505  001BB8  C013  F013         	movff	abs@a,?_abs
  2506  001BBC  C014  F014         	movff	abs@a+1,?_abs+1
  2507  001BC0                     l995:
  2508  001BC0  0012               	return		;funcret
  2509  001BC2                     __end_of_abs:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function ___aomod *****************
  2513 ;; Defined at:
  2514 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  dividend        8    0[COMRAM] long long 
  2517 ;;  divisor         8    8[COMRAM] long long 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  sign            1   17[COMRAM] unsigned char 
  2520 ;;  counter         1   16[COMRAM] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  8    0[COMRAM] long long 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2530 ;;      Params:        16       0       0       0       0       0       0
  2531 ;;      Locals:         2       0       0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0
  2533 ;;      Totals:        18       0       0       0       0       0       0
  2534 ;;Total ram usage:       18 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_dtoa
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text11
  2544  000F94                     __ptext11:
  2545                           	callstack 0
  2546  000F94                     ___aomod:
  2547                           	callstack 26
  2548  000F94  0E00               	movlw	0
  2549  000F96  6E12               	movwf	___aomod@sign^0,c
  2550  000F98  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2551  000F9A  EFD3  F007         	goto	u980
  2552  000F9E  EFD1  F007         	goto	u981
  2553  000FA2                     u981:
  2554  000FA2  EFE5  F007         	goto	l1830
  2555  000FA6                     u980:
  2556  000FA6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2557  000FA8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2558  000FAA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2559  000FAC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2560  000FAE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2561  000FB0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2562  000FB2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2563  000FB4  6C01               	negf	___aomod@dividend^0,c
  2564  000FB6  0E00               	movlw	0
  2565  000FB8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2566  000FBA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2567  000FBC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2568  000FBE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2569  000FC0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2570  000FC2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2571  000FC4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2572  000FC6  0E01               	movlw	1
  2573  000FC8  6E12               	movwf	___aomod@sign^0,c
  2574  000FCA                     l1830:
  2575  000FCA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2576  000FCC  EFEC  F007         	goto	u990
  2577  000FD0  EFEA  F007         	goto	u991
  2578  000FD4                     u991:
  2579  000FD4  EFFC  F007         	goto	l1834
  2580  000FD8                     u990:
  2581  000FD8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2582  000FDA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2583  000FDC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2584  000FDE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2585  000FE0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2586  000FE2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2587  000FE4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2588  000FE6  6C09               	negf	___aomod@divisor^0,c
  2589  000FE8  0E00               	movlw	0
  2590  000FEA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2591  000FEC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2592  000FEE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2593  000FF0  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2594  000FF2  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2595  000FF4  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2596  000FF6  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2597  000FF8                     l1834:
  2598  000FF8  5009               	movf	___aomod@divisor^0,w,c
  2599  000FFA  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2600  000FFC  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2601  000FFE  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2602  001000  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2603  001002  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2604  001004  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2605  001006  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2606  001008  B4D8               	btfsc	status,2,c
  2607  00100A  EF09  F008         	goto	u1001
  2608  00100E  EF0B  F008         	goto	u1000
  2609  001012                     u1001:
  2610  001012  EF53  F008         	goto	l1850
  2611  001016                     u1000:
  2612  001016  0E01               	movlw	1
  2613  001018  6E11               	movwf	___aomod@counter^0,c
  2614  00101A  EF19  F008         	goto	l1840
  2615  00101E                     l1838:
  2616  00101E  90D8               	bcf	status,0,c
  2617  001020  3609               	rlcf	___aomod@divisor^0,f,c
  2618  001022  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2619  001024  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2620  001026  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2621  001028  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2622  00102A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2623  00102C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2624  00102E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2625  001030  2A11               	incf	___aomod@counter^0,f,c
  2626  001032                     l1840:
  2627  001032  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2628  001034  EF1E  F008         	goto	u1011
  2629  001038  EF20  F008         	goto	u1010
  2630  00103C                     u1011:
  2631  00103C  EF0F  F008         	goto	l1838
  2632  001040                     u1010:
  2633  001040                     l1842:
  2634  001040  5009               	movf	___aomod@divisor^0,w,c
  2635  001042  5C01               	subwf	___aomod@dividend^0,w,c
  2636  001044  500A               	movf	(___aomod@divisor+1)^0,w,c
  2637  001046  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2638  001048  500B               	movf	(___aomod@divisor+2)^0,w,c
  2639  00104A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2640  00104C  500C               	movf	(___aomod@divisor+3)^0,w,c
  2641  00104E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2642  001050  500D               	movf	(___aomod@divisor+4)^0,w,c
  2643  001052  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2644  001054  500E               	movf	(___aomod@divisor+5)^0,w,c
  2645  001056  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2646  001058  500F               	movf	(___aomod@divisor+6)^0,w,c
  2647  00105A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2648  00105C  5010               	movf	(___aomod@divisor+7)^0,w,c
  2649  00105E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2650  001060  A0D8               	btfss	status,0,c
  2651  001062  EF35  F008         	goto	u1021
  2652  001066  EF37  F008         	goto	u1020
  2653  00106A                     u1021:
  2654  00106A  EF47  F008         	goto	l1846
  2655  00106E                     u1020:
  2656  00106E  5009               	movf	___aomod@divisor^0,w,c
  2657  001070  5E01               	subwf	___aomod@dividend^0,f,c
  2658  001072  500A               	movf	(___aomod@divisor+1)^0,w,c
  2659  001074  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2660  001076  500B               	movf	(___aomod@divisor+2)^0,w,c
  2661  001078  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2662  00107A  500C               	movf	(___aomod@divisor+3)^0,w,c
  2663  00107C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2664  00107E  500D               	movf	(___aomod@divisor+4)^0,w,c
  2665  001080  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2666  001082  500E               	movf	(___aomod@divisor+5)^0,w,c
  2667  001084  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2668  001086  500F               	movf	(___aomod@divisor+6)^0,w,c
  2669  001088  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2670  00108A  5010               	movf	(___aomod@divisor+7)^0,w,c
  2671  00108C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2672  00108E                     l1846:
  2673  00108E  90D8               	bcf	status,0,c
  2674  001090  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2675  001092  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2676  001094  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2677  001096  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2678  001098  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2679  00109A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2680  00109C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2681  00109E  3209               	rrcf	___aomod@divisor^0,f,c
  2682  0010A0  2E11               	decfsz	___aomod@counter^0,f,c
  2683  0010A2  EF20  F008         	goto	l1842
  2684  0010A6                     l1850:
  2685  0010A6  5012               	movf	___aomod@sign^0,w,c
  2686  0010A8  B4D8               	btfsc	status,2,c
  2687  0010AA  EF59  F008         	goto	u1031
  2688  0010AE  EF5B  F008         	goto	u1030
  2689  0010B2                     u1031:
  2690  0010B2  EF6B  F008         	goto	l1854
  2691  0010B6                     u1030:
  2692  0010B6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2693  0010B8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2694  0010BA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2695  0010BC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2696  0010BE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2697  0010C0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2698  0010C2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2699  0010C4  6C01               	negf	___aomod@dividend^0,c
  2700  0010C6  0E00               	movlw	0
  2701  0010C8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2702  0010CA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2703  0010CC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2704  0010CE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2705  0010D0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2706  0010D2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2707  0010D4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2708  0010D6                     l1854:
  2709  0010D6  C001  F001         	movff	___aomod@dividend,?___aomod
  2710  0010DA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2711  0010DE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2712  0010E2  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2713  0010E6  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2714  0010EA  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2715  0010EE  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2716  0010F2  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2717  0010F6  0012               	return		;funcret
  2718  0010F8                     __end_of___aomod:
  2719                           	callstack 0
  2720                           
  2721 ;; *************** function ___aodiv *****************
  2722 ;; Defined at:
  2723 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  dividend        8    0[COMRAM] long long 
  2726 ;;  divisor         8    8[COMRAM] long long 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  quotient        8   18[COMRAM] long long 
  2729 ;;  sign            1   17[COMRAM] unsigned char 
  2730 ;;  counter         1   16[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  8    0[COMRAM] long long 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2740 ;;      Params:        16       0       0       0       0       0       0
  2741 ;;      Locals:        10       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0
  2743 ;;      Totals:        26       0       0       0       0       0       0
  2744 ;;Total ram usage:       26 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_dtoa
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text12
  2754  000E0C                     __ptext12:
  2755                           	callstack 0
  2756  000E0C                     ___aodiv:
  2757                           	callstack 26
  2758  000E0C  0E00               	movlw	0
  2759  000E0E  6E12               	movwf	___aodiv@sign^0,c
  2760  000E10  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2761  000E12  EF0F  F007         	goto	u910
  2762  000E16  EF0D  F007         	goto	u911
  2763  000E1A                     u911:
  2764  000E1A  EF21  F007         	goto	l1786
  2765  000E1E                     u910:
  2766  000E1E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2767  000E20  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2768  000E22  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2769  000E24  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2770  000E26  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2771  000E28  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2772  000E2A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2773  000E2C  6C09               	negf	___aodiv@divisor^0,c
  2774  000E2E  0E00               	movlw	0
  2775  000E30  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2776  000E32  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2777  000E34  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2778  000E36  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2779  000E38  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2780  000E3A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2781  000E3C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2782  000E3E  0E01               	movlw	1
  2783  000E40  6E12               	movwf	___aodiv@sign^0,c
  2784  000E42                     l1786:
  2785  000E42  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2786  000E44  EF28  F007         	goto	u920
  2787  000E48  EF26  F007         	goto	u921
  2788  000E4C                     u921:
  2789  000E4C  EF3A  F007         	goto	l1792
  2790  000E50                     u920:
  2791  000E50  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2792  000E52  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2793  000E54  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2794  000E56  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2795  000E58  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2796  000E5A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2797  000E5C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2798  000E5E  6C01               	negf	___aodiv@dividend^0,c
  2799  000E60  0E00               	movlw	0
  2800  000E62  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2801  000E64  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2802  000E66  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2803  000E68  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2804  000E6A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2805  000E6C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2806  000E6E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2807  000E70  0E01               	movlw	1
  2808  000E72  1A12               	xorwf	___aodiv@sign^0,f,c
  2809  000E74                     l1792:
  2810  000E74  EE20  F013         	lfsr	2,___aodiv@quotient
  2811  000E78  0E07               	movlw	7
  2812  000E7A                     u931:
  2813  000E7A  6ADE               	clrf	postinc2,c
  2814  000E7C  06E8               	decf	wreg,f,c
  2815  000E7E  E2FD               	bc	u931
  2816  000E80  5009               	movf	___aodiv@divisor^0,w,c
  2817  000E82  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2818  000E84  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2819  000E86  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2820  000E88  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2821  000E8A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2822  000E8C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2823  000E8E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2824  000E90  B4D8               	btfsc	status,2,c
  2825  000E92  EF4D  F007         	goto	u941
  2826  000E96  EF4F  F007         	goto	u940
  2827  000E9A                     u941:
  2828  000E9A  EFA1  F007         	goto	l1814
  2829  000E9E                     u940:
  2830  000E9E  0E01               	movlw	1
  2831  000EA0  6E11               	movwf	___aodiv@counter^0,c
  2832  000EA2  EF5D  F007         	goto	l1800
  2833  000EA6                     l1798:
  2834  000EA6  90D8               	bcf	status,0,c
  2835  000EA8  3609               	rlcf	___aodiv@divisor^0,f,c
  2836  000EAA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2837  000EAC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2838  000EAE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2839  000EB0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2840  000EB2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2841  000EB4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2842  000EB6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2843  000EB8  2A11               	incf	___aodiv@counter^0,f,c
  2844  000EBA                     l1800:
  2845  000EBA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2846  000EBC  EF62  F007         	goto	u951
  2847  000EC0  EF64  F007         	goto	u950
  2848  000EC4                     u951:
  2849  000EC4  EF53  F007         	goto	l1798
  2850  000EC8                     u950:
  2851  000EC8                     l1802:
  2852  000EC8  90D8               	bcf	status,0,c
  2853  000ECA  3613               	rlcf	___aodiv@quotient^0,f,c
  2854  000ECC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2855  000ECE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2856  000ED0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2857  000ED2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2858  000ED4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2859  000ED6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2860  000ED8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2861  000EDA  5009               	movf	___aodiv@divisor^0,w,c
  2862  000EDC  5C01               	subwf	___aodiv@dividend^0,w,c
  2863  000EDE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2864  000EE0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2865  000EE2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2866  000EE4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2867  000EE6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2868  000EE8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2869  000EEA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2870  000EEC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2871  000EEE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2872  000EF0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2873  000EF2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2874  000EF4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2875  000EF6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2876  000EF8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2877  000EFA  A0D8               	btfss	status,0,c
  2878  000EFC  EF82  F007         	goto	u961
  2879  000F00  EF84  F007         	goto	u960
  2880  000F04                     u961:
  2881  000F04  EF95  F007         	goto	l1810
  2882  000F08                     u960:
  2883  000F08  5009               	movf	___aodiv@divisor^0,w,c
  2884  000F0A  5E01               	subwf	___aodiv@dividend^0,f,c
  2885  000F0C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2886  000F0E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2887  000F10  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2888  000F12  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2889  000F14  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2890  000F16  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2891  000F18  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2892  000F1A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2893  000F1C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2894  000F1E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2895  000F20  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2896  000F22  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2897  000F24  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2898  000F26  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2899  000F28  8013               	bsf	___aodiv@quotient^0,0,c
  2900  000F2A                     l1810:
  2901  000F2A  90D8               	bcf	status,0,c
  2902  000F2C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2903  000F2E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2904  000F30  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2905  000F32  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2906  000F34  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2907  000F36  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2908  000F38  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2909  000F3A  3209               	rrcf	___aodiv@divisor^0,f,c
  2910  000F3C  2E11               	decfsz	___aodiv@counter^0,f,c
  2911  000F3E  EF64  F007         	goto	l1802
  2912  000F42                     l1814:
  2913  000F42  5012               	movf	___aodiv@sign^0,w,c
  2914  000F44  B4D8               	btfsc	status,2,c
  2915  000F46  EFA7  F007         	goto	u971
  2916  000F4A  EFA9  F007         	goto	u970
  2917  000F4E                     u971:
  2918  000F4E  EFB9  F007         	goto	l1818
  2919  000F52                     u970:
  2920  000F52  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2921  000F54  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2922  000F56  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2923  000F58  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2924  000F5A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2925  000F5C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2926  000F5E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2927  000F60  6C13               	negf	___aodiv@quotient^0,c
  2928  000F62  0E00               	movlw	0
  2929  000F64  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2930  000F66  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2931  000F68  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2932  000F6A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2933  000F6C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2934  000F6E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2935  000F70  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2936  000F72                     l1818:
  2937  000F72  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2938  000F76  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2939  000F7A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2940  000F7E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2941  000F82  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2942  000F86  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2943  000F8A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2944  000F8E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2945  000F92  0012               	return		;funcret
  2946  000F94                     __end_of___aodiv:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _Update_Current_Date_Time *****************
  2950 ;; Defined at:
  2951 ;;		line 35 in file "ds1307.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2965 ;;      Params:         0       0       0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0
  2967 ;;      Temps:          1       0       0       0       0       0       0
  2968 ;;      Totals:         1       0       0       0       0       0       0
  2969 ;;Total ram usage:        1 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 2
  2972 ;; This function calls:
  2973 ;;		_BCD_2_DEC
  2974 ;;		_I2C_Begin
  2975 ;;		_I2C_End
  2976 ;;		_I2C_Read
  2977 ;;		_I2C_Write
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text13
  2984  0010F8                     __ptext13:
  2985                           	callstack 0
  2986  0010F8                     _Update_Current_Date_Time:
  2987                           	callstack 28
  2988  0010F8                     
  2989                           ;ds1307.c: 38:    I2C_Begin();
  2990  0010F8  EC96  F00E         	call	_I2C_Begin	;wreg free
  2991                           
  2992                           ;ds1307.c: 39:    I2C_Write((0xD0));
  2993  0010FC  0E00               	movlw	0
  2994  0010FE  6E0E               	movwf	(I2C_Write@data+1)^0,c
  2995  001100  0ED0               	movlw	208
  2996  001102  6E0D               	movwf	I2C_Write@data^0,c
  2997  001104  EC8D  F00E         	call	_I2C_Write	;wreg free
  2998                           
  2999                           ;ds1307.c: 40:    I2C_Write(0);
  3000  001108  0E00               	movlw	0
  3001  00110A  6E0E               	movwf	(I2C_Write@data+1)^0,c
  3002  00110C  0E00               	movlw	0
  3003  00110E  6E0D               	movwf	I2C_Write@data^0,c
  3004  001110  EC8D  F00E         	call	_I2C_Write	;wreg free
  3005                           
  3006                           ;ds1307.c: 41:    I2C_End();
  3007  001114  EC92  F00E         	call	_I2C_End	;wreg free
  3008                           
  3009                           ;ds1307.c: 44:    I2C_Begin();
  3010  001118  EC96  F00E         	call	_I2C_Begin	;wreg free
  3011                           
  3012                           ;ds1307.c: 45:    I2C_Write((0xD1));
  3013  00111C  0E00               	movlw	0
  3014  00111E  6E0E               	movwf	(I2C_Write@data+1)^0,c
  3015  001120  0ED1               	movlw	209
  3016  001122  6E0D               	movwf	I2C_Write@data^0,c
  3017  001124  EC8D  F00E         	call	_I2C_Write	;wreg free
  3018  001128                     
  3019                           ;ds1307.c: 46:    current_time.sec = BCD_2_DEC(I2C_Read(1));
  3020  001128  0E01               	movlw	1
  3021  00112A  EC39  F00E         	call	_I2C_Read
  3022  00112E  6E0F               	movwf	??_Update_Current_Date_Time^0,c
  3023  001130  500F               	movf	??_Update_Current_Date_Time^0,w,c
  3024  001132  6E07               	movwf	BCD_2_DEC@to_convert^0,c
  3025  001134  6A08               	clrf	(BCD_2_DEC@to_convert+1)^0,c
  3026  001136  EC7C  F00D         	call	_BCD_2_DEC	;wreg free
  3027  00113A  5007               	movf	?_BCD_2_DEC^0,w,c
  3028  00113C  6E72               	movwf	_current_time^0,c	;volatile
  3029  00113E                     
  3030                           ;ds1307.c: 47:    current_time.min = BCD_2_DEC(I2C_Read(1));
  3031  00113E  0E01               	movlw	1
  3032  001140  EC39  F00E         	call	_I2C_Read
  3033  001144  6E0F               	movwf	??_Update_Current_Date_Time^0,c
  3034  001146  500F               	movf	??_Update_Current_Date_Time^0,w,c
  3035  001148  6E07               	movwf	BCD_2_DEC@to_convert^0,c
  3036  00114A  6A08               	clrf	(BCD_2_DEC@to_convert+1)^0,c
  3037  00114C  EC7C  F00D         	call	_BCD_2_DEC	;wreg free
  3038  001150  5007               	movf	?_BCD_2_DEC^0,w,c
  3039  001152  6E73               	movwf	(_current_time+1)^0,c	;volatile
  3040  001154                     
  3041                           ;ds1307.c: 48:    current_time.hour = BCD_2_DEC(I2C_Read(1));
  3042  001154  0E01               	movlw	1
  3043  001156  EC39  F00E         	call	_I2C_Read
  3044  00115A  6E0F               	movwf	??_Update_Current_Date_Time^0,c
  3045  00115C  500F               	movf	??_Update_Current_Date_Time^0,w,c
  3046  00115E  6E07               	movwf	BCD_2_DEC@to_convert^0,c
  3047  001160  6A08               	clrf	(BCD_2_DEC@to_convert+1)^0,c
  3048  001162  EC7C  F00D         	call	_BCD_2_DEC	;wreg free
  3049  001166  5007               	movf	?_BCD_2_DEC^0,w,c
  3050  001168  6E74               	movwf	(_current_time+2)^0,c	;volatile
  3051  00116A                     
  3052                           ;ds1307.c: 49:    I2C_Read(1);
  3053  00116A  0E01               	movlw	1
  3054  00116C  EC39  F00E         	call	_I2C_Read
  3055                           
  3056                           ;ds1307.c: 50:    current_time.date = BCD_2_DEC(I2C_Read(1));
  3057  001170  0E01               	movlw	1
  3058  001172  EC39  F00E         	call	_I2C_Read
  3059  001176  6E0F               	movwf	??_Update_Current_Date_Time^0,c
  3060  001178  500F               	movf	??_Update_Current_Date_Time^0,w,c
  3061  00117A  6E07               	movwf	BCD_2_DEC@to_convert^0,c
  3062  00117C  6A08               	clrf	(BCD_2_DEC@to_convert+1)^0,c
  3063  00117E  EC7C  F00D         	call	_BCD_2_DEC	;wreg free
  3064  001182  5007               	movf	?_BCD_2_DEC^0,w,c
  3065  001184  6E75               	movwf	(_current_time+3)^0,c	;volatile
  3066                           
  3067                           ;ds1307.c: 51:    current_time.month = BCD_2_DEC(I2C_Read(1));
  3068  001186  0E01               	movlw	1
  3069  001188  EC39  F00E         	call	_I2C_Read
  3070  00118C  6E0F               	movwf	??_Update_Current_Date_Time^0,c
  3071  00118E  500F               	movf	??_Update_Current_Date_Time^0,w,c
  3072  001190  6E07               	movwf	BCD_2_DEC@to_convert^0,c
  3073  001192  6A08               	clrf	(BCD_2_DEC@to_convert+1)^0,c
  3074  001194  EC7C  F00D         	call	_BCD_2_DEC	;wreg free
  3075  001198  5007               	movf	?_BCD_2_DEC^0,w,c
  3076  00119A  6E76               	movwf	(_current_time+4)^0,c	;volatile
  3077                           
  3078                           ;ds1307.c: 52:    current_time.year = BCD_2_DEC(I2C_Read(1));
  3079  00119C  0E01               	movlw	1
  3080  00119E  EC39  F00E         	call	_I2C_Read
  3081  0011A2  6E0F               	movwf	??_Update_Current_Date_Time^0,c
  3082  0011A4  500F               	movf	??_Update_Current_Date_Time^0,w,c
  3083  0011A6  6E07               	movwf	BCD_2_DEC@to_convert^0,c
  3084  0011A8  6A08               	clrf	(BCD_2_DEC@to_convert+1)^0,c
  3085  0011AA  EC7C  F00D         	call	_BCD_2_DEC	;wreg free
  3086  0011AE  5007               	movf	?_BCD_2_DEC^0,w,c
  3087  0011B0  6E77               	movwf	(_current_time+5)^0,c	;volatile
  3088  0011B2                     
  3089                           ;ds1307.c: 53:    I2C_End();
  3090  0011B2  EC92  F00E         	call	_I2C_End	;wreg free
  3091  0011B6                     
  3092                           ;ds1307.c: 56:     I2C_Begin();
  3093  0011B6  EC96  F00E         	call	_I2C_Begin	;wreg free
  3094  0011BA                     
  3095                           ;ds1307.c: 57:     I2C_Write((0xD1));
  3096  0011BA  0E00               	movlw	0
  3097  0011BC  6E0E               	movwf	(I2C_Write@data+1)^0,c
  3098  0011BE  0ED1               	movlw	209
  3099  0011C0  6E0D               	movwf	I2C_Write@data^0,c
  3100  0011C2  EC8D  F00E         	call	_I2C_Write	;wreg free
  3101  0011C6                     
  3102                           ;ds1307.c: 58:     I2C_Read(1);
  3103  0011C6  0E01               	movlw	1
  3104  0011C8  EC39  F00E         	call	_I2C_Read
  3105  0011CC                     
  3106                           ;ds1307.c: 59:     I2C_End();
  3107  0011CC  EC92  F00E         	call	_I2C_End	;wreg free
  3108  0011D0  0012               	return		;funcret
  3109  0011D2                     __end_of_Update_Current_Date_Time:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _I2C_Read *****************
  3113 ;; Defined at:
  3114 ;;		line 47 in file "i2c.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  ack             1    wreg     unsigned char 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  ack             1    1[COMRAM] unsigned char 
  3119 ;;  incoming        1    2[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      unsigned char 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3129 ;;      Params:         0       0       0       0       0       0       0
  3130 ;;      Locals:         2       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0
  3132 ;;      Totals:         2       0       0       0       0       0       0
  3133 ;;Total ram usage:        2 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 1
  3136 ;; This function calls:
  3137 ;;		_I2C_Idle
  3138 ;; This function is called by:
  3139 ;;		_Update_Current_Date_Time
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text14
  3144  001C72                     __ptext14:
  3145                           	callstack 0
  3146  001C72                     _I2C_Read:
  3147                           	callstack 28
  3148                           
  3149                           ;incstack = 0
  3150                           ;I2C_Read@ack stored from wreg
  3151  001C72  6E02               	movwf	I2C_Read@ack^0,c
  3152  001C74                     
  3153                           ;i2c.c: 47: uint8_t I2C_Read(uint8_t ack);i2c.c: 48: {;i2c.c: 49:   uint8_t incoming;;i2
      +                          c.c: 50:   I2C_Idle();
  3154  001C74  EC63  F00E         	call	_I2C_Idle	;wreg free
  3155  001C78                     
  3156                           ;i2c.c: 51:   RCEN = 1;
  3157  001C78  86C5               	bsf	4037,3,c	;volatile
  3158                           
  3159                           ;i2c.c: 53:   I2C_Idle();
  3160  001C7A  EC63  F00E         	call	_I2C_Idle	;wreg free
  3161  001C7E                     
  3162                           ;i2c.c: 54:   incoming = SSPBUF;
  3163  001C7E  CFC9 F003          	movff	4041,I2C_Read@incoming	;volatile
  3164                           
  3165                           ;i2c.c: 56:   I2C_Idle();
  3166  001C82  EC63  F00E         	call	_I2C_Idle	;wreg free
  3167  001C86                     
  3168                           ;i2c.c: 57:   ACKDT = (ack)?0:1;
  3169  001C86  5002               	movf	I2C_Read@ack^0,w,c
  3170  001C88  B4D8               	btfsc	status,2,c
  3171  001C8A  EF49  F00E         	goto	u1421
  3172  001C8E  EF4C  F00E         	goto	u1420
  3173  001C92                     u1421:
  3174  001C92  8AC5               	bsf	4037,5,c	;volatile
  3175  001C94  EF4D  F00E         	goto	u1435
  3176  001C98                     u1420:
  3177  001C98  9AC5               	bcf	4037,5,c	;volatile
  3178  001C9A                     u1435:
  3179  001C9A                     
  3180                           ;i2c.c: 58:   ACKEN = 1;
  3181  001C9A  88C5               	bsf	4037,4,c	;volatile
  3182  001C9C                     
  3183                           ;i2c.c: 60:   return incoming;
  3184  001C9C  5003               	movf	I2C_Read@incoming^0,w,c
  3185  001C9E  0012               	return		;funcret
  3186  001CA0                     __end_of_I2C_Read:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _BCD_2_DEC *****************
  3190 ;; Defined at:
  3191 ;;		line 10 in file "ds1307.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  to_convert      2    6[COMRAM] int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    6[COMRAM] int 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3205 ;;      Params:         2       0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0
  3207 ;;      Temps:          5       0       0       0       0       0       0
  3208 ;;      Totals:         7       0       0       0       0       0       0
  3209 ;;Total ram usage:        7 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 1
  3212 ;; This function calls:
  3213 ;;		___wmul
  3214 ;; This function is called by:
  3215 ;;		_Update_Current_Date_Time
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text15
  3220  001AF8                     __ptext15:
  3221                           	callstack 0
  3222  001AF8                     _BCD_2_DEC:
  3223                           	callstack 28
  3224  001AF8                     
  3225                           ;ds1307.c: 10: int BCD_2_DEC(int to_convert);ds1307.c: 11: {;ds1307.c: 12:    return (to
      +                          _convert >> 4) * 10 + (to_convert & 0x0F);
  3226  001AF8  0E0F               	movlw	15
  3227  001AFA  1407               	andwf	BCD_2_DEC@to_convert^0,w,c
  3228  001AFC  6E09               	movwf	??_BCD_2_DEC^0,c
  3229  001AFE  0E00               	movlw	0
  3230  001B00  1408               	andwf	(BCD_2_DEC@to_convert+1)^0,w,c
  3231  001B02  6E0A               	movwf	(??_BCD_2_DEC+1)^0,c
  3232  001B04  C007  F00B         	movff	BCD_2_DEC@to_convert,??_BCD_2_DEC+2
  3233  001B08  C008  F00C         	movff	BCD_2_DEC@to_convert+1,??_BCD_2_DEC+3
  3234  001B0C  0E04               	movlw	4
  3235  001B0E  6E0D               	movwf	(??_BCD_2_DEC+4)^0,c
  3236  001B10                     u1445:
  3237  001B10  340C               	rlcf	(??_BCD_2_DEC+3)^0,w,c
  3238  001B12  320C               	rrcf	(??_BCD_2_DEC+3)^0,f,c
  3239  001B14  320B               	rrcf	(??_BCD_2_DEC+2)^0,f,c
  3240  001B16  2E0D               	decfsz	(??_BCD_2_DEC+4)^0,f,c
  3241  001B18  EF88  F00D         	goto	u1445
  3242  001B1C  C00B  F001         	movff	??_BCD_2_DEC+2,___wmul@multiplier
  3243  001B20  C00C  F002         	movff	??_BCD_2_DEC+3,___wmul@multiplier+1
  3244  001B24  0E00               	movlw	0
  3245  001B26  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3246  001B28  0E0A               	movlw	10
  3247  001B2A  6E03               	movwf	___wmul@multiplicand^0,c
  3248  001B2C  EC50  F00E         	call	___wmul	;wreg free
  3249  001B30  5009               	movf	??_BCD_2_DEC^0,w,c
  3250  001B32  2401               	addwf	?___wmul^0,w,c
  3251  001B34  6E07               	movwf	?_BCD_2_DEC^0,c
  3252  001B36  500A               	movf	(??_BCD_2_DEC+1)^0,w,c
  3253  001B38  2002               	addwfc	(?___wmul+1)^0,w,c
  3254  001B3A  6E08               	movwf	(?_BCD_2_DEC+1)^0,c
  3255  001B3C  0012               	return		;funcret
  3256  001B3E                     __end_of_BCD_2_DEC:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function ___wmul *****************
  3260 ;; Defined at:
  3261 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  multiplier      2    0[COMRAM] unsigned int 
  3264 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  product         2    4[COMRAM] unsigned int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  2    0[COMRAM] unsigned int 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, prodl, prodh
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3276 ;;      Params:         4       0       0       0       0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0
  3279 ;;      Totals:         6       0       0       0       0       0       0
  3280 ;;Total ram usage:        6 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_BCD_2_DEC
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text16
  3290  001CA0                     __ptext16:
  3291                           	callstack 0
  3292  001CA0                     ___wmul:
  3293                           	callstack 28
  3294  001CA0  5001               	movf	___wmul@multiplier^0,w,c
  3295  001CA2  0203               	mulwf	___wmul@multiplicand^0,c
  3296  001CA4  CFF3 F005          	movff	prodl,___wmul@product
  3297  001CA8  CFF4 F006          	movff	prodh,___wmul@product+1
  3298  001CAC  5001               	movf	___wmul@multiplier^0,w,c
  3299  001CAE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3300  001CB0  50F3               	movf	243,w,c
  3301  001CB2  2606               	addwf	(___wmul@product+1)^0,f,c
  3302  001CB4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3303  001CB6  0203               	mulwf	___wmul@multiplicand^0,c
  3304  001CB8  50F3               	movf	243,w,c
  3305  001CBA  2606               	addwf	(___wmul@product+1)^0,f,c
  3306  001CBC  C005  F001         	movff	___wmul@product,?___wmul
  3307  001CC0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3308  001CC4  0012               	return		;funcret
  3309  001CC6                     __end_of___wmul:
  3310                           	callstack 0
  3311                           
  3312 ;; *************** function _UART_Send_String *****************
  3313 ;; Defined at:
  3314 ;;		line 31 in file "uart.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  text            2    2[COMRAM] PTR unsigned char 
  3317 ;;		 -> print_buffer(256), 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  i               2    4[COMRAM] int 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3329 ;;      Params:         2       0       0       0       0       0       0
  3330 ;;      Locals:         2       0       0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0
  3332 ;;      Totals:         4       0       0       0       0       0       0
  3333 ;;Total ram usage:        4 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 1
  3336 ;; This function calls:
  3337 ;;		_UART_Send
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text17
  3344  001BC2                     __ptext17:
  3345                           	callstack 0
  3346  001BC2                     _UART_Send_String:
  3347                           	callstack 29
  3348  001BC2                     
  3349                           ;uart.c: 31: void UART_Send_String(char *text);uart.c: 32: {;uart.c: 33:   int i;;uart.c
      +                          : 34:   for(i=0;text[i]!='\0';i++)
  3350  001BC2  0E00               	movlw	0
  3351  001BC4  6E06               	movwf	(UART_Send_String@i+1)^0,c
  3352  001BC6  0E00               	movlw	0
  3353  001BC8  6E05               	movwf	UART_Send_String@i^0,c
  3354  001BCA  EFF2  F00D         	goto	l2216
  3355  001BCE                     l2212:
  3356                           
  3357                           ;uart.c: 35:    UART_Send(text[i]);
  3358  001BCE  5005               	movf	UART_Send_String@i^0,w,c
  3359  001BD0  2403               	addwf	UART_Send_String@text^0,w,c
  3360  001BD2  6ED9               	movwf	fsr2l,c
  3361  001BD4  5006               	movf	(UART_Send_String@i+1)^0,w,c
  3362  001BD6  2004               	addwfc	(UART_Send_String@text+1)^0,w,c
  3363  001BD8  6EDA               	movwf	fsr2h,c
  3364  001BDA  50DF               	movf	indf2,w,c
  3365  001BDC  EC01  F00E         	call	_UART_Send
  3366  001BE0  4A05               	infsnz	UART_Send_String@i^0,f,c
  3367  001BE2  2A06               	incf	(UART_Send_String@i+1)^0,f,c
  3368  001BE4                     l2216:
  3369  001BE4  5005               	movf	UART_Send_String@i^0,w,c
  3370  001BE6  2403               	addwf	UART_Send_String@text^0,w,c
  3371  001BE8  6ED9               	movwf	fsr2l,c
  3372  001BEA  5006               	movf	(UART_Send_String@i+1)^0,w,c
  3373  001BEC  2004               	addwfc	(UART_Send_String@text+1)^0,w,c
  3374  001BEE  6EDA               	movwf	fsr2h,c
  3375  001BF0  50DF               	movf	indf2,w,c
  3376  001BF2  A4D8               	btfss	status,2,c
  3377  001BF4  EFFE  F00D         	goto	u1571
  3378  001BF8  EF00  F00E         	goto	u1570
  3379  001BFC                     u1571:
  3380  001BFC  EFE7  F00D         	goto	l2212
  3381  001C00                     u1570:
  3382  001C00  0012               	return		;funcret
  3383  001C02                     __end_of_UART_Send_String:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _UART_Send *****************
  3387 ;; Defined at:
  3388 ;;		line 38 in file "uart.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  data            1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  data            1    1[COMRAM] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3402 ;;      Params:         0       0       0       0       0       0       0
  3403 ;;      Locals:         1       0       0       0       0       0       0
  3404 ;;      Temps:          1       0       0       0       0       0       0
  3405 ;;      Totals:         2       0       0       0       0       0       0
  3406 ;;Total ram usage:        2 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_UART_Send_String
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text18
  3416  001C02                     __ptext18:
  3417                           	callstack 0
  3418  001C02                     _UART_Send:
  3419                           	callstack 29
  3420                           
  3421                           ;incstack = 0
  3422                           ;UART_Send@data stored from wreg
  3423  001C02  6E02               	movwf	UART_Send@data^0,c
  3424  001C04                     l142:
  3425  001C04  A2AC               	btfss	4012,1,c	;volatile
  3426  001C06  EF07  F00E         	goto	u661
  3427  001C0A  EF09  F00E         	goto	u660
  3428  001C0E                     u661:
  3429  001C0E  EF02  F00E         	goto	l142
  3430  001C12                     u660:
  3431  001C12                     
  3432                           ;uart.c: 41:   TXREG = data;
  3433  001C12  C002  FFAD         	movff	UART_Send@data,4013	;volatile
  3434  001C16                     
  3435                           ;uart.c: 42:   LATBbits.LATB7 = ~LATBbits.LATB7;
  3436  001C16  BE8A               	btfsc	138,7,c	;volatile
  3437  001C18  EF10  F00E         	goto	u671
  3438  001C1C  EF13  F00E         	goto	u670
  3439  001C20                     u671:
  3440  001C20  0E01               	movlw	1
  3441  001C22  EF14  F00E         	goto	u676
  3442  001C26                     u670:
  3443  001C26  0E00               	movlw	0
  3444  001C28                     u676:
  3445  001C28  0AFF               	xorlw	255
  3446  001C2A  6E01               	movwf	??_UART_Send^0,c
  3447  001C2C  3201               	rrcf	??_UART_Send^0,f,c
  3448  001C2E  3201               	rrcf	??_UART_Send^0,f,c
  3449  001C30  508A               	movf	138,w,c	;volatile
  3450  001C32  1801               	xorwf	??_UART_Send^0,w,c
  3451  001C34  0B7F               	andlw	-129
  3452  001C36  1801               	xorwf	??_UART_Send^0,w,c
  3453  001C38  6E8A               	movwf	138,c	;volatile
  3454  001C3A  0012               	return		;funcret
  3455  001C3C                     __end_of_UART_Send:
  3456                           	callstack 0
  3457                           
  3458 ;; *************** function _UART_Init *****************
  3459 ;; Defined at:
  3460 ;;		line 9 in file "uart.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  baudrate        4   25[COMRAM] const unsigned long 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  baudrate_cal    2   37[COMRAM] unsigned short 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3474 ;;      Params:         4       0       0       0       0       0       0
  3475 ;;      Locals:         2       0       0       0       0       0       0
  3476 ;;      Temps:          8       0       0       0       0       0       0
  3477 ;;      Totals:        14       0       0       0       0       0       0
  3478 ;;Total ram usage:       14 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 1
  3481 ;; This function calls:
  3482 ;;		___lldiv
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text19
  3489  001628                     __ptext19:
  3490                           	callstack 0
  3491  001628                     _UART_Init:
  3492                           	callstack 29
  3493  001628                     
  3494                           ;uart.c: 9: void UART_Init(const uint32_t baudrate);uart.c: 10: {;uart.c: 12:  uint16_t 
      +                          baudrate_calculated = (20000000 - baudrate * 4) /(baudrate * 4);
  3495  001628  C01A  F01E         	movff	UART_Init@baudrate,??_UART_Init
  3496  00162C  C01B  F01F         	movff	UART_Init@baudrate+1,??_UART_Init+1
  3497  001630  C01C  F020         	movff	UART_Init@baudrate+2,??_UART_Init+2
  3498  001634  C01D  F021         	movff	UART_Init@baudrate+3,??_UART_Init+3
  3499  001638  0E02               	movlw	2
  3500  00163A                     u1555:
  3501  00163A  90D8               	bcf	status,0,c
  3502  00163C  361E               	rlcf	??_UART_Init^0,f,c
  3503  00163E  361F               	rlcf	(??_UART_Init+1)^0,f,c
  3504  001640  3620               	rlcf	(??_UART_Init+2)^0,f,c
  3505  001642  3621               	rlcf	(??_UART_Init+3)^0,f,c
  3506  001644  2EE8               	decfsz	wreg,f,c
  3507  001646  EF1D  F00B         	goto	u1555
  3508  00164A  501E               	movf	??_UART_Init^0,w,c
  3509  00164C  0800               	sublw	0
  3510  00164E  6E0D               	movwf	___lldiv@dividend^0,c
  3511  001650  0E2D               	movlw	45
  3512  001652  541F               	subfwb	(??_UART_Init+1)^0,w,c
  3513  001654  6E0E               	movwf	(___lldiv@dividend+1)^0,c
  3514  001656  0E31               	movlw	49
  3515  001658  5420               	subfwb	(??_UART_Init+2)^0,w,c
  3516  00165A  6E0F               	movwf	(___lldiv@dividend+2)^0,c
  3517  00165C  0E01               	movlw	1
  3518  00165E  5421               	subfwb	(??_UART_Init+3)^0,w,c
  3519  001660  6E10               	movwf	(___lldiv@dividend+3)^0,c
  3520  001662  C01A  F022         	movff	UART_Init@baudrate,??_UART_Init+4
  3521  001666  C01B  F023         	movff	UART_Init@baudrate+1,??_UART_Init+5
  3522  00166A  C01C  F024         	movff	UART_Init@baudrate+2,??_UART_Init+6
  3523  00166E  C01D  F025         	movff	UART_Init@baudrate+3,??_UART_Init+7
  3524  001672  0E02               	movlw	2
  3525  001674                     u1565:
  3526  001674  90D8               	bcf	status,0,c
  3527  001676  3622               	rlcf	(??_UART_Init+4)^0,f,c
  3528  001678  3623               	rlcf	(??_UART_Init+5)^0,f,c
  3529  00167A  3624               	rlcf	(??_UART_Init+6)^0,f,c
  3530  00167C  3625               	rlcf	(??_UART_Init+7)^0,f,c
  3531  00167E  2EE8               	decfsz	wreg,f,c
  3532  001680  EF3A  F00B         	goto	u1565
  3533  001684  C022  F011         	movff	??_UART_Init+4,___lldiv@divisor
  3534  001688  C023  F012         	movff	??_UART_Init+5,___lldiv@divisor+1
  3535  00168C  C024  F013         	movff	??_UART_Init+6,___lldiv@divisor+2
  3536  001690  C025  F014         	movff	??_UART_Init+7,___lldiv@divisor+3
  3537  001694  ECC2  F00A         	call	___lldiv	;wreg free
  3538  001698  C00D  F026         	movff	?___lldiv,UART_Init@baudrate_calculated
  3539  00169C  C00E  F027         	movff	?___lldiv+1,UART_Init@baudrate_calculated+1
  3540  0016A0                     
  3541                           ;uart.c: 14:     TXSTAbits.BRGH = 1;
  3542  0016A0  84AC               	bsf	172,2,c	;volatile
  3543  0016A2                     
  3544                           ;uart.c: 15:     BAUDCONbits.BRG16 = 1;
  3545  0016A2  86B8               	bsf	184,3,c	;volatile
  3546  0016A4                     
  3547                           ;uart.c: 17:     SPBRG = (baudrate_calculated & 0x00FF);
  3548  0016A4  C026  FFAF         	movff	UART_Init@baudrate_calculated,4015	;volatile
  3549  0016A8                     
  3550                           ;uart.c: 18:     SPBRGH = (baudrate_calculated & 0xFF00) >> 8;
  3551  0016A8  5027               	movf	(UART_Init@baudrate_calculated+1)^0,w,c
  3552  0016AA  6EB0               	movwf	176,c	;volatile
  3553  0016AC                     
  3554                           ;uart.c: 20:     TXSTAbits.SYNC = 0;
  3555  0016AC  98AC               	bcf	172,4,c	;volatile
  3556  0016AE                     
  3557                           ;uart.c: 21:     TXSTAbits.TX9 = 0;
  3558  0016AE  9CAC               	bcf	172,6,c	;volatile
  3559  0016B0                     
  3560                           ;uart.c: 22:     RCSTAbits.SPEN = 1;
  3561  0016B0  8EAB               	bsf	171,7,c	;volatile
  3562  0016B2                     
  3563                           ;uart.c: 23:     TRISCbits.RC6 = 1;
  3564  0016B2  8C94               	bsf	148,6,c	;volatile
  3565  0016B4                     
  3566                           ;uart.c: 24:     TRISCbits.RC7 = 1;
  3567  0016B4  8E94               	bsf	148,7,c	;volatile
  3568  0016B6                     
  3569                           ;uart.c: 25:     RCSTAbits.CREN = 1;
  3570  0016B6  88AB               	bsf	171,4,c	;volatile
  3571  0016B8                     
  3572                           ;uart.c: 26:     TXSTAbits.TXEN = 1;
  3573  0016B8  8AAC               	bsf	172,5,c	;volatile
  3574  0016BA  0012               	return		;funcret
  3575  0016BC                     __end_of_UART_Init:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _Set_Time_Date *****************
  3579 ;; Defined at:
  3580 ;;		line 20 in file "ds1307.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3594 ;;      Params:         0       0       0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 2
  3601 ;; This function calls:
  3602 ;;		_DEC_2_BCD
  3603 ;;		_I2C_Begin
  3604 ;;		_I2C_End
  3605 ;;		_I2C_Write
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text20
  3612  001422                     __ptext20:
  3613                           	callstack 0
  3614  001422                     _Set_Time_Date:
  3615                           	callstack 28
  3616  001422                     
  3617                           ;ds1307.c: 22:    I2C_Begin();
  3618  001422  EC96  F00E         	call	_I2C_Begin	;wreg free
  3619                           
  3620                           ;ds1307.c: 23:    I2C_Write((0xD0));
  3621  001426  0E00               	movlw	0
  3622  001428  6E0E               	movwf	(I2C_Write@data+1)^0,c
  3623  00142A  0ED0               	movlw	208
  3624  00142C  6E0D               	movwf	I2C_Write@data^0,c
  3625  00142E  EC8D  F00E         	call	_I2C_Write	;wreg free
  3626                           
  3627                           ;ds1307.c: 24:    I2C_Write(0);
  3628  001432  0E00               	movlw	0
  3629  001434  6E0E               	movwf	(I2C_Write@data+1)^0,c
  3630  001436  0E00               	movlw	0
  3631  001438  6E0D               	movwf	I2C_Write@data^0,c
  3632  00143A  EC8D  F00E         	call	_I2C_Write	;wreg free
  3633                           
  3634                           ;ds1307.c: 25:    I2C_Write(DEC_2_BCD(set_time.sec));
  3635  00143E  C0A2  F009         	movff	_set_time,DEC_2_BCD@to_convert	;volatile
  3636  001442  6A0A               	clrf	(DEC_2_BCD@to_convert+1)^0,c
  3637  001444  EC2D  F00D         	call	_DEC_2_BCD	;wreg free
  3638  001448  C009  F00D         	movff	?_DEC_2_BCD,I2C_Write@data
  3639  00144C  C00A  F00E         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3640  001450  EC8D  F00E         	call	_I2C_Write	;wreg free
  3641                           
  3642                           ;ds1307.c: 26:    I2C_Write(DEC_2_BCD(set_time.min));
  3643  001454  C0A3  F009         	movff	_set_time+1,DEC_2_BCD@to_convert	;volatile
  3644  001458  6A0A               	clrf	(DEC_2_BCD@to_convert+1)^0,c
  3645  00145A  EC2D  F00D         	call	_DEC_2_BCD	;wreg free
  3646  00145E  C009  F00D         	movff	?_DEC_2_BCD,I2C_Write@data
  3647  001462  C00A  F00E         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3648  001466  EC8D  F00E         	call	_I2C_Write	;wreg free
  3649                           
  3650                           ;ds1307.c: 27:    I2C_Write(DEC_2_BCD(set_time.hour));
  3651  00146A  C0A4  F009         	movff	_set_time+2,DEC_2_BCD@to_convert	;volatile
  3652  00146E  6A0A               	clrf	(DEC_2_BCD@to_convert+1)^0,c
  3653  001470  EC2D  F00D         	call	_DEC_2_BCD	;wreg free
  3654  001474  C009  F00D         	movff	?_DEC_2_BCD,I2C_Write@data
  3655  001478  C00A  F00E         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3656  00147C  EC8D  F00E         	call	_I2C_Write	;wreg free
  3657                           
  3658                           ;ds1307.c: 28:    I2C_Write(1);
  3659  001480  0E00               	movlw	0
  3660  001482  6E0E               	movwf	(I2C_Write@data+1)^0,c
  3661  001484  0E01               	movlw	1
  3662  001486  6E0D               	movwf	I2C_Write@data^0,c
  3663  001488  EC8D  F00E         	call	_I2C_Write	;wreg free
  3664                           
  3665                           ;ds1307.c: 29:    I2C_Write(DEC_2_BCD(set_time.date));
  3666  00148C  C0A5  F009         	movff	_set_time+3,DEC_2_BCD@to_convert	;volatile
  3667  001490  6A0A               	clrf	(DEC_2_BCD@to_convert+1)^0,c
  3668  001492  EC2D  F00D         	call	_DEC_2_BCD	;wreg free
  3669  001496  C009  F00D         	movff	?_DEC_2_BCD,I2C_Write@data
  3670  00149A  C00A  F00E         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3671  00149E  EC8D  F00E         	call	_I2C_Write	;wreg free
  3672                           
  3673                           ;ds1307.c: 30:    I2C_Write(DEC_2_BCD(set_time.month));
  3674  0014A2  C0A6  F009         	movff	_set_time+4,DEC_2_BCD@to_convert	;volatile
  3675  0014A6  6A0A               	clrf	(DEC_2_BCD@to_convert+1)^0,c
  3676  0014A8  EC2D  F00D         	call	_DEC_2_BCD	;wreg free
  3677  0014AC  C009  F00D         	movff	?_DEC_2_BCD,I2C_Write@data
  3678  0014B0  C00A  F00E         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3679  0014B4  EC8D  F00E         	call	_I2C_Write	;wreg free
  3680                           
  3681                           ;ds1307.c: 31:    I2C_Write(DEC_2_BCD(set_time.year));
  3682  0014B8  C0A7  F009         	movff	_set_time+5,DEC_2_BCD@to_convert	;volatile
  3683  0014BC  6A0A               	clrf	(DEC_2_BCD@to_convert+1)^0,c
  3684  0014BE  EC2D  F00D         	call	_DEC_2_BCD	;wreg free
  3685  0014C2  C009  F00D         	movff	?_DEC_2_BCD,I2C_Write@data
  3686  0014C6  C00A  F00E         	movff	?_DEC_2_BCD+1,I2C_Write@data+1
  3687  0014CA  EC8D  F00E         	call	_I2C_Write	;wreg free
  3688                           
  3689                           ;ds1307.c: 32:    I2C_End();
  3690  0014CE  EC92  F00E         	call	_I2C_End	;wreg free
  3691  0014D2  0012               	return		;funcret
  3692  0014D4                     __end_of_Set_Time_Date:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _I2C_Write *****************
  3696 ;; Defined at:
  3697 ;;		line 41 in file "i2c.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  data            2   12[COMRAM] unsigned int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3711 ;;      Params:         2       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0
  3714 ;;      Totals:         2       0       0       0       0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 1
  3718 ;; This function calls:
  3719 ;;		_I2C_Idle
  3720 ;; This function is called by:
  3721 ;;		_Set_Time_Date
  3722 ;;		_Update_Current_Date_Time
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text21
  3727  001D1A                     __ptext21:
  3728                           	callstack 0
  3729  001D1A                     _I2C_Write:
  3730                           	callstack 28
  3731  001D1A                     
  3732                           ;i2c.c: 41: void I2C_Write(unsigned data);i2c.c: 42: {;i2c.c: 43:   I2C_Idle();
  3733  001D1A  EC63  F00E         	call	_I2C_Idle	;wreg free
  3734  001D1E                     
  3735                           ;i2c.c: 44:   SSPBUF = data;
  3736  001D1E  C00D  FFC9         	movff	I2C_Write@data,4041	;volatile
  3737  001D22  0012               	return		;funcret
  3738  001D24                     __end_of_I2C_Write:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _I2C_End *****************
  3742 ;; Defined at:
  3743 ;;		line 35 in file "i2c.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3757 ;;      Params:         0       0       0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 1
  3764 ;; This function calls:
  3765 ;;		_I2C_Idle
  3766 ;; This function is called by:
  3767 ;;		_Set_Time_Date
  3768 ;;		_Update_Current_Date_Time
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text22
  3773  001D24                     __ptext22:
  3774                           	callstack 0
  3775  001D24                     _I2C_End:
  3776                           	callstack 28
  3777  001D24                     
  3778                           ;i2c.c: 37:   I2C_Idle();
  3779  001D24  EC63  F00E         	call	_I2C_Idle	;wreg free
  3780  001D28                     
  3781                           ;i2c.c: 38:   PEN = 1;
  3782  001D28  84C5               	bsf	4037,2,c	;volatile
  3783  001D2A  0012               	return		;funcret
  3784  001D2C                     __end_of_I2C_End:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _I2C_Begin *****************
  3788 ;; Defined at:
  3789 ;;		line 29 in file "i2c.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3803 ;;      Params:         0       0       0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0
  3806 ;;      Totals:         0       0       0       0       0       0       0
  3807 ;;Total ram usage:        0 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 1
  3810 ;; This function calls:
  3811 ;;		_I2C_Idle
  3812 ;; This function is called by:
  3813 ;;		_Set_Time_Date
  3814 ;;		_Update_Current_Date_Time
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text23
  3819  001D2C                     __ptext23:
  3820                           	callstack 0
  3821  001D2C                     _I2C_Begin:
  3822                           	callstack 28
  3823  001D2C                     
  3824                           ;i2c.c: 31:   I2C_Idle();
  3825  001D2C  EC63  F00E         	call	_I2C_Idle	;wreg free
  3826  001D30                     
  3827                           ;i2c.c: 32:   SEN = 1;
  3828  001D30  80C5               	bsf	4037,0,c	;volatile
  3829  001D32  0012               	return		;funcret
  3830  001D34                     __end_of_I2C_Begin:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _I2C_Idle *****************
  3834 ;; Defined at:
  3835 ;;		line 24 in file "i2c.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3849 ;;      Params:         0       0       0       0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0
  3851 ;;      Temps:          1       0       0       0       0       0       0
  3852 ;;      Totals:         1       0       0       0       0       0       0
  3853 ;;Total ram usage:        1 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_I2C_Begin
  3859 ;;		_I2C_End
  3860 ;;		_I2C_Write
  3861 ;;		_I2C_Read
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text24
  3866  001CC6                     __ptext24:
  3867                           	callstack 0
  3868  001CC6                     _I2C_Idle:
  3869                           	callstack 28
  3870  001CC6                     l1948:
  3871  001CC6  CFC5 F001          	movff	4037,??_I2C_Idle	;volatile
  3872  001CCA  0E1F               	movlw	31
  3873  001CCC  1601               	andwf	??_I2C_Idle^0,f,c
  3874  001CCE  A4D8               	btfss	status,2,c
  3875  001CD0  EF6C  F00E         	goto	u1241
  3876  001CD4  EF6E  F00E         	goto	u1240
  3877  001CD8                     u1241:
  3878  001CD8  EF63  F00E         	goto	l1948
  3879  001CDC                     u1240:
  3880  001CDC  B4C7               	btfsc	199,2,c	;volatile
  3881  001CDE  EF73  F00E         	goto	u1251
  3882  001CE2  EF75  F00E         	goto	u1250
  3883  001CE6                     u1251:
  3884  001CE6  EF63  F00E         	goto	l1948
  3885  001CEA                     u1250:
  3886  001CEA  0012               	return		;funcret
  3887  001CEC                     __end_of_I2C_Idle:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _DEC_2_BCD *****************
  3891 ;; Defined at:
  3892 ;;		line 15 in file "ds1307.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  to_convert      2    8[COMRAM] int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  2    8[COMRAM] int 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3906 ;;      Params:         2       0       0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0
  3908 ;;      Temps:          2       0       0       0       0       0       0
  3909 ;;      Totals:         4       0       0       0       0       0       0
  3910 ;;Total ram usage:        4 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 1
  3913 ;; This function calls:
  3914 ;;		___awdiv
  3915 ;;		___awmod
  3916 ;; This function is called by:
  3917 ;;		_Set_Time_Date
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text25
  3922  001A5A                     __ptext25:
  3923                           	callstack 0
  3924  001A5A                     _DEC_2_BCD:
  3925                           	callstack 28
  3926  001A5A                     
  3927                           ;ds1307.c: 15: int DEC_2_BCD (int to_convert);ds1307.c: 16: {;ds1307.c: 17:    return ((
      +                          to_convert / 10) << 4) + (to_convert % 10);
  3928  001A5A  C009  F001         	movff	DEC_2_BCD@to_convert,___awdiv@dividend
  3929  001A5E  C00A  F002         	movff	DEC_2_BCD@to_convert+1,___awdiv@dividend+1
  3930  001A62  0E00               	movlw	0
  3931  001A64  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3932  001A66  0E0A               	movlw	10
  3933  001A68  6E03               	movwf	___awdiv@divisor^0,c
  3934  001A6A  EC4E  F009         	call	___awdiv	;wreg free
  3935  001A6E  C001  F00B         	movff	?___awdiv,??_DEC_2_BCD
  3936  001A72  C002  F00C         	movff	?___awdiv+1,??_DEC_2_BCD+1
  3937  001A76  3A0B               	swapf	??_DEC_2_BCD^0,f,c
  3938  001A78  3A0C               	swapf	(??_DEC_2_BCD+1)^0,f,c
  3939  001A7A  0EF0               	movlw	240
  3940  001A7C  160C               	andwf	(??_DEC_2_BCD+1)^0,f,c
  3941  001A7E  500B               	movf	??_DEC_2_BCD^0,w,c
  3942  001A80  0B0F               	andlw	15
  3943  001A82  120C               	iorwf	(??_DEC_2_BCD+1)^0,f,c
  3944  001A84  0EF0               	movlw	240
  3945  001A86  160B               	andwf	??_DEC_2_BCD^0,f,c
  3946  001A88  C009  F001         	movff	DEC_2_BCD@to_convert,___awmod@dividend
  3947  001A8C  C00A  F002         	movff	DEC_2_BCD@to_convert+1,___awmod@dividend+1
  3948  001A90  0E00               	movlw	0
  3949  001A92  6E04               	movwf	(___awmod@divisor+1)^0,c
  3950  001A94  0E0A               	movlw	10
  3951  001A96  6E03               	movwf	___awmod@divisor^0,c
  3952  001A98  EC6A  F00A         	call	___awmod	;wreg free
  3953  001A9C  5001               	movf	?___awmod^0,w,c
  3954  001A9E  240B               	addwf	??_DEC_2_BCD^0,w,c
  3955  001AA0  6E09               	movwf	?_DEC_2_BCD^0,c
  3956  001AA2  5002               	movf	(?___awmod+1)^0,w,c
  3957  001AA4  200C               	addwfc	(??_DEC_2_BCD+1)^0,w,c
  3958  001AA6  6E0A               	movwf	(?_DEC_2_BCD+1)^0,c
  3959  001AA8  0012               	return		;funcret
  3960  001AAA                     __end_of_DEC_2_BCD:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function ___awmod *****************
  3964 ;; Defined at:
  3965 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  dividend        2    0[COMRAM] int 
  3968 ;;  divisor         2    2[COMRAM] int 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  sign            1    5[COMRAM] unsigned char 
  3971 ;;  counter         1    4[COMRAM] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  2    0[COMRAM] int 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3981 ;;      Params:         4       0       0       0       0       0       0
  3982 ;;      Locals:         2       0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0
  3984 ;;      Totals:         6       0       0       0       0       0       0
  3985 ;;Total ram usage:        6 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_main
  3991 ;;		_DEC_2_BCD
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text26
  3996  0014D4                     __ptext26:
  3997                           	callstack 0
  3998  0014D4                     ___awmod:
  3999                           	callstack 30
  4000  0014D4  0E00               	movlw	0
  4001  0014D6  6E06               	movwf	___awmod@sign^0,c
  4002  0014D8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4003  0014DA  EF73  F00A         	goto	u1320
  4004  0014DE  EF71  F00A         	goto	u1321
  4005  0014E2                     u1321:
  4006  0014E2  EF79  F00A         	goto	l2010
  4007  0014E6                     u1320:
  4008  0014E6  6C01               	negf	___awmod@dividend^0,c
  4009  0014E8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4010  0014EA  B0D8               	btfsc	status,0,c
  4011  0014EC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4012  0014EE  0E01               	movlw	1
  4013  0014F0  6E06               	movwf	___awmod@sign^0,c
  4014  0014F2                     l2010:
  4015  0014F2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4016  0014F4  EF80  F00A         	goto	u1330
  4017  0014F8  EF7E  F00A         	goto	u1331
  4018  0014FC                     u1331:
  4019  0014FC  EF84  F00A         	goto	l2014
  4020  001500                     u1330:
  4021  001500  6C03               	negf	___awmod@divisor^0,c
  4022  001502  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4023  001504  B0D8               	btfsc	status,0,c
  4024  001506  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4025  001508                     l2014:
  4026  001508  5003               	movf	___awmod@divisor^0,w,c
  4027  00150A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4028  00150C  B4D8               	btfsc	status,2,c
  4029  00150E  EF8B  F00A         	goto	u1341
  4030  001512  EF8D  F00A         	goto	u1340
  4031  001516                     u1341:
  4032  001516  EFB1  F00A         	goto	l2030
  4033  00151A                     u1340:
  4034  00151A  0E01               	movlw	1
  4035  00151C  6E05               	movwf	___awmod@counter^0,c
  4036  00151E  EF95  F00A         	goto	l2020
  4037  001522                     l2018:
  4038  001522  90D8               	bcf	status,0,c
  4039  001524  3603               	rlcf	___awmod@divisor^0,f,c
  4040  001526  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4041  001528  2A05               	incf	___awmod@counter^0,f,c
  4042  00152A                     l2020:
  4043  00152A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4044  00152C  EF9A  F00A         	goto	u1351
  4045  001530  EF9C  F00A         	goto	u1350
  4046  001534                     u1351:
  4047  001534  EF91  F00A         	goto	l2018
  4048  001538                     u1350:
  4049  001538                     l2022:
  4050  001538  5003               	movf	___awmod@divisor^0,w,c
  4051  00153A  5C01               	subwf	___awmod@dividend^0,w,c
  4052  00153C  5004               	movf	(___awmod@divisor+1)^0,w,c
  4053  00153E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4054  001540  A0D8               	btfss	status,0,c
  4055  001542  EFA5  F00A         	goto	u1361
  4056  001546  EFA7  F00A         	goto	u1360
  4057  00154A                     u1361:
  4058  00154A  EFAB  F00A         	goto	l2026
  4059  00154E                     u1360:
  4060  00154E  5003               	movf	___awmod@divisor^0,w,c
  4061  001550  5E01               	subwf	___awmod@dividend^0,f,c
  4062  001552  5004               	movf	(___awmod@divisor+1)^0,w,c
  4063  001554  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4064  001556                     l2026:
  4065  001556  90D8               	bcf	status,0,c
  4066  001558  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4067  00155A  3203               	rrcf	___awmod@divisor^0,f,c
  4068  00155C  2E05               	decfsz	___awmod@counter^0,f,c
  4069  00155E  EF9C  F00A         	goto	l2022
  4070  001562                     l2030:
  4071  001562  5006               	movf	___awmod@sign^0,w,c
  4072  001564  B4D8               	btfsc	status,2,c
  4073  001566  EFB7  F00A         	goto	u1371
  4074  00156A  EFB9  F00A         	goto	u1370
  4075  00156E                     u1371:
  4076  00156E  EFBD  F00A         	goto	l2034
  4077  001572                     u1370:
  4078  001572  6C01               	negf	___awmod@dividend^0,c
  4079  001574  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4080  001576  B0D8               	btfsc	status,0,c
  4081  001578  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4082  00157A                     l2034:
  4083  00157A  C001  F001         	movff	___awmod@dividend,?___awmod
  4084  00157E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4085  001582  0012               	return		;funcret
  4086  001584                     __end_of___awmod:
  4087                           	callstack 0
  4088                           
  4089 ;; *************** function ___awdiv *****************
  4090 ;; Defined at:
  4091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  dividend        2    0[COMRAM] int 
  4094 ;;  divisor         2    2[COMRAM] int 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  quotient        2    6[COMRAM] int 
  4097 ;;  sign            1    5[COMRAM] unsigned char 
  4098 ;;  counter         1    4[COMRAM] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2    0[COMRAM] int 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4108 ;;      Params:         4       0       0       0       0       0       0
  4109 ;;      Locals:         4       0       0       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0       0
  4111 ;;      Totals:         8       0       0       0       0       0       0
  4112 ;;Total ram usage:        8 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_main
  4118 ;;		_DEC_2_BCD
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text27
  4123  00129C                     __ptext27:
  4124                           	callstack 0
  4125  00129C                     ___awdiv:
  4126                           	callstack 30
  4127  00129C  0E00               	movlw	0
  4128  00129E  6E06               	movwf	___awdiv@sign^0,c
  4129  0012A0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4130  0012A2  EF57  F009         	goto	u1260
  4131  0012A6  EF55  F009         	goto	u1261
  4132  0012AA                     u1261:
  4133  0012AA  EF5D  F009         	goto	l1966
  4134  0012AE                     u1260:
  4135  0012AE  6C03               	negf	___awdiv@divisor^0,c
  4136  0012B0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4137  0012B2  B0D8               	btfsc	status,0,c
  4138  0012B4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4139  0012B6  0E01               	movlw	1
  4140  0012B8  6E06               	movwf	___awdiv@sign^0,c
  4141  0012BA                     l1966:
  4142  0012BA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4143  0012BC  EF64  F009         	goto	u1270
  4144  0012C0  EF62  F009         	goto	u1271
  4145  0012C4                     u1271:
  4146  0012C4  EF6A  F009         	goto	l1972
  4147  0012C8                     u1270:
  4148  0012C8  6C01               	negf	___awdiv@dividend^0,c
  4149  0012CA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4150  0012CC  B0D8               	btfsc	status,0,c
  4151  0012CE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4152  0012D0  0E01               	movlw	1
  4153  0012D2  1A06               	xorwf	___awdiv@sign^0,f,c
  4154  0012D4                     l1972:
  4155  0012D4  0E00               	movlw	0
  4156  0012D6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4157  0012D8  0E00               	movlw	0
  4158  0012DA  6E07               	movwf	___awdiv@quotient^0,c
  4159  0012DC  5003               	movf	___awdiv@divisor^0,w,c
  4160  0012DE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4161  0012E0  B4D8               	btfsc	status,2,c
  4162  0012E2  EF75  F009         	goto	u1281
  4163  0012E6  EF77  F009         	goto	u1280
  4164  0012EA                     u1281:
  4165  0012EA  EF9F  F009         	goto	l1994
  4166  0012EE                     u1280:
  4167  0012EE  0E01               	movlw	1
  4168  0012F0  6E05               	movwf	___awdiv@counter^0,c
  4169  0012F2  EF7F  F009         	goto	l1980
  4170  0012F6                     l1978:
  4171  0012F6  90D8               	bcf	status,0,c
  4172  0012F8  3603               	rlcf	___awdiv@divisor^0,f,c
  4173  0012FA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4174  0012FC  2A05               	incf	___awdiv@counter^0,f,c
  4175  0012FE                     l1980:
  4176  0012FE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4177  001300  EF84  F009         	goto	u1291
  4178  001304  EF86  F009         	goto	u1290
  4179  001308                     u1291:
  4180  001308  EF7B  F009         	goto	l1978
  4181  00130C                     u1290:
  4182  00130C                     l1982:
  4183  00130C  90D8               	bcf	status,0,c
  4184  00130E  3607               	rlcf	___awdiv@quotient^0,f,c
  4185  001310  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4186  001312  5003               	movf	___awdiv@divisor^0,w,c
  4187  001314  5C01               	subwf	___awdiv@dividend^0,w,c
  4188  001316  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4189  001318  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4190  00131A  A0D8               	btfss	status,0,c
  4191  00131C  EF92  F009         	goto	u1301
  4192  001320  EF94  F009         	goto	u1300
  4193  001324                     u1301:
  4194  001324  EF99  F009         	goto	l1990
  4195  001328                     u1300:
  4196  001328  5003               	movf	___awdiv@divisor^0,w,c
  4197  00132A  5E01               	subwf	___awdiv@dividend^0,f,c
  4198  00132C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4199  00132E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4200  001330  8007               	bsf	___awdiv@quotient^0,0,c
  4201  001332                     l1990:
  4202  001332  90D8               	bcf	status,0,c
  4203  001334  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4204  001336  3203               	rrcf	___awdiv@divisor^0,f,c
  4205  001338  2E05               	decfsz	___awdiv@counter^0,f,c
  4206  00133A  EF86  F009         	goto	l1982
  4207  00133E                     l1994:
  4208  00133E  5006               	movf	___awdiv@sign^0,w,c
  4209  001340  B4D8               	btfsc	status,2,c
  4210  001342  EFA5  F009         	goto	u1311
  4211  001346  EFA7  F009         	goto	u1310
  4212  00134A                     u1311:
  4213  00134A  EFAB  F009         	goto	l1998
  4214  00134E                     u1310:
  4215  00134E  6C07               	negf	___awdiv@quotient^0,c
  4216  001350  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4217  001352  B0D8               	btfsc	status,0,c
  4218  001354  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4219  001356                     l1998:
  4220  001356  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4221  00135A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4222  00135E  0012               	return		;funcret
  4223  001360                     __end_of___awdiv:
  4224                           	callstack 0
  4225                           
  4226 ;; *************** function _Lcd_Start *****************
  4227 ;; Defined at:
  4228 ;;		line 75 in file "lcd.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  i               2    0        int 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4242 ;;      Params:         0       0       0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0
  4244 ;;      Temps:          1       0       0       0       0       0       0
  4245 ;;      Totals:         1       0       0       0       0       0       0
  4246 ;;Total ram usage:        1 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 2
  4249 ;; This function calls:
  4250 ;;		_Lcd_Cmd
  4251 ;;		_Lcd_SetBit
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text28
  4258  001888                     __ptext28:
  4259                           	callstack 0
  4260  001888                     _Lcd_Start:
  4261                           	callstack 28
  4262  001888                     
  4263                           ;lcd.c: 77:   Lcd_SetBit(0x00);
  4264  001888  0E00               	movlw	0
  4265  00188A  ECA7  F00C         	call	_Lcd_SetBit
  4266  00188E                     
  4267                           ;lcd.c: 79:   Lcd_Cmd(0x03);
  4268  00188E  0E03               	movlw	3
  4269  001890  EC76  F00E         	call	_Lcd_Cmd
  4270  001894                     
  4271                           ;lcd.c: 80:  _delay((unsigned long)((5)*(20000000/4000.0)));
  4272  001894  0E21               	movlw	33
  4273  001896  6E04               	movwf	??_Lcd_Start^0,c
  4274  001898  0E76               	movlw	118
  4275  00189A                     u1627:
  4276  00189A  2EE8               	decfsz	wreg,f,c
  4277  00189C  D7FE               	bra	u1627
  4278  00189E  2E04               	decfsz	??_Lcd_Start^0,f,c
  4279  0018A0  D7FC               	bra	u1627
  4280  0018A2  D000               	nop2	
  4281  0018A4                     
  4282                           ;lcd.c: 81:   Lcd_Cmd(0x03);
  4283  0018A4  0E03               	movlw	3
  4284  0018A6  EC76  F00E         	call	_Lcd_Cmd
  4285                           
  4286                           ;lcd.c: 82:  _delay((unsigned long)((11)*(20000000/4000.0)));
  4287  0018AA  0E48               	movlw	72
  4288  0018AC  6E04               	movwf	??_Lcd_Start^0,c
  4289  0018AE  0E6C               	movlw	108
  4290  0018B0                     u1637:
  4291  0018B0  2EE8               	decfsz	wreg,f,c
  4292  0018B2  D7FE               	bra	u1637
  4293  0018B4  2E04               	decfsz	??_Lcd_Start^0,f,c
  4294  0018B6  D7FC               	bra	u1637
  4295  0018B8  D000               	nop2	
  4296  0018BA                     
  4297                           ;lcd.c: 83:   Lcd_Cmd(0x03);
  4298  0018BA  0E03               	movlw	3
  4299  0018BC  EC76  F00E         	call	_Lcd_Cmd
  4300  0018C0                     
  4301                           ;lcd.c: 84:   Lcd_Cmd(0x02);
  4302  0018C0  0E02               	movlw	2
  4303  0018C2  EC76  F00E         	call	_Lcd_Cmd
  4304  0018C6                     
  4305                           ;lcd.c: 85:   Lcd_Cmd(0x02);
  4306  0018C6  0E02               	movlw	2
  4307  0018C8  EC76  F00E         	call	_Lcd_Cmd
  4308  0018CC                     
  4309                           ;lcd.c: 86:   Lcd_Cmd(0x08);
  4310  0018CC  0E08               	movlw	8
  4311  0018CE  EC76  F00E         	call	_Lcd_Cmd
  4312  0018D2                     
  4313                           ;lcd.c: 87:   Lcd_Cmd(0x00);
  4314  0018D2  0E00               	movlw	0
  4315  0018D4  EC76  F00E         	call	_Lcd_Cmd
  4316  0018D8                     
  4317                           ;lcd.c: 88:   Lcd_Cmd(0x0C);
  4318  0018D8  0E0C               	movlw	12
  4319  0018DA  EC76  F00E         	call	_Lcd_Cmd
  4320  0018DE                     
  4321                           ;lcd.c: 89:   Lcd_Cmd(0x00);
  4322  0018DE  0E00               	movlw	0
  4323  0018E0  EC76  F00E         	call	_Lcd_Cmd
  4324  0018E4                     
  4325                           ;lcd.c: 90:   Lcd_Cmd(0x06);
  4326  0018E4  0E06               	movlw	6
  4327  0018E6  EC76  F00E         	call	_Lcd_Cmd
  4328  0018EA  0012               	return		;funcret
  4329  0018EC                     __end_of_Lcd_Start:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _Lcd_Set_Cursor *****************
  4333 ;; Defined at:
  4334 ;;		line 54 in file "lcd.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  a               1    wreg     unsigned char 
  4337 ;;  b               1    3[COMRAM] unsigned char 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  a               1    4[COMRAM] unsigned char 
  4340 ;;  temp            1    7[COMRAM] unsigned char 
  4341 ;;  y               1    6[COMRAM] unsigned char 
  4342 ;;  z               1    5[COMRAM] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4352 ;;      Params:         1       0       0       0       0       0       0
  4353 ;;      Locals:         4       0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0
  4355 ;;      Totals:         5       0       0       0       0       0       0
  4356 ;;Total ram usage:        5 bytes
  4357 ;; Hardware stack levels used: 1
  4358 ;; Hardware stack levels required when called: 2
  4359 ;; This function calls:
  4360 ;;		_Lcd_Cmd
  4361 ;; This function is called by:
  4362 ;;		_main
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text29
  4367  001822                     __ptext29:
  4368                           	callstack 0
  4369  001822                     _Lcd_Set_Cursor:
  4370                           	callstack 28
  4371                           
  4372                           ;incstack = 0
  4373                           ;Lcd_Set_Cursor@a stored from wreg
  4374  001822  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  4375  001824                     
  4376                           ;lcd.c: 54: void Lcd_Set_Cursor(char a, char b);lcd.c: 55: {;lcd.c: 56:  char temp,z,y;;
      +                          lcd.c: 57:  if(a== 1)
  4377  001824  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  4378  001826  A4D8               	btfss	status,2,c
  4379  001828  EF18  F00C         	goto	u1521
  4380  00182C  EF1A  F00C         	goto	u1520
  4381  001830                     u1521:
  4382  001830  EF2B  F00C         	goto	l2170
  4383  001834                     u1520:
  4384  001834                     
  4385                           ;lcd.c: 58:  {;lcd.c: 59:    temp = 0x80 + b - 1;
  4386  001834  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  4387  001836  0F7F               	addlw	127
  4388  001838  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  4389                           
  4390                           ;lcd.c: 60:   z = temp>>4;
  4391  00183A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4392  00183C  0B0F               	andlw	15
  4393  00183E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  4394                           
  4395                           ;lcd.c: 61:   y = temp & 0x0F;
  4396  001840  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  4397  001842  0B0F               	andlw	15
  4398  001844  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  4399  001846                     
  4400                           ;lcd.c: 62:   Lcd_Cmd(z);
  4401  001846  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  4402  001848  EC76  F00E         	call	_Lcd_Cmd
  4403  00184C                     
  4404                           ;lcd.c: 63:   Lcd_Cmd(y);
  4405  00184C  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  4406  00184E  EC76  F00E         	call	_Lcd_Cmd
  4407                           
  4408                           ;lcd.c: 64:  }
  4409  001852  EF43  F00C         	goto	l84
  4410  001856                     l2170:
  4411  001856  0E02               	movlw	2
  4412  001858  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  4413  00185A  A4D8               	btfss	status,2,c
  4414  00185C  EF32  F00C         	goto	u1531
  4415  001860  EF34  F00C         	goto	u1530
  4416  001864                     u1531:
  4417  001864  EF43  F00C         	goto	l84
  4418  001868                     u1530:
  4419  001868                     
  4420                           ;lcd.c: 66:  {;lcd.c: 67:   temp = 0xC0 + b - 1;
  4421  001868  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  4422  00186A  0FBF               	addlw	191
  4423  00186C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  4424                           
  4425                           ;lcd.c: 68:   z = temp>>4;
  4426  00186E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  4427  001870  0B0F               	andlw	15
  4428  001872  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  4429                           
  4430                           ;lcd.c: 69:   y = temp & 0x0F;
  4431  001874  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  4432  001876  0B0F               	andlw	15
  4433  001878  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  4434  00187A                     
  4435                           ;lcd.c: 70:   Lcd_Cmd(z);
  4436  00187A  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  4437  00187C  EC76  F00E         	call	_Lcd_Cmd
  4438  001880                     
  4439                           ;lcd.c: 71:   Lcd_Cmd(y);
  4440  001880  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  4441  001882  EC76  F00E         	call	_Lcd_Cmd
  4442  001886                     l84:
  4443  001886  0012               	return		;funcret
  4444  001888                     __end_of_Lcd_Set_Cursor:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _Lcd_Print_String *****************
  4448 ;; Defined at:
  4449 ;;		line 109 in file "lcd.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  a               2    8[COMRAM] PTR unsigned char 
  4452 ;;		 -> STR_5(7), STR_4(7), STR_3(11), STR_2(12), 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  i               2   12[COMRAM] int 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4464 ;;      Params:         2       0       0       0       0       0       0
  4465 ;;      Locals:         2       0       0       0       0       0       0
  4466 ;;      Temps:          2       0       0       0       0       0       0
  4467 ;;      Totals:         6       0       0       0       0       0       0
  4468 ;;Total ram usage:        6 bytes
  4469 ;; Hardware stack levels used: 1
  4470 ;; Hardware stack levels required when called: 2
  4471 ;; This function calls:
  4472 ;;		_Lcd_Print_Char
  4473 ;; This function is called by:
  4474 ;;		_main
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text30
  4479  001A04                     __ptext30:
  4480                           	callstack 0
  4481  001A04                     _Lcd_Print_String:
  4482                           	callstack 28
  4483  001A04                     
  4484                           ;lcd.c: 109: void Lcd_Print_String(char *a);lcd.c: 110: {;lcd.c: 111:  int i;;lcd.c: 112
      +                          :  for(i=0;a[i]!='\0';i++)
  4485  001A04  0E00               	movlw	0
  4486  001A06  6E0E               	movwf	(Lcd_Print_String@i+1)^0,c
  4487  001A08  0E00               	movlw	0
  4488  001A0A  6E0D               	movwf	Lcd_Print_String@i^0,c
  4489  001A0C  EF18  F00D         	goto	l2184
  4490  001A10                     l2180:
  4491                           
  4492                           ;lcd.c: 113:     Lcd_Print_Char(a[i]);
  4493  001A10  500D               	movf	Lcd_Print_String@i^0,w,c
  4494  001A12  2409               	addwf	Lcd_Print_String@a^0,w,c
  4495  001A14  6E0B               	movwf	??_Lcd_Print_String^0,c
  4496  001A16  500E               	movf	(Lcd_Print_String@i+1)^0,w,c
  4497  001A18  200A               	addwfc	(Lcd_Print_String@a+1)^0,w,c
  4498  001A1A  6E0C               	movwf	(??_Lcd_Print_String+1)^0,c
  4499  001A1C  C00B  FFF6         	movff	??_Lcd_Print_String,tblptrl
  4500  001A20  C00C  FFF7         	movff	??_Lcd_Print_String+1,tblptrh
  4501  001A24                     	if	0	;tblptru may be non-zero
  4502  001A24                     	endif
  4503  001A24                     	if	0	;tblptru may be non-zero
  4504  001A24                     	endif
  4505  001A24  0008               	tblrd		*
  4506  001A26  50F5               	movf	tablat,w,c
  4507  001A28  EC9E  F00B         	call	_Lcd_Print_Char
  4508  001A2C  4A0D               	infsnz	Lcd_Print_String@i^0,f,c
  4509  001A2E  2A0E               	incf	(Lcd_Print_String@i+1)^0,f,c
  4510  001A30                     l2184:
  4511  001A30  500D               	movf	Lcd_Print_String@i^0,w,c
  4512  001A32  2409               	addwf	Lcd_Print_String@a^0,w,c
  4513  001A34  6E0B               	movwf	??_Lcd_Print_String^0,c
  4514  001A36  500E               	movf	(Lcd_Print_String@i+1)^0,w,c
  4515  001A38  200A               	addwfc	(Lcd_Print_String@a+1)^0,w,c
  4516  001A3A  6E0C               	movwf	(??_Lcd_Print_String+1)^0,c
  4517  001A3C  C00B  FFF6         	movff	??_Lcd_Print_String,tblptrl
  4518  001A40  C00C  FFF7         	movff	??_Lcd_Print_String+1,tblptrh
  4519  001A44                     	if	0	;tblptru may be non-zero
  4520  001A44                     	endif
  4521  001A44                     	if	0	;tblptru may be non-zero
  4522  001A44                     	endif
  4523  001A44  0008               	tblrd		*
  4524  001A46  50F5               	movf	tablat,w,c
  4525  001A48  0900               	iorlw	0
  4526  001A4A  A4D8               	btfss	status,2,c
  4527  001A4C  EF2A  F00D         	goto	u1541
  4528  001A50  EF2C  F00D         	goto	u1540
  4529  001A54                     u1541:
  4530  001A54  EF08  F00D         	goto	l2180
  4531  001A58                     u1540:
  4532  001A58  0012               	return		;funcret
  4533  001A5A                     __end_of_Lcd_Print_String:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _Lcd_Print_Char *****************
  4537 ;; Defined at:
  4538 ;;		line 93 in file "lcd.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  data            1    wreg     unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  data            1    7[COMRAM] unsigned char 
  4543 ;;  i               2    5[COMRAM] int 
  4544 ;;  i               2    3[COMRAM] int 
  4545 ;;  Upper_Nibble    1    2[COMRAM] unsigned char 
  4546 ;;  Lower_Nibble    1    1[COMRAM] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4556 ;;      Params:         0       0       0       0       0       0       0
  4557 ;;      Locals:         7       0       0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0
  4559 ;;      Totals:         7       0       0       0       0       0       0
  4560 ;;Total ram usage:        7 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 1
  4563 ;; This function calls:
  4564 ;;		_Lcd_SetBit
  4565 ;; This function is called by:
  4566 ;;		_Lcd_Print_String
  4567 ;;		_main
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text31
  4572  00173C                     __ptext31:
  4573                           	callstack 0
  4574  00173C                     _Lcd_Print_Char:
  4575                           	callstack 28
  4576                           
  4577                           ;incstack = 0
  4578                           ;Lcd_Print_Char@data stored from wreg
  4579  00173C  6E08               	movwf	Lcd_Print_Char@data^0,c
  4580  00173E                     
  4581                           ;lcd.c: 93: void Lcd_Print_Char(char data);lcd.c: 94: {;lcd.c: 95:    char Lower_Nibble,
      +                          Upper_Nibble;;lcd.c: 96:    Lower_Nibble = data&0x0F;
  4582  00173E  5008               	movf	Lcd_Print_Char@data^0,w,c
  4583  001740  0B0F               	andlw	15
  4584  001742  6E02               	movwf	Lcd_Print_Char@Lower_Nibble^0,c
  4585                           
  4586                           ;lcd.c: 97:    Upper_Nibble = data&0xF0;
  4587  001744  5008               	movf	Lcd_Print_Char@data^0,w,c
  4588  001746  0BF0               	andlw	240
  4589  001748  6E03               	movwf	Lcd_Print_Char@Upper_Nibble^0,c
  4590  00174A                     
  4591                           ;lcd.c: 98:    RD0 = 1;
  4592  00174A  8083               	bsf	3971,0,c	;volatile
  4593  00174C                     
  4594                           ;lcd.c: 99:    Lcd_SetBit(Upper_Nibble>>4);
  4595  00174C  3803               	swapf	Lcd_Print_Char@Upper_Nibble^0,w,c
  4596  00174E  0B0F               	andlw	15
  4597  001750  ECA7  F00C         	call	_Lcd_SetBit
  4598  001754                     
  4599                           ;lcd.c: 100:    RD2 = 1;
  4600  001754  8483               	bsf	3971,2,c	;volatile
  4601  001756                     
  4602                           ;lcd.c: 101:    for(int i=2130483; i<=0; i--) __nop();
  4603  001756  0E82               	movlw	130
  4604  001758  6E05               	movwf	(Lcd_Print_Char@i+1)^0,c
  4605  00175A  0E33               	movlw	51
  4606  00175C  6E04               	movwf	Lcd_Print_Char@i^0,c
  4607  00175E                     l92:
  4608  00175E  F000               	nop	
  4609  001760  0604               	decf	Lcd_Print_Char@i^0,f,c
  4610  001762  A0D8               	btfss	status,0,c
  4611  001764  0605               	decf	(Lcd_Print_Char@i+1)^0,f,c
  4612  001766  BE05               	btfsc	(Lcd_Print_Char@i+1)^0,7,c
  4613  001768  EFBE  F00B         	goto	u641
  4614  00176C  5005               	movf	(Lcd_Print_Char@i+1)^0,w,c
  4615  00176E  E108               	bnz	u640
  4616  001770  0404               	decf	Lcd_Print_Char@i^0,w,c
  4617  001772  A0D8               	btfss	status,0,c
  4618  001774  EFBE  F00B         	goto	u641
  4619  001778  EFC0  F00B         	goto	u640
  4620  00177C                     u641:
  4621  00177C  EFAF  F00B         	goto	l92
  4622  001780                     u640:
  4623  001780                     
  4624                           ;lcd.c: 102:    RD2 = 0;
  4625  001780  9483               	bcf	3971,2,c	;volatile
  4626  001782                     
  4627                           ;lcd.c: 103:    Lcd_SetBit(Lower_Nibble);
  4628  001782  5002               	movf	Lcd_Print_Char@Lower_Nibble^0,w,c
  4629  001784  ECA7  F00C         	call	_Lcd_SetBit
  4630  001788                     
  4631                           ;lcd.c: 104:    RD2 = 1;
  4632  001788  8483               	bsf	3971,2,c	;volatile
  4633  00178A                     
  4634                           ;lcd.c: 105:    for(int i=2130483; i<=0; i--) __nop();
  4635  00178A  0E82               	movlw	130
  4636  00178C  6E07               	movwf	(Lcd_Print_Char@i_83+1)^0,c
  4637  00178E  0E33               	movlw	51
  4638  001790  6E06               	movwf	Lcd_Print_Char@i_83^0,c
  4639  001792                     l94:
  4640  001792  F000               	nop	
  4641  001794  0606               	decf	Lcd_Print_Char@i_83^0,f,c
  4642  001796  A0D8               	btfss	status,0,c
  4643  001798  0607               	decf	(Lcd_Print_Char@i_83+1)^0,f,c
  4644  00179A  BE07               	btfsc	(Lcd_Print_Char@i_83+1)^0,7,c
  4645  00179C  EFD8  F00B         	goto	u651
  4646  0017A0  5007               	movf	(Lcd_Print_Char@i_83+1)^0,w,c
  4647  0017A2  E108               	bnz	u650
  4648  0017A4  0406               	decf	Lcd_Print_Char@i_83^0,w,c
  4649  0017A6  A0D8               	btfss	status,0,c
  4650  0017A8  EFD8  F00B         	goto	u651
  4651  0017AC  EFDA  F00B         	goto	u650
  4652  0017B0                     u651:
  4653  0017B0  EFC9  F00B         	goto	l94
  4654  0017B4                     u650:
  4655  0017B4                     
  4656                           ;lcd.c: 106:    RD2 = 0;
  4657  0017B4  9483               	bcf	3971,2,c	;volatile
  4658  0017B6  0012               	return		;funcret
  4659  0017B8                     __end_of_Lcd_Print_Char:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _Lcd_Clear *****************
  4663 ;; Defined at:
  4664 ;;		line 48 in file "lcd.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4678 ;;      Params:         0       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 2
  4685 ;; This function calls:
  4686 ;;		_Lcd_Cmd
  4687 ;; This function is called by:
  4688 ;;		_main
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text32
  4693  001D0C                     __ptext32:
  4694                           	callstack 0
  4695  001D0C                     _Lcd_Clear:
  4696                           	callstack 28
  4697  001D0C                     
  4698                           ;lcd.c: 50:  Lcd_Cmd(0);
  4699  001D0C  0E00               	movlw	0
  4700  001D0E  EC76  F00E         	call	_Lcd_Cmd
  4701                           
  4702                           ;lcd.c: 51:  Lcd_Cmd(1);
  4703  001D12  0E01               	movlw	1
  4704  001D14  EC76  F00E         	call	_Lcd_Cmd
  4705  001D18  0012               	return		;funcret
  4706  001D1A                     __end_of_Lcd_Clear:
  4707                           	callstack 0
  4708                           
  4709 ;; *************** function _Lcd_Cmd *****************
  4710 ;; Defined at:
  4711 ;;		line 39 in file "lcd.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  a               1    wreg     unsigned char 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  a               1    2[COMRAM] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4725 ;;      Params:         0       0       0       0       0       0       0
  4726 ;;      Locals:         1       0       0       0       0       0       0
  4727 ;;      Temps:          1       0       0       0       0       0       0
  4728 ;;      Totals:         2       0       0       0       0       0       0
  4729 ;;Total ram usage:        2 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 1
  4732 ;; This function calls:
  4733 ;;		_Lcd_SetBit
  4734 ;; This function is called by:
  4735 ;;		_Lcd_Clear
  4736 ;;		_Lcd_Set_Cursor
  4737 ;;		_Lcd_Start
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text33
  4742  001CEC                     __ptext33:
  4743                           	callstack 0
  4744  001CEC                     _Lcd_Cmd:
  4745                           	callstack 28
  4746                           
  4747                           ;incstack = 0
  4748                           ;Lcd_Cmd@a stored from wreg
  4749  001CEC  6E03               	movwf	Lcd_Cmd@a^0,c
  4750  001CEE                     
  4751                           ;lcd.c: 39: void Lcd_Cmd(char a);lcd.c: 40: {;lcd.c: 41:  RD0 = 0;
  4752  001CEE  9083               	bcf	3971,0,c	;volatile
  4753  001CF0                     
  4754                           ;lcd.c: 42:  Lcd_SetBit(a);
  4755  001CF0  5003               	movf	Lcd_Cmd@a^0,w,c
  4756  001CF2  ECA7  F00C         	call	_Lcd_SetBit
  4757  001CF6                     
  4758                           ;lcd.c: 43:  RD2 = 1;
  4759  001CF6  8483               	bsf	3971,2,c	;volatile
  4760  001CF8                     
  4761                           ;lcd.c: 44:         _delay((unsigned long)((4)*(20000000/4000.0)));
  4762  001CF8  0E1A               	movlw	26
  4763  001CFA  6E02               	movwf	??_Lcd_Cmd^0,c
  4764  001CFC  0EF8               	movlw	248
  4765  001CFE                     u1647:
  4766  001CFE  2EE8               	decfsz	wreg,f,c
  4767  001D00  D7FE               	bra	u1647
  4768  001D02  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  4769  001D04  D7FC               	bra	u1647
  4770  001D06  D000               	nop2	
  4771  001D08                     
  4772                           ;lcd.c: 45:         RD2 = 0;
  4773  001D08  9483               	bcf	3971,2,c	;volatile
  4774  001D0A  0012               	return		;funcret
  4775  001D0C                     __end_of_Lcd_Cmd:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function _Lcd_SetBit *****************
  4779 ;; Defined at:
  4780 ;;		line 16 in file "lcd.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  data_bit        1    wreg     unsigned char 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  data_bit        1    0[COMRAM] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4794 ;;      Params:         0       0       0       0       0       0       0
  4795 ;;      Locals:         1       0       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0
  4797 ;;      Totals:         1       0       0       0       0       0       0
  4798 ;;Total ram usage:        1 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_Lcd_Cmd
  4804 ;;		_Lcd_Start
  4805 ;;		_Lcd_Print_Char
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text34
  4810  00194E                     __ptext34:
  4811                           	callstack 0
  4812  00194E                     _Lcd_SetBit:
  4813                           	callstack 29
  4814                           
  4815                           ;incstack = 0
  4816                           ;Lcd_SetBit@data_bit stored from wreg
  4817  00194E  6E01               	movwf	Lcd_SetBit@data_bit^0,c
  4818  001950                     
  4819                           ;lcd.c: 16: void Lcd_SetBit(char data_bit);lcd.c: 17: {;lcd.c: 18:  if(data_bit& 1)
  4820  001950  A001               	btfss	Lcd_SetBit@data_bit^0,0,c
  4821  001952  EFAD  F00C         	goto	u421
  4822  001956  EFAF  F00C         	goto	u420
  4823  00195A                     u421:
  4824  00195A  EFB2  F00C         	goto	l64
  4825  00195E                     u420:
  4826  00195E                     
  4827                           ;lcd.c: 19:   RD4 = 1;
  4828  00195E  8883               	bsf	3971,4,c	;volatile
  4829  001960  EFB3  F00C         	goto	l1236
  4830  001964                     l64:
  4831                           
  4832                           ;lcd.c: 21:   RD4 = 0;
  4833  001964  9883               	bcf	3971,4,c	;volatile
  4834  001966                     l1236:
  4835                           
  4836                           ;lcd.c: 23:  if(data_bit& 2)
  4837  001966  A201               	btfss	Lcd_SetBit@data_bit^0,1,c
  4838  001968  EFB8  F00C         	goto	u431
  4839  00196C  EFBA  F00C         	goto	u430
  4840  001970                     u431:
  4841  001970  EFBD  F00C         	goto	l66
  4842  001974                     u430:
  4843  001974                     
  4844                           ;lcd.c: 24:   RD5 = 1;
  4845  001974  8A83               	bsf	3971,5,c	;volatile
  4846  001976  EFBE  F00C         	goto	l1240
  4847  00197A                     l66:
  4848                           
  4849                           ;lcd.c: 26:   RD5 = 0;
  4850  00197A  9A83               	bcf	3971,5,c	;volatile
  4851  00197C                     l1240:
  4852                           
  4853                           ;lcd.c: 28:  if(data_bit& 4)
  4854  00197C  A401               	btfss	Lcd_SetBit@data_bit^0,2,c
  4855  00197E  EFC3  F00C         	goto	u441
  4856  001982  EFC5  F00C         	goto	u440
  4857  001986                     u441:
  4858  001986  EFC8  F00C         	goto	l68
  4859  00198A                     u440:
  4860  00198A                     
  4861                           ;lcd.c: 29:   RD6 = 1;
  4862  00198A  8C83               	bsf	3971,6,c	;volatile
  4863  00198C  EFC9  F00C         	goto	l1244
  4864  001990                     l68:
  4865                           
  4866                           ;lcd.c: 31:   RD6 = 0;
  4867  001990  9C83               	bcf	3971,6,c	;volatile
  4868  001992                     l1244:
  4869                           
  4870                           ;lcd.c: 33:  if(data_bit& 8)
  4871  001992  A601               	btfss	Lcd_SetBit@data_bit^0,3,c
  4872  001994  EFCE  F00C         	goto	u451
  4873  001998  EFD0  F00C         	goto	u450
  4874  00199C                     u451:
  4875  00199C  EFD3  F00C         	goto	l70
  4876  0019A0                     u450:
  4877  0019A0                     
  4878                           ;lcd.c: 34:   RD7 = 1;
  4879  0019A0  8E83               	bsf	3971,7,c	;volatile
  4880  0019A2  EFD4  F00C         	goto	l72
  4881  0019A6                     l70:
  4882                           
  4883                           ;lcd.c: 36:   RD7 = 0;
  4884  0019A6  9E83               	bcf	3971,7,c	;volatile
  4885  0019A8                     l72:
  4886  0019A8  0012               	return		;funcret
  4887  0019AA                     __end_of_Lcd_SetBit:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _I2C_Initialize *****************
  4891 ;; Defined at:
  4892 ;;		line 13 in file "i2c.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  feq_K           4   25[COMRAM] const unsigned long 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4906 ;;      Params:         4       0       0       0       0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0
  4908 ;;      Temps:          4       0       0       0       0       0       0
  4909 ;;      Totals:         8       0       0       0       0       0       0
  4910 ;;Total ram usage:        8 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 1
  4913 ;; This function calls:
  4914 ;;		___lldiv
  4915 ;;		___lmul
  4916 ;; This function is called by:
  4917 ;;		_main
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text35
  4922  0016BC                     __ptext35:
  4923                           	callstack 0
  4924  0016BC                     _I2C_Initialize:
  4925                           	callstack 29
  4926  0016BC                     
  4927                           ;i2c.c: 13: void I2C_Initialize(const unsigned long feq_K);i2c.c: 14: {;i2c.c: 15:   TRI
      +                          SC3 = 1; TRISC4 = 1;
  4928  0016BC  8694               	bsf	3988,3,c	;volatile
  4929  0016BE  8894               	bsf	3988,4,c	;volatile
  4930  0016C0                     
  4931                           ;i2c.c: 17:   SSPCON1 = 0b00101000;
  4932  0016C0  0E28               	movlw	40
  4933  0016C2  6EC6               	movwf	198,c	;volatile
  4934                           
  4935                           ;i2c.c: 18:   SSPCON2 = 0b00000000;
  4936  0016C4  0E00               	movlw	0
  4937  0016C6  6EC5               	movwf	197,c	;volatile
  4938  0016C8                     
  4939                           ;i2c.c: 20:   SSPADD = (20000000/(4*feq_K*100))-1;
  4940  0016C8  0E00               	movlw	0
  4941  0016CA  6E0D               	movwf	___lldiv@dividend^0,c
  4942  0016CC  0E2D               	movlw	45
  4943  0016CE  6E0E               	movwf	(___lldiv@dividend+1)^0,c
  4944  0016D0  0E31               	movlw	49
  4945  0016D2  6E0F               	movwf	(___lldiv@dividend+2)^0,c
  4946  0016D4  0E01               	movlw	1
  4947  0016D6  6E10               	movwf	(___lldiv@dividend+3)^0,c
  4948  0016D8  C01A  F01E         	movff	I2C_Initialize@feq_K,??_I2C_Initialize
  4949  0016DC  C01B  F01F         	movff	I2C_Initialize@feq_K+1,??_I2C_Initialize+1
  4950  0016E0  C01C  F020         	movff	I2C_Initialize@feq_K+2,??_I2C_Initialize+2
  4951  0016E4  C01D  F021         	movff	I2C_Initialize@feq_K+3,??_I2C_Initialize+3
  4952  0016E8  0E02               	movlw	2
  4953  0016EA                     u1515:
  4954  0016EA  90D8               	bcf	status,0,c
  4955  0016EC  361E               	rlcf	??_I2C_Initialize^0,f,c
  4956  0016EE  361F               	rlcf	(??_I2C_Initialize+1)^0,f,c
  4957  0016F0  3620               	rlcf	(??_I2C_Initialize+2)^0,f,c
  4958  0016F2  3621               	rlcf	(??_I2C_Initialize+3)^0,f,c
  4959  0016F4  2EE8               	decfsz	wreg,f,c
  4960  0016F6  EF75  F00B         	goto	u1515
  4961  0016FA  C01E  F001         	movff	??_I2C_Initialize,___lmul@multiplier
  4962  0016FE  C01F  F002         	movff	??_I2C_Initialize+1,___lmul@multiplier+1
  4963  001702  C020  F003         	movff	??_I2C_Initialize+2,___lmul@multiplier+2
  4964  001706  C021  F004         	movff	??_I2C_Initialize+3,___lmul@multiplier+3
  4965  00170A  0E64               	movlw	100
  4966  00170C  6E05               	movwf	___lmul@multiplicand^0,c
  4967  00170E  0E00               	movlw	0
  4968  001710  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4969  001712  0E00               	movlw	0
  4970  001714  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4971  001716  0E00               	movlw	0
  4972  001718  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4973  00171A  ECDC  F00B         	call	___lmul	;wreg free
  4974  00171E  C001  F011         	movff	?___lmul,___lldiv@divisor
  4975  001722  C002  F012         	movff	?___lmul+1,___lldiv@divisor+1
  4976  001726  C003  F013         	movff	?___lmul+2,___lldiv@divisor+2
  4977  00172A  C004  F014         	movff	?___lmul+3,___lldiv@divisor+3
  4978  00172E  ECC2  F00A         	call	___lldiv	;wreg free
  4979  001732  040D               	decf	?___lldiv^0,w,c
  4980  001734  6EC8               	movwf	200,c	;volatile
  4981  001736                     
  4982                           ;i2c.c: 21:   SSPSTAT = 0b00000000;
  4983  001736  0E00               	movlw	0
  4984  001738  6EC7               	movwf	199,c	;volatile
  4985  00173A  0012               	return		;funcret
  4986  00173C                     __end_of_I2C_Initialize:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function ___lmul *****************
  4990 ;; Defined at:
  4991 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  multiplier      4    0[COMRAM] unsigned long 
  4994 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  product         4    8[COMRAM] unsigned long 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  4    0[COMRAM] unsigned long 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5006 ;;      Params:         8       0       0       0       0       0       0
  5007 ;;      Locals:         4       0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0
  5009 ;;      Totals:        12       0       0       0       0       0       0
  5010 ;;Total ram usage:       12 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_I2C_Initialize
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text36
  5020  0017B8                     __ptext36:
  5021                           	callstack 0
  5022  0017B8                     ___lmul:
  5023                           	callstack 29
  5024  0017B8  0E00               	movlw	0
  5025  0017BA  6E09               	movwf	___lmul@product^0,c
  5026  0017BC  0E00               	movlw	0
  5027  0017BE  6E0A               	movwf	(___lmul@product+1)^0,c
  5028  0017C0  0E00               	movlw	0
  5029  0017C2  6E0B               	movwf	(___lmul@product+2)^0,c
  5030  0017C4  0E00               	movlw	0
  5031  0017C6  6E0C               	movwf	(___lmul@product+3)^0,c
  5032  0017C8                     l2116:
  5033  0017C8  A001               	btfss	___lmul@multiplier^0,0,c
  5034  0017CA  EFE9  F00B         	goto	u1451
  5035  0017CE  EFEB  F00B         	goto	u1450
  5036  0017D2                     u1451:
  5037  0017D2  EFF3  F00B         	goto	l2120
  5038  0017D6                     u1450:
  5039  0017D6  5005               	movf	___lmul@multiplicand^0,w,c
  5040  0017D8  2609               	addwf	___lmul@product^0,f,c
  5041  0017DA  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5042  0017DC  220A               	addwfc	(___lmul@product+1)^0,f,c
  5043  0017DE  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5044  0017E0  220B               	addwfc	(___lmul@product+2)^0,f,c
  5045  0017E2  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5046  0017E4  220C               	addwfc	(___lmul@product+3)^0,f,c
  5047  0017E6                     l2120:
  5048  0017E6  90D8               	bcf	status,0,c
  5049  0017E8  3605               	rlcf	___lmul@multiplicand^0,f,c
  5050  0017EA  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5051  0017EC  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5052  0017EE  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5053  0017F0  90D8               	bcf	status,0,c
  5054  0017F2  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5055  0017F4  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5056  0017F6  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5057  0017F8  3201               	rrcf	___lmul@multiplier^0,f,c
  5058  0017FA  5001               	movf	___lmul@multiplier^0,w,c
  5059  0017FC  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5060  0017FE  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5061  001800  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5062  001802  A4D8               	btfss	status,2,c
  5063  001804  EF06  F00C         	goto	u1461
  5064  001808  EF08  F00C         	goto	u1460
  5065  00180C                     u1461:
  5066  00180C  EFE4  F00B         	goto	l2116
  5067  001810                     u1460:
  5068  001810  C009  F001         	movff	___lmul@product,?___lmul
  5069  001814  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5070  001818  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5071  00181C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5072  001820  0012               	return		;funcret
  5073  001822                     __end_of___lmul:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function ___lldiv *****************
  5077 ;; Defined at:
  5078 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  dividend        4   12[COMRAM] unsigned long 
  5081 ;;  divisor         4   16[COMRAM] unsigned long 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  quotient        4   20[COMRAM] unsigned long 
  5084 ;;  counter         1   24[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  4   12[COMRAM] unsigned long 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5094 ;;      Params:         8       0       0       0       0       0       0
  5095 ;;      Locals:         5       0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0
  5097 ;;      Totals:        13       0       0       0       0       0       0
  5098 ;;Total ram usage:       13 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_I2C_Initialize
  5104 ;;		_UART_Init
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text37
  5109  001584                     __ptext37:
  5110                           	callstack 0
  5111  001584                     ___lldiv:
  5112                           	callstack 29
  5113  001584  0E00               	movlw	0
  5114  001586  6E15               	movwf	___lldiv@quotient^0,c
  5115  001588  0E00               	movlw	0
  5116  00158A  6E16               	movwf	(___lldiv@quotient+1)^0,c
  5117  00158C  0E00               	movlw	0
  5118  00158E  6E17               	movwf	(___lldiv@quotient+2)^0,c
  5119  001590  0E00               	movlw	0
  5120  001592  6E18               	movwf	(___lldiv@quotient+3)^0,c
  5121  001594  5011               	movf	___lldiv@divisor^0,w,c
  5122  001596  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  5123  001598  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  5124  00159A  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  5125  00159C  B4D8               	btfsc	status,2,c
  5126  00159E  EFD3  F00A         	goto	u1471
  5127  0015A2  EFD5  F00A         	goto	u1470
  5128  0015A6                     u1471:
  5129  0015A6  EF0B  F00B         	goto	l265
  5130  0015AA                     u1470:
  5131  0015AA  0E01               	movlw	1
  5132  0015AC  6E19               	movwf	___lldiv@counter^0,c
  5133  0015AE  EFDF  F00A         	goto	l2132
  5134  0015B2                     l2130:
  5135  0015B2  90D8               	bcf	status,0,c
  5136  0015B4  3611               	rlcf	___lldiv@divisor^0,f,c
  5137  0015B6  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  5138  0015B8  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  5139  0015BA  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  5140  0015BC  2A19               	incf	___lldiv@counter^0,f,c
  5141  0015BE                     l2132:
  5142  0015BE  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  5143  0015C0  EFE4  F00A         	goto	u1481
  5144  0015C4  EFE6  F00A         	goto	u1480
  5145  0015C8                     u1481:
  5146  0015C8  EFD9  F00A         	goto	l2130
  5147  0015CC                     u1480:
  5148  0015CC                     l2134:
  5149  0015CC  90D8               	bcf	status,0,c
  5150  0015CE  3615               	rlcf	___lldiv@quotient^0,f,c
  5151  0015D0  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  5152  0015D2  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  5153  0015D4  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  5154  0015D6  5011               	movf	___lldiv@divisor^0,w,c
  5155  0015D8  5C0D               	subwf	___lldiv@dividend^0,w,c
  5156  0015DA  5012               	movf	(___lldiv@divisor+1)^0,w,c
  5157  0015DC  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  5158  0015DE  5013               	movf	(___lldiv@divisor+2)^0,w,c
  5159  0015E0  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  5160  0015E2  5014               	movf	(___lldiv@divisor+3)^0,w,c
  5161  0015E4  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  5162  0015E6  A0D8               	btfss	status,0,c
  5163  0015E8  EFF8  F00A         	goto	u1491
  5164  0015EC  EFFA  F00A         	goto	u1490
  5165  0015F0                     u1491:
  5166  0015F0  EF03  F00B         	goto	l2142
  5167  0015F4                     u1490:
  5168  0015F4  5011               	movf	___lldiv@divisor^0,w,c
  5169  0015F6  5E0D               	subwf	___lldiv@dividend^0,f,c
  5170  0015F8  5012               	movf	(___lldiv@divisor+1)^0,w,c
  5171  0015FA  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  5172  0015FC  5013               	movf	(___lldiv@divisor+2)^0,w,c
  5173  0015FE  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  5174  001600  5014               	movf	(___lldiv@divisor+3)^0,w,c
  5175  001602  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  5176  001604  8015               	bsf	___lldiv@quotient^0,0,c
  5177  001606                     l2142:
  5178  001606  90D8               	bcf	status,0,c
  5179  001608  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  5180  00160A  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  5181  00160C  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  5182  00160E  3211               	rrcf	___lldiv@divisor^0,f,c
  5183  001610  2E19               	decfsz	___lldiv@counter^0,f,c
  5184  001612  EFE6  F00A         	goto	l2134
  5185  001616                     l265:
  5186  001616  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  5187  00161A  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  5188  00161E  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  5189  001622  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  5190  001626  0012               	return		;funcret
  5191  001628                     __end_of___lldiv:
  5192                           	callstack 0
  5193                           
  5194                           	psect	rparam
  5195  0000                     
  5196                           	psect	idloc
  5197                           
  5198                           ;Config register IDLOC0 @ 0x200000
  5199                           ;	unspecified, using default values
  5200  200000                     	org	2097152
  5201  200000  FF                 	db	255
  5202                           
  5203                           ;Config register IDLOC1 @ 0x200001
  5204                           ;	unspecified, using default values
  5205  200001                     	org	2097153
  5206  200001  FF                 	db	255
  5207                           
  5208                           ;Config register IDLOC2 @ 0x200002
  5209                           ;	unspecified, using default values
  5210  200002                     	org	2097154
  5211  200002  FF                 	db	255
  5212                           
  5213                           ;Config register IDLOC3 @ 0x200003
  5214                           ;	unspecified, using default values
  5215  200003                     	org	2097155
  5216  200003  FF                 	db	255
  5217                           
  5218                           ;Config register IDLOC4 @ 0x200004
  5219                           ;	unspecified, using default values
  5220  200004                     	org	2097156
  5221  200004  FF                 	db	255
  5222                           
  5223                           ;Config register IDLOC5 @ 0x200005
  5224                           ;	unspecified, using default values
  5225  200005                     	org	2097157
  5226  200005  FF                 	db	255
  5227                           
  5228                           ;Config register IDLOC6 @ 0x200006
  5229                           ;	unspecified, using default values
  5230  200006                     	org	2097158
  5231  200006  FF                 	db	255
  5232                           
  5233                           ;Config register IDLOC7 @ 0x200007
  5234                           ;	unspecified, using default values
  5235  200007                     	org	2097159
  5236  200007  FF                 	db	255
  5237                           
  5238                           	psect	config
  5239                           
  5240                           ; Padding undefined space
  5241  300000                     	org	3145728
  5242  300000  FF                 	db	255
  5243                           
  5244                           ;Config register CONFIG1H @ 0x300001
  5245                           ;	Oscillator Selection bits
  5246                           ;	OSC = HS, HS oscillator
  5247                           ;	Fail-Safe Clock Monitor Enable bit
  5248                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5249                           ;	Internal/External Oscillator Switchover bit
  5250                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5251  300001                     	org	3145729
  5252  300001  02                 	db	2
  5253                           
  5254                           ;Config register CONFIG2L @ 0x300002
  5255                           ;	Power-up Timer Enable bit
  5256                           ;	PWRT = OFF, PWRT disabled
  5257                           ;	Brown-out Reset Enable bits
  5258                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5259                           ;	Brown Out Reset Voltage bits
  5260                           ;	BORV = 3, Minimum setting
  5261  300002                     	org	3145730
  5262  300002  19                 	db	25
  5263                           
  5264                           ;Config register CONFIG2H @ 0x300003
  5265                           ;	Watchdog Timer Enable bit
  5266                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5267                           ;	Watchdog Timer Postscale Select bits
  5268                           ;	WDTPS = 32768, 1:32768
  5269  300003                     	org	3145731
  5270  300003  1E                 	db	30
  5271                           
  5272                           ; Padding undefined space
  5273  300004                     	org	3145732
  5274  300004  FF                 	db	255
  5275                           
  5276                           ;Config register CONFIG3H @ 0x300005
  5277                           ;	CCP2 MUX bit
  5278                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5279                           ;	PORTB A/D Enable bit
  5280                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5281                           ;	Low-Power Timer1 Oscillator Enable bit
  5282                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5283                           ;	MCLR Pin Enable bit
  5284                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5285  300005                     	org	3145733
  5286  300005  03                 	db	3
  5287                           
  5288                           ;Config register CONFIG4L @ 0x300006
  5289                           ;	Stack Full/Underflow Reset Enable bit
  5290                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5291                           ;	Single-Supply ICSP Enable bit
  5292                           ;	LVP = ON, Single-Supply ICSP enabled
  5293                           ;	Extended Instruction Set Enable bit
  5294                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5295                           ;	Background Debugger Enable bit
  5296                           ;	DEBUG = 0x1, unprogrammed default
  5297  300006                     	org	3145734
  5298  300006  85                 	db	133
  5299                           
  5300                           ; Padding undefined space
  5301  300007                     	org	3145735
  5302  300007  FF                 	db	255
  5303                           
  5304                           ;Config register CONFIG5L @ 0x300008
  5305                           ;	Code Protection bit
  5306                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5307                           ;	Code Protection bit
  5308                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5309                           ;	Code Protection bit
  5310                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5311                           ;	Code Protection bit
  5312                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5313  300008                     	org	3145736
  5314  300008  0F                 	db	15
  5315                           
  5316                           ;Config register CONFIG5H @ 0x300009
  5317                           ;	Boot Block Code Protection bit
  5318                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5319                           ;	Data EEPROM Code Protection bit
  5320                           ;	CPD = OFF, Data EEPROM not code-protected
  5321  300009                     	org	3145737
  5322  300009  C0                 	db	192
  5323                           
  5324                           ;Config register CONFIG6L @ 0x30000A
  5325                           ;	Write Protection bit
  5326                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5327                           ;	Write Protection bit
  5328                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5329                           ;	Write Protection bit
  5330                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5331                           ;	Write Protection bit
  5332                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5333  30000A                     	org	3145738
  5334  30000A  0F                 	db	15
  5335                           
  5336                           ;Config register CONFIG6H @ 0x30000B
  5337                           ;	Configuration Register Write Protection bit
  5338                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5339                           ;	Boot Block Write Protection bit
  5340                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5341                           ;	Data EEPROM Write Protection bit
  5342                           ;	WRTD = OFF, Data EEPROM not write-protected
  5343  30000B                     	org	3145739
  5344  30000B  E0                 	db	224
  5345                           
  5346                           ;Config register CONFIG7L @ 0x30000C
  5347                           ;	Table Read Protection bit
  5348                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5349                           ;	Table Read Protection bit
  5350                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5351                           ;	Table Read Protection bit
  5352                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5353                           ;	Table Read Protection bit
  5354                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5355  30000C                     	org	3145740
  5356  30000C  0F                 	db	15
  5357                           
  5358                           ;Config register CONFIG7H @ 0x30000D
  5359                           ;	Boot Block Table Read Protection bit
  5360                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5361  30000D                     	org	3145741
  5362  30000D  40                 	db	64
  5363                           tosu	equ	0xFFF
  5364                           tosh	equ	0xFFE
  5365                           tosl	equ	0xFFD
  5366                           stkptr	equ	0xFFC
  5367                           pclatu	equ	0xFFB
  5368                           pclath	equ	0xFFA
  5369                           pcl	equ	0xFF9
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           indf0	equ	0xFEF
  5377                           postinc0	equ	0xFEE
  5378                           postdec0	equ	0xFED
  5379                           preinc0	equ	0xFEC
  5380                           plusw0	equ	0xFEB
  5381                           fsr0h	equ	0xFEA
  5382                           fsr0l	equ	0xFE9
  5383                           wreg	equ	0xFE8
  5384                           indf1	equ	0xFE7
  5385                           postinc1	equ	0xFE6
  5386                           postdec1	equ	0xFE5
  5387                           preinc1	equ	0xFE4
  5388                           plusw1	equ	0xFE3
  5389                           fsr1h	equ	0xFE2
  5390                           fsr1l	equ	0xFE1
  5391                           bsr	equ	0xFE0
  5392                           indf2	equ	0xFDF
  5393                           postinc2	equ	0xFDE
  5394                           postdec2	equ	0xFDD
  5395                           preinc2	equ	0xFDC
  5396                           plusw2	equ	0xFDB
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8

Data Sizes:
    Strings     70
    Constant    0
    Data        6
    BSS         304
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    113     127
    BANK0           128      0      40
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_6(CODE[20]), STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_6(CODE[20]), STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_6(CODE[20]), STR_1(CODE[24]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1043_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    UART_Send_String@text	PTR unsigned char  size(2) Largest target is 256
		 -> print_buffer(BANK1[256]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[11]), STR_2(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Update_Current_Date_Time->_I2C_Write
    _I2C_Read->_I2C_Idle
    _BCD_2_DEC->___wmul
    _UART_Send_String->_UART_Send
    _UART_Init->___lldiv
    _Set_Time_Date->_I2C_Write
    _I2C_Write->_DEC_2_BCD
    _I2C_End->_I2C_Idle
    _I2C_Begin->_I2C_Idle
    _DEC_2_BCD->___awdiv
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _I2C_Initialize->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   20813
                                            111 COMRAM     2     2      0
                     _I2C_Initialize
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                      _Set_Time_Date
                          _UART_Init
                   _UART_Send_String
           _Update_Current_Date_Time
                            ___awdiv
                            ___awmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    10     16    6608
                                             87 COMRAM    24     8     16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             1     1      0    1958
                                             14 COMRAM     1     1      0
                          _BCD_2_DEC
                          _I2C_Begin
                            _I2C_End
                           _I2C_Read
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                              1 COMRAM     2     2      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            7     5      2     903
                                              6 COMRAM     7     5      2
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Send_String                                     4     2      2     257
                                              2 COMRAM     4     2      2
                          _UART_Send
 ---------------------------------------------------------------------------------
 (2) _UART_Send                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           14    10      4     631
                                             25 COMRAM    14    10      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _Set_Time_Date                                        0     0      0    5146
                          _DEC_2_BCD
                          _I2C_Begin
                            _I2C_End
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2    1010
                                             12 COMRAM     2     0      2
                          _DEC_2_BCD (ARG)
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_Begin                                            0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Idle                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DEC_2_BCD                                            4     2      2    4136
                                              8 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1816
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1820
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            3     3      0     165
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     649
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     6     4      2     574
                                              8 COMRAM     6     4      2
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       7     7      0     180
                                              1 COMRAM     7     7      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       8     4      4     934
                                             25 COMRAM     8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Start
     _Lcd_Cmd
     _Lcd_SetBit
   _Set_Time_Date
     _DEC_2_BCD
       ___awdiv
       ___awmod
     _I2C_Begin
       _I2C_Idle
     _I2C_End
       _I2C_Idle
     _I2C_Write
       _DEC_2_BCD (ARG)
       _I2C_Idle (ARG)
   _UART_Init
     ___lldiv
   _UART_Send_String
     _UART_Send
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Read (ARG)
         _I2C_Idle
       ___wmul (ARG)
     _I2C_Begin
     _I2C_End
     _I2C_Read
     _I2C_Write
   ___awdiv
   ___awmod
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      28       5       31.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     71      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A7      15        0.0%
DATA                 0      0     1A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 17 22:42:54 2021

               __size_of_I2C_Begin 0008                 __size_of_I2C_Write 000A  
                               l33 1CEA                                 l42 1D22  
                               l27 173A                                 l36 1D32  
                               l45 1C9E                                 l70 19A6  
                               l39 1D2A                                 l72 19A8  
                               l64 1964                                 l66 197A  
                               l75 1D0A                                 l68 1990  
                               l92 175E                                 l84 1886  
                               l93 1780                                 l78 1D18  
                               l94 1792                                 l95 17B4  
                               l96 17B6                                 l89 18EA  
                     ___awdiv@sign 0006                 __size_of_DEC_2_BCD 0050  
              ___wmul@multiplicand 0003                                l102 1A58  
                              l133 16BA                                l142 1C04  
                              l232 14D2                                l145 1C3A  
                              l250 1820                                l226 1B3C  
                              l139 1C00                                l235 11D0  
                              l229 1AA8                                l238 1CC4  
                              l272 1626                                l352 0F92  
                              l265 1616                                l249 1810  
                              l365 10F6                                l482 1582  
                              l469 135E                                l916 1AF6  
                              l943 13A4                                l946 13E6  
                              l954 0A1A                                l948 1420  
                              l956 0A22                                l981 0E0A  
                              l974 0C58                                l992 1BB8  
                              l995 1BC0                                l987 1944  
                              l988 194C                                _RD0 007C18  
                              _RD2 007C1A                                _RD4 007C1C  
                              _RD5 007C1D                                _RD6 007C1E  
                              _RD7 007C1F                                u420 195E  
                              u421 195A                                u430 1974  
                              u431 1970                                u440 198A  
                              _PEN 007E2A                                u441 1986  
                              u450 19A0                                u451 199C  
                              u640 1780                                u641 177C  
                              u650 17B4                                u651 17B0  
                              u660 1C12                                u900 1C64  
                              _SEN 007E28                                u661 1C0E  
                              u901 1C60                                u670 1C26  
                              u910 0E1E                                u671 1C20  
                              u911 0E1A                                u920 0E50  
                              u921 0E4C                                u850 11E4  
                              u931 0E7A                                u851 11E0  
                              u676 1C28                                u940 0E9E  
                              u860 11F6                                u941 0E9A  
                              u861 11F2                                u950 0EC8  
                              u870 121E                                u951 0EC4  
                              u871 121A                                u960 0F08  
                              u880 1254                                u961 0F04  
                              u881 1250                                u970 0F52  
                              u890 1B80                                u971 0F4E  
                              u891 1B7C                                u980 0FA6  
                              u981 0FA2                                u990 0FD8  
                              u991 0FD4                                _abs 1B82  
                              _pad 1360                    __end_of_I2C_End 1D2C  
                     ___awmod@sign 0006                                wreg 000FE8  
                             l1007 129A                               l1015 1B80  
                             l1024 1C70                               l2010 14F2  
                             l2002 14D4                               l1018 1D3A  
                             ?_abs 0013                               l2020 152A  
                             l2012 1500                               l2004 14D8  
                             l2100 1C9A                               l2022 1538  
                             l2030 1562                               l2014 1508  
                             l2006 14E6                               l2110 1A5A  
                             l2102 1C9C                               l2120 17E6  
                             l1240 197C                               l1232 1950  
                             l2032 1572                               l2024 154E  
                             l2016 151A                               l2008 14EE  
                             l2200 16B0                               l2040 0C7E  
                             l2130 15B2                               l2122 17F0  
                             l2114 17B8                               l1242 198A  
                             l1234 195E                               l1410 1D08  
                             l1402 1CEE                               l2034 157A  
                             l2026 1556                               l2018 1522  
                             l2202 16B2                               l2210 1BC2  
                             l2106 1AF8                               l2050 0CE8  
                             l2042 0C8C                               l2140 1604  
                             l2132 15BE                               l2124 1584  
                             l2116 17C8                               l1244 1992  
                             l1236 1966                               l1404 1CF0  
                             l1420 1756                               l1412 173E  
                             l2028 155C                               l2204 16B4  
                             l2212 1BCE                               l2060 0D9A  
                             l2052 0D30                               l2044 0C9C  
                             l2220 1ABA                               l2300 0742  
                             l2142 1606                               l2134 15CC  
                             l2126 1594                               l2118 17D6  
                             l1246 19A0                               l1238 1974  
                             l1406 1CF6                               l1430 1782  
                             l1414 174A                               l2230 1422  
                             l2206 16B6                               l2214 1BE0  
                             l2062 0DAE                               l2046 0CA0  
                             l2038 0C5A                               l2150 1902  
                             l2222 1AC2                               l2310 079C  
                             l2302 0748                               l2144 1610  
                             l2136 15D6                               l2128 15AA  
                             l2160 1736                               l1408 1CF8  
                             l1440 1794                               l1432 1788  
                             l1416 174C                               l2080 1D2C  
                             l2208 16B8                               l2216 1BE4  
                             l2240 116A                               l2232 10F8  
                             l2056 0D68                               l2048 0CC4  
                             l2072 0DD4                               l2152 1928  
                             l2224 1ACA                               l2320 07F6  
                             l2312 07B6                               l2304 0762  
                             l2138 15F4                               l2154 16BC  
                             l1506 1D0C                               l1442 179A  
                             l1434 178A                               l1426 1760  
                             l1418 1754                               l2170 1856  
                             l2162 1824                               l2082 1D30  
                             l2090 1D1E                               l2250 11CC  
                             l2242 11B2                               l2234 1128  
                             l2074 0DF8                               l2058 0D8C  
                             l2066 0DBA                               l2146 18EC  
                             l2226 1AE6                               l2218 1AAA  
                             l2330 0850                               l2322 0810  
                             l2314 07C6                               l2306 077C  
                             l2156 16C0                               l1428 1766  
                             l2180 1A10                               l2172 1868  
                             l2164 1834                               l1540 18A4  
                             l1524 1888                               l2084 1D24  
                             l1444 1C04                               l2092 1C74  
                             l2244 11B6                               l2236 113E  
                             l2068 0DC8                               l2148 18F4  
                             l2340 08A0                               l2332 0856  
                             l2324 0816                               l2316 07D0  
                             l2308 0782                               l2260 0678  
                             l2252 0648                               l2158 16C8  
                             l2182 1A2C                               l2174 187A  
                             l2166 1846                               l1550 18D2  
                             l1542 18BA                               l1526 188E  
                             l2086 1D28                               l2190 16A2  
                             l1446 1C12                               l2094 1C78  
                             l2246 11BA                               l2238 1154  
                             l2342 0950                               l2334 085C  
                             l2326 0830                               l2318 07DC  
                             l2270 0684                               l2262 067C  
                             l2254 064C                               l2184 1A30  
                             l2176 1880                               l2168 184C  
                             l1552 18D8                               l1544 18C0  
                             l1536 188E                               l1528 188E  
                             l2088 1D1A                               l2192 16A4  
                             l1448 1C16                               l2096 1C7E  
                             l2248 11C6                               l1800 0EBA  
                             l2344 095C                               l2336 0876  
                             l2328 084A                               l2280 06BE  
                             l2272 0698                               l2264 067E  
                             l2256 0650                               l2178 1A04  
                             l1554 18DE                               l1546 18C6  
                             l1538 1894                               l2194 16A8  
                             l2186 1628                               l2098 1C86  
                             l1810 0F2A                               l1802 0EC8  
                             l2338 0890                               l2290 06F4  
                             l2282 06C8                               l2274 06A4  
                             l2266 0680                               l2258 0664  
                             l1556 18E4                               l1548 18CC  
                             l2196 16AC                               l2188 16A0  
                             l1812 0F3C                               l1804 0EDA  
                             l1900 0A3C                               l2292 06F8  
                             l2284 06D4                               l2276 06A8  
                             l2268 0682                               l2198 16AE  
                             l1806 0F08                               l1814 0F42  
                             l1830 0FCA                               l1822 0F94  
                             l1750 11F6                               l1910 0A68  
                             l1902 0A4A                               l2294 0702  
                             l2286 06EC                               l2278 06B2  
                             l1816 0F52                               l1808 0F28  
                             l1840 1032                               l1832 0FD8  
                             l1824 0F98                               l1752 1200  
                             l1760 1B3E                               l1920 0B74  
                             l1912 0AEA                               l1904 0A50  
                             l2296 070E                               l2288 06F0  
                             l1818 0F72                               l1842 1040  
                             l1850 10A6                               l1834 0FF8  
                             l1826 0FA6                               l1754 121E  
                             l1746 11D2                               l1762 1B4A  
                             l1770 1C48                               l1930 0BE6  
                             l1922 0B92                               l1914 0AF0  
                             l1906 0A58                               l2298 0728  
                             l1780 0E10                               l1852 10B6  
                             l1844 106E                               l1836 1016  
                             l1828 0FC6                               l1756 1254  
                             l1748 11E4                               l1764 1B5C  
                             l1772 1C4C                               l1860 136E  
                             l1940 0C20                               l1932 0BF4  
                             l1924 0BAC                               l1916 0AF6  
                             l1908 0A62                               l1950 1CDC  
                             l1790 0E70                               l1782 0E1E  
                             l1854 10D6                               l1846 108E  
                             l1838 101E                               l1766 1B60  
                             l1774 1C64                               l1870 13C4  
                             l1862 1382                               l1934 0BFA  
                             l1942 0C30                               l1926 0BC6  
                             l1918 0B5A                               l1960 12A0  
                             l1952 1CA0                               l1792 0E74  
                             l1784 0E3E                               l1848 10A0  
                             l1880 1B82                               l1768 1C3C  
                             l1872 13C8                               l1864 1390  
                             l1936 0C0C                               l1928 0BD4  
                             l1970 12D0                               l1962 12AE  
                             l1946 1CC6                               l1954 1CBC  
                             l1794 0E80                               l1786 0E42  
                             l1778 0E0C                               l1882 1B9C  
                             l1874 13F4                               l1866 139C  
                             l1858 1360                               l1938 0C18  
                             l1890 09E4                               l1980 12FE  
                             l1972 12D4                               l1964 12B6  
                             l1948 1CC6                               l1796 0E9E  
                             l1788 0E50                               l1876 1408  
                             l1868 13B0                               l1892 09F2  
                             l1884 097C                               l1990 1332  
                             l1982 130C                               l1974 12DC  
                             l1966 12BA                               l1958 129C  
                             l1798 0EA6                               l1894 09F4  
                             l1886 099C                               ?_pad 0011  
                             l1992 1338                               l1984 1312  
                             l1976 12EE                               l1968 12C8  
                             l1896 0A0E                               l1888 09C4  
                             l1986 1328                               l1978 12F6  
                             l1994 133E                               l1898 0A2A  
                             l1996 134E                               l1988 1330  
                             l1998 1356                               STR_1 0601  
                             STR_2 062D                               STR_3 060E  
                             STR_4 0639                               STR_5 0640  
                             STR_6 0619                               u1000 1016  
                             u1001 1012                               u1010 1040  
                             u1011 103C                               u1020 106E  
                             u1100 09AE                               u1021 106A  
                             u1030 10B6                               u1110 09C4  
                             u1031 10B2                               u1111 09C0  
                             u1040 136E                               u1200 0BD4  
                             u1120 09F2                               u1041 136A  
                             u1201 0BD0                               u1121 09EE  
                             u1050 1390                               u1210 0BE6  
                             u1130 0A0E                               u1051 138C  
                             u1211 0BE2                               u1131 0A0A  
                             u1300 1328                               u1060 13E6  
                             u1220 0BF4                               u1140 0A3C  
                             u1301 1324                               u1061 13E2  
                             u1221 0BF0                               u1141 0A38  
                             u1310 134E                               u1070 13F4  
                             u1230 0C0C                               u1150 0A4A  
                             u1311 134A                               u1071 13F0  
                             u1231 0C08                               u1151 0A46  
                             u1320 14E6                               u1240 1CDC  
                             u1080 1B9C                               u1160 0B74  
                             u1400 0CE8                               u1321 14E2  
                             u1241 1CD8                               u1081 1B98  
                             u1161 0B70                               u1401 0CE4  
                             u1330 1500                               u1250 1CEA  
                             u1170 0B92                               u1090 09AC  
                             u1410 0D8C                               u1331 14FC  
                             u1251 1CE6                               u1171 0B8E  
                             u1091 09A6                               u1411 0D88  
                             u1260 12AE                               u1340 151A  
                             u1420 1C98                               u1180 0BAC  
                             u1500 1944                               u1261 12AA  
                             u1341 1516                               u1421 1C92  
                             u1181 0BA8                               u1501 1940  
                             u1270 12C8                               u1350 1538  
                             u1190 0BC6                               _LATB 000F8A  
                             u1271 12C4                               u1351 1534  
                             u1191 0BC2                               u1520 1834  
                             u1280 12EE                               u1360 154E  
                             u1521 1830                               u1281 12EA  
                             u1361 154A                               u1450 17D6  
                             u1530 1868                               u1290 130C  
                             u1370 1572                               u1451 17D2  
                             u1515 16EA                               u1531 1864  
                             u1291 1308                               u1371 156E  
                             u1435 1C9A                               u1460 1810  
                             u1540 1A58                               u1380 0C7E  
                             u1461 180C                               u1541 1A54  
                             u1445 1B10                               u1381 0C7A  
                             u1470 15AA                               u1390 0CC4  
                             u1471 15A6                               u1391 0CC0  
                             u1607 0896                               u1480 15CC  
                             u1481 15C8                               u1617 0966  
                             u1490 15F4                               u1570 1C00  
                             u1491 15F0                               u1627 189A  
                             u1555 163A                               u1571 1BFC  
                             u1637 18B0                               u1565 1674  
                             u1647 1CFE                               u1587 06DE  
                             u1597 07BC                               _RCEN 007E2B  
                             _RCIF 007CF5                               _TRMT 007D61  
                             abs@a 0013                               _dbuf 0082  
                             _main 0648                               _dtoa 097C  
                 __end_of_I2C_Idle 1CEC                               _prec 007A  
                 __end_of_I2C_Read 1CA0                               _nout 0080  
                             pad@i 0018                               pad@p 0015  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             pad@w 001A                               fsr2l 000FD9  
                             prodh 000FF4                               prodl 000FF3  
                             start 0000                 Lcd_Print_Char@i_83 0006  
               Lcd_Print_Char@data 0008                    __end_of_Lcd_Cmd 1D0C  
                     ___param_bank 000000                              ??_abs 0015  
                            ??_pad 0017                         _Lcd_SetBit 194E  
                  __end_of___aodiv 0F94                              ?_main 0001  
                            ?_dtoa 001C                    __end_of___aomod 10F8  
                            _ACKEN 007E2C                              _ACKDT 007E2D  
                  __end_of___awdiv 1360                    __end_of___awmod 1584  
                  __end_of___lldiv 1628                    ___awdiv@divisor 0003  
                  ___awdiv@counter 0005                              _RCREG 000FAE  
                     vfpfcnvrt@fmt 0042                              _SPBRG 000FAF  
          __size_of_Lcd_Set_Cursor 0066                              _TRISD 000F95  
                            _TXREG 000FAD                ___lmul@multiplicand 0005  
               __size_of_UART_Init 0094                 __size_of_UART_Send 003A  
                __end_of_BCD_2_DEC 1B3E                              _flags 007C  
                __end_of_I2C_Begin 1D34                              _fputc 11D2  
                            _fputs 1B3E                              pad@fp 0011  
                            _width 0078                              _putch 1D3A  
                            dtoa@d 001E                              dtoa@i 003E  
                            dtoa@n 0036                              dtoa@p 0030  
                            dtoa@s 0034                              dtoa@w 0032  
                __end_of_I2C_Write 1D24                              tablat 000FF5  
                __end_of_DEC_2_BCD 1AAA          __size_of_Lcd_Print_String 0056  
                            status 000FD8                    __end_of_sprintf 1AF8  
          __size_of_Lcd_Print_Char 007C                    __initialization 19AA  
                     __end_of_main 097C                       __end_of_dtoa 0C5A  
                        ??_I2C_End 0002                             ??_main 0070  
                           ??_dtoa 0026                 __size_of_Lcd_Clear 000E  
                    __activetblptr 000001                 __size_of_Lcd_Start 0064  
                           ?_fputc 0001                             ?_fputs 000A  
                 ___awdiv@dividend 0001                             ?_putch 0001  
                        ??_Lcd_Cmd 0002                             _SPBRGH 000FB0  
                           _SSPADD 000FC8                             _TRISC3 007CA3  
                           _TRISC4 007CA4                             _SSPBUF 000FC9  
                UART_Send_String@i 0005                       vfprintf@cfmt 0056  
                __end_of_UART_Init 16BC                  __end_of_UART_Send 1C3C  
                           ___lmul 17B8                          ??___aodiv 0011  
                        ??___aomod 0011                             ___wmul 1CA0  
                        ??___awdiv 0005                          ??___awmod 0005  
                        ??___lldiv 0015                        ?_Lcd_SetBit 0001  
                           clear_0 19D2                             clear_1 19E4  
                           clear_2 19F0                   ___awdiv@quotient 0007  
                  ___awmod@divisor 0003                             isa$std 000001  
                  ___awmod@counter 0005            __size_of_I2C_Initialize 0080  
                           pad@buf 0013   __end_of_Update_Current_Date_Time 11D2  
                           dtoa@fp 001C                  ?_UART_Send_String 0003  
                           _strlen 1C3C                             fputc@c 0001  
                        ?_I2C_Idle 0001                             fputs@c 000E  
                           fputs@i 000F                             fputs@s 000A  
                        ?_I2C_Read 0001                 ??_UART_Send_String 0005  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                           putch@c 0001                   __end_of_vfprintf 194E  
                        ??_sprintf 0068                    Lcd_Set_Cursor@a 0005  
                  Lcd_Set_Cursor@b 0004                    Lcd_Set_Cursor@y 0007  
                  Lcd_Set_Cursor@z 0006                         __accesstop 0080  
          __end_of__initialization 19F6                  __end_of_Lcd_Clear 1D1A  
                    ___rparam_used 000001                  __end_of_Lcd_Start 18EC  
                   __pcstackCOMRAM 0001                       __pidataBANK0 1D34  
                    __end_of_fputc 129C                      __end_of_fputs 1B82  
                    __end_of_putch 1D3C                     _Lcd_Set_Cursor 1822  
                       ??_I2C_Idle 0001                         ??_I2C_Read 0002  
                          ??_fputc 0005                            ??_fputs 000E  
                          ??_putch 0001                         __pbssBANK0 0080  
                       __pbssBANK1 0100                   _Lcd_Print_String 1A04  
              __size_of_Lcd_SetBit 005C                     _Lcd_Print_Char 173C  
                          ?___lmul 0001                            ?___wmul 0001  
     UART_Init@baudrate_calculated 0026                            _I2C_End 1D24  
                   ___lmul@product 0009                 Lcd_SetBit@data_bit 0001  
           __end_of_Lcd_Set_Cursor 1888                            ?_strlen 0001  
                 I2C_Read@incoming 0003                 __size_of_vfpfcnvrt 01B2  
         _Update_Current_Date_Time 10F8             __size_of_Set_Time_Date 00B2  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7                          _BCD_2_DEC 1AF8  
                  Lcd_Print_Char@i 0004                            _Lcd_Cmd 1CEC  
           __end_of_Lcd_Print_Char 17B8                          _I2C_Begin 1D2C  
                        _I2C_Write 1D1A                          _DEC_2_BCD 1A5A  
                          __Hparam 0000                            __Lparam 0000  
                          ___aodiv 0E0C                            ___aomod 0F94  
                          ___awdiv 129C                    __size_of___lmul 006A  
                          ___awmod 14D4                            ___lldiv 1584  
                  __size_of___wmul 0026                          ?_vfprintf 0050  
                     __psmallconst 0600                            __pcinit 19AA  
                   _I2C_Initialize 16BC                            __ramtop 0600  
                  ?_Lcd_Set_Cursor 0004                            __ptext0 0648  
                          __ptext1 1AAA                            __ptext2 18EC  
                          __ptext3 0C5A                            __ptext4 097C  
                          __ptext5 1360                            __ptext6 1C3C  
                          __ptext7 1B3E                            __ptext8 11D2  
                          __ptext9 1D3A                    __size_of_strlen 0036  
                          _counter 007F                       __size_of_abs 0040  
                     __size_of_pad 00C2                   ___awmod@dividend 0001  
                          _sprintf 1AAA               end_of_initialization 19F6  
                       ?_BCD_2_DEC 0007                         ?_I2C_Begin 0001  
                          fputc@fp 0003                    ?_Lcd_Print_Char 0001  
                          fputs@fp 000C                         ?_I2C_Write 000D  
                       ?_DEC_2_BCD 0009                    ___lldiv@divisor 0011  
                  ___lldiv@counter 0019                      _Set_Time_Date 1422  
                __end_of_vfpfcnvrt 0E0C                          _RCSTAbits 000FAB  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE             __end_of_I2C_Initialize 173C  
                       ??_vfprintf 0056                       ??_Lcd_SetBit 0001  
                          strlen@a 0003                            strlen@s 0001  
                        _UART_Init 1628                          _UART_Send 1C02  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
             UART_Send_String@text 0003                  __size_of_I2C_Idle 0026  
                __size_of_I2C_Read 002E          __size_of_UART_Send_String 0040  
               __end_of_Lcd_SetBit 19AA                          _TXSTAbits 000FAC  
                   ?_Set_Time_Date 0001                          _Lcd_Clear 1D0C  
              BCD_2_DEC@to_convert 0007                    ?_I2C_Initialize 001A  
                        _Lcd_Start 1888                     __end_of___lmul 1822  
                      vfpfcnvrt@ap 0044                        vfpfcnvrt@fp 0040  
                      vfpfcnvrt@ll 0048                     __end_of___wmul 1CC6  
                      _BAUDCONbits 000FB8                         ?_UART_Init 001A  
                       ?_UART_Send 0001           __end_of_Lcd_Print_String 1A5A  
                   __end_of_strlen 1C72                start_initialization 19AA  
                      __end_of_abs 1BC2                        __end_of_pad 1422  
                      ??_BCD_2_DEC 0009                        ??_I2C_Begin 0002  
                Lcd_Print_String@a 0009                  Lcd_Print_String@i 000D  
                      ??_I2C_Write 000F                        ??_DEC_2_BCD 000B  
                      vfprintf@fmt 0052                         ?_Lcd_Clear 0001  
                         ??___lmul 0009                           ??___wmul 0005  
                       ?_Lcd_Start 0001                        __pdataBANK0 00A2  
                         ?_I2C_End 0001         ??_Update_Current_Date_Time 000F  
       Lcd_Print_Char@Lower_Nibble 0002                           ??_strlen 0003  
                      __pbssCOMRAM 0072                   ___aodiv@dividend 0001  
                         ?_Lcd_Cmd 0001                    ??_Set_Time_Date 000F  
                     _current_time 0072                          _dtoa$1116 002E  
                      I2C_Read@ack 0002                   ??_Lcd_Set_Cursor 0005  
                         ?___aodiv 0001                           ?___aomod 0001  
                         ?___awdiv 0001                   ___aodiv@quotient 0013  
                         ?___awmod 0001                           ?___lldiv 000D  
                      ??_UART_Init 001E                        ??_UART_Send 0001  
                __size_of_vfprintf 0062                        __smallconst 0600  
                    UART_Send@data 0002                           _I2C_Idle 1CC6  
                         _I2C_Read 1C72                   ??_Lcd_Print_Char 0002  
                         ?_sprintf 0058                     __size_of_fputc 00CA  
                   __size_of_fputs 0044                     __size_of_putch 0002  
                 _UART_Send_String 1BC2                     ___wmul@product 0005  
                         _LATBbits 000F8A                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D                           Lcd_Cmd@a 0003  
                      ??_Lcd_Clear 0004                          _uart_data 007E  
                      ??_Lcd_Start 0004                          _vfpfcnvrt 0C5A  
                UART_Init@baudrate 001A                   __size_of_I2C_End 0008  
                ___wmul@multiplier 0001                  ___lmul@multiplier 0001  
                        copy_data0 19BE                   __size_of_Lcd_Cmd 0020  
                 ??_I2C_Initialize 001E                           __Hrparam 0000  
                       vfprintf@ap 0054                           __Lrparam 0000  
                       vfprintf@fp 0050                       __Lsmallconst 0600  
                    I2C_Write@data 000D                   __size_of___aodiv 0188  
                 __size_of___aomod 0164                   __size_of___awdiv 00C4  
                 __size_of___awmod 00B0                   __size_of___lldiv 00A4  
                       ?_vfpfcnvrt 0040                    ___aodiv@divisor 0009  
                  ___aodiv@counter 0011                  ?_Lcd_Print_String 0009  
                       sprintf@fmt 005A                 ??_Lcd_Print_String 000B  
                         __ptext10 1B82                           __ptext11 0F94  
                         __ptext20 1422                           __ptext12 0E0C  
                         __ptext21 1D1A                           __ptext13 10F8  
                         __ptext30 1A04                           __ptext22 1D24  
                         __ptext14 1C72                           __ptext31 173C  
                         __ptext23 1D2C                           __ptext15 1AF8  
                         __ptext32 1D0C                           __ptext24 1CC6  
                         __ptext16 1CA0                           __ptext33 1CEC  
                         __ptext25 1A5A                           __ptext17 1BC2  
                         __ptext34 194E                           __ptext26 14D4  
                         __ptext18 1C02                           __ptext35 16BC  
                         __ptext27 129C                           __ptext19 1628  
                         __ptext36 17B8                           __ptext28 1888  
                         __ptext37 1584                           __ptext29 1822  
                 __size_of_sprintf 004E                      __size_of_main 0334  
                    __size_of_dtoa 02DE                I2C_Initialize@feq_K 001A  
                         _set_time 00A2                           isa$xinst 000000  
                         _vfprintf 18EC         Lcd_Print_Char@Upper_Nibble 0003  
                 ___aomod@dividend 0001                          sprintf@ap 0068  
                 ___lldiv@dividend 000D                    ___aomod@divisor 0009  
                      ??_vfpfcnvrt 0046                    ___aomod@counter 0011  
               Lcd_Set_Cursor@temp 0008           __end_of_UART_Send_String 1C02  
                         sprintf@f 006A                           sprintf@s 0058  
                 ___lldiv@quotient 0015                       _print_buffer 0100  
__size_of_Update_Current_Date_Time 00DA                       ___aodiv@sign 0012  
        ?_Update_Current_Date_Time 0001                       ___aomod@sign 0012  
            __end_of_Set_Time_Date 14D4                DEC_2_BCD@to_convert 0009  
               __size_of_BCD_2_DEC 0046  
